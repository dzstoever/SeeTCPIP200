//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace csi.see.classlib1.DataSets {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("VseDbDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class VseDbDataSet : global::System.Data.DataSet {
        
        private Connection_BSDCDataTable tableConnection_BSDC;
        
        private Connection_RecordsDataTable tableConnection_Records;
        
        private Connection_StatsDataTable tableConnection_Stats;
        
        private CPU_StatsDataTable tableCPU_Stats;
        
        private ForeignIP_StatsDataTable tableForeignIP_Stats;
        
        private FTP_RecordsDataTable tableFTP_Records;
        
        private JobStep_RecordsDataTable tableJobStep_Records;
        
        private Link_AdapterDataTable tableLink_Adapter;
        
        private Partition_Job_StepDataTable tablePartition_Job_Step;
        
        private SeeServer_SummaryDataTable tableSeeServer_Summary;
        
        private Startup_RecordsDataTable tableStartup_Records;
        
        private TCPIP_ClientsDataTable tableTCPIP_Clients;
        
        private TCPIP_DaemonsDataTable tableTCPIP_Daemons;
        
        private TCPIP_DispatcherDataTable tableTCPIP_Dispatcher;
        
        private TCPIP_ErrorsDataTable tableTCPIP_Errors;
        
        private TCPIP_MessagesDataTable tableTCPIP_Messages;
        
        private TCPIP_OtherDataTable tableTCPIP_Other;
        
        private TCPIP_SummaryDataTable tableTCPIP_Summary;
        
        private TCPIP_TrafficDataTable tableTCPIP_Traffic;
        
        private VSE_StatsDataTable tableVSE_Stats;
        
        private VSE_SummaryDataTable tableVSE_Summary;
        
        private ForeignIP_AllDataTable tableForeignIP_All;
        
        private Connection_Stats_by_LocalPortDataTable tableConnection_Stats_by_LocalPort;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public VseDbDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected VseDbDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Connection_BSDC"] != null)) {
                    base.Tables.Add(new Connection_BSDCDataTable(ds.Tables["Connection_BSDC"]));
                }
                if ((ds.Tables["Connection_Records"] != null)) {
                    base.Tables.Add(new Connection_RecordsDataTable(ds.Tables["Connection_Records"]));
                }
                if ((ds.Tables["Connection_Stats"] != null)) {
                    base.Tables.Add(new Connection_StatsDataTable(ds.Tables["Connection_Stats"]));
                }
                if ((ds.Tables["CPU_Stats"] != null)) {
                    base.Tables.Add(new CPU_StatsDataTable(ds.Tables["CPU_Stats"]));
                }
                if ((ds.Tables["ForeignIP_Stats"] != null)) {
                    base.Tables.Add(new ForeignIP_StatsDataTable(ds.Tables["ForeignIP_Stats"]));
                }
                if ((ds.Tables["FTP_Records"] != null)) {
                    base.Tables.Add(new FTP_RecordsDataTable(ds.Tables["FTP_Records"]));
                }
                if ((ds.Tables["JobStep_Records"] != null)) {
                    base.Tables.Add(new JobStep_RecordsDataTable(ds.Tables["JobStep_Records"]));
                }
                if ((ds.Tables["Link_Adapter"] != null)) {
                    base.Tables.Add(new Link_AdapterDataTable(ds.Tables["Link_Adapter"]));
                }
                if ((ds.Tables["Partition_Job_Step"] != null)) {
                    base.Tables.Add(new Partition_Job_StepDataTable(ds.Tables["Partition_Job_Step"]));
                }
                if ((ds.Tables["SeeServer_Summary"] != null)) {
                    base.Tables.Add(new SeeServer_SummaryDataTable(ds.Tables["SeeServer_Summary"]));
                }
                if ((ds.Tables["Startup_Records"] != null)) {
                    base.Tables.Add(new Startup_RecordsDataTable(ds.Tables["Startup_Records"]));
                }
                if ((ds.Tables["TCPIP_Clients"] != null)) {
                    base.Tables.Add(new TCPIP_ClientsDataTable(ds.Tables["TCPIP_Clients"]));
                }
                if ((ds.Tables["TCPIP_Daemons"] != null)) {
                    base.Tables.Add(new TCPIP_DaemonsDataTable(ds.Tables["TCPIP_Daemons"]));
                }
                if ((ds.Tables["TCPIP_Dispatcher"] != null)) {
                    base.Tables.Add(new TCPIP_DispatcherDataTable(ds.Tables["TCPIP_Dispatcher"]));
                }
                if ((ds.Tables["TCPIP_Errors"] != null)) {
                    base.Tables.Add(new TCPIP_ErrorsDataTable(ds.Tables["TCPIP_Errors"]));
                }
                if ((ds.Tables["TCPIP_Messages"] != null)) {
                    base.Tables.Add(new TCPIP_MessagesDataTable(ds.Tables["TCPIP_Messages"]));
                }
                if ((ds.Tables["TCPIP_Other"] != null)) {
                    base.Tables.Add(new TCPIP_OtherDataTable(ds.Tables["TCPIP_Other"]));
                }
                if ((ds.Tables["TCPIP_Summary"] != null)) {
                    base.Tables.Add(new TCPIP_SummaryDataTable(ds.Tables["TCPIP_Summary"]));
                }
                if ((ds.Tables["TCPIP_Traffic"] != null)) {
                    base.Tables.Add(new TCPIP_TrafficDataTable(ds.Tables["TCPIP_Traffic"]));
                }
                if ((ds.Tables["VSE_Stats"] != null)) {
                    base.Tables.Add(new VSE_StatsDataTable(ds.Tables["VSE_Stats"]));
                }
                if ((ds.Tables["VSE_Summary"] != null)) {
                    base.Tables.Add(new VSE_SummaryDataTable(ds.Tables["VSE_Summary"]));
                }
                if ((ds.Tables["ForeignIP_All"] != null)) {
                    base.Tables.Add(new ForeignIP_AllDataTable(ds.Tables["ForeignIP_All"]));
                }
                if ((ds.Tables["Connection_Stats_by_LocalPort"] != null)) {
                    base.Tables.Add(new Connection_Stats_by_LocalPortDataTable(ds.Tables["Connection_Stats_by_LocalPort"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Connection_BSDCDataTable Connection_BSDC {
            get {
                return this.tableConnection_BSDC;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Connection_RecordsDataTable Connection_Records {
            get {
                return this.tableConnection_Records;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Connection_StatsDataTable Connection_Stats {
            get {
                return this.tableConnection_Stats;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CPU_StatsDataTable CPU_Stats {
            get {
                return this.tableCPU_Stats;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ForeignIP_StatsDataTable ForeignIP_Stats {
            get {
                return this.tableForeignIP_Stats;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FTP_RecordsDataTable FTP_Records {
            get {
                return this.tableFTP_Records;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public JobStep_RecordsDataTable JobStep_Records {
            get {
                return this.tableJobStep_Records;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Link_AdapterDataTable Link_Adapter {
            get {
                return this.tableLink_Adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Partition_Job_StepDataTable Partition_Job_Step {
            get {
                return this.tablePartition_Job_Step;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SeeServer_SummaryDataTable SeeServer_Summary {
            get {
                return this.tableSeeServer_Summary;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Startup_RecordsDataTable Startup_Records {
            get {
                return this.tableStartup_Records;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TCPIP_ClientsDataTable TCPIP_Clients {
            get {
                return this.tableTCPIP_Clients;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TCPIP_DaemonsDataTable TCPIP_Daemons {
            get {
                return this.tableTCPIP_Daemons;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TCPIP_DispatcherDataTable TCPIP_Dispatcher {
            get {
                return this.tableTCPIP_Dispatcher;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TCPIP_ErrorsDataTable TCPIP_Errors {
            get {
                return this.tableTCPIP_Errors;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TCPIP_MessagesDataTable TCPIP_Messages {
            get {
                return this.tableTCPIP_Messages;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TCPIP_OtherDataTable TCPIP_Other {
            get {
                return this.tableTCPIP_Other;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TCPIP_SummaryDataTable TCPIP_Summary {
            get {
                return this.tableTCPIP_Summary;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TCPIP_TrafficDataTable TCPIP_Traffic {
            get {
                return this.tableTCPIP_Traffic;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public VSE_StatsDataTable VSE_Stats {
            get {
                return this.tableVSE_Stats;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public VSE_SummaryDataTable VSE_Summary {
            get {
                return this.tableVSE_Summary;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ForeignIP_AllDataTable ForeignIP_All {
            get {
                return this.tableForeignIP_All;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Connection_Stats_by_LocalPortDataTable Connection_Stats_by_LocalPort {
            get {
                return this.tableConnection_Stats_by_LocalPort;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            VseDbDataSet cln = ((VseDbDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Connection_BSDC"] != null)) {
                    base.Tables.Add(new Connection_BSDCDataTable(ds.Tables["Connection_BSDC"]));
                }
                if ((ds.Tables["Connection_Records"] != null)) {
                    base.Tables.Add(new Connection_RecordsDataTable(ds.Tables["Connection_Records"]));
                }
                if ((ds.Tables["Connection_Stats"] != null)) {
                    base.Tables.Add(new Connection_StatsDataTable(ds.Tables["Connection_Stats"]));
                }
                if ((ds.Tables["CPU_Stats"] != null)) {
                    base.Tables.Add(new CPU_StatsDataTable(ds.Tables["CPU_Stats"]));
                }
                if ((ds.Tables["ForeignIP_Stats"] != null)) {
                    base.Tables.Add(new ForeignIP_StatsDataTable(ds.Tables["ForeignIP_Stats"]));
                }
                if ((ds.Tables["FTP_Records"] != null)) {
                    base.Tables.Add(new FTP_RecordsDataTable(ds.Tables["FTP_Records"]));
                }
                if ((ds.Tables["JobStep_Records"] != null)) {
                    base.Tables.Add(new JobStep_RecordsDataTable(ds.Tables["JobStep_Records"]));
                }
                if ((ds.Tables["Link_Adapter"] != null)) {
                    base.Tables.Add(new Link_AdapterDataTable(ds.Tables["Link_Adapter"]));
                }
                if ((ds.Tables["Partition_Job_Step"] != null)) {
                    base.Tables.Add(new Partition_Job_StepDataTable(ds.Tables["Partition_Job_Step"]));
                }
                if ((ds.Tables["SeeServer_Summary"] != null)) {
                    base.Tables.Add(new SeeServer_SummaryDataTable(ds.Tables["SeeServer_Summary"]));
                }
                if ((ds.Tables["Startup_Records"] != null)) {
                    base.Tables.Add(new Startup_RecordsDataTable(ds.Tables["Startup_Records"]));
                }
                if ((ds.Tables["TCPIP_Clients"] != null)) {
                    base.Tables.Add(new TCPIP_ClientsDataTable(ds.Tables["TCPIP_Clients"]));
                }
                if ((ds.Tables["TCPIP_Daemons"] != null)) {
                    base.Tables.Add(new TCPIP_DaemonsDataTable(ds.Tables["TCPIP_Daemons"]));
                }
                if ((ds.Tables["TCPIP_Dispatcher"] != null)) {
                    base.Tables.Add(new TCPIP_DispatcherDataTable(ds.Tables["TCPIP_Dispatcher"]));
                }
                if ((ds.Tables["TCPIP_Errors"] != null)) {
                    base.Tables.Add(new TCPIP_ErrorsDataTable(ds.Tables["TCPIP_Errors"]));
                }
                if ((ds.Tables["TCPIP_Messages"] != null)) {
                    base.Tables.Add(new TCPIP_MessagesDataTable(ds.Tables["TCPIP_Messages"]));
                }
                if ((ds.Tables["TCPIP_Other"] != null)) {
                    base.Tables.Add(new TCPIP_OtherDataTable(ds.Tables["TCPIP_Other"]));
                }
                if ((ds.Tables["TCPIP_Summary"] != null)) {
                    base.Tables.Add(new TCPIP_SummaryDataTable(ds.Tables["TCPIP_Summary"]));
                }
                if ((ds.Tables["TCPIP_Traffic"] != null)) {
                    base.Tables.Add(new TCPIP_TrafficDataTable(ds.Tables["TCPIP_Traffic"]));
                }
                if ((ds.Tables["VSE_Stats"] != null)) {
                    base.Tables.Add(new VSE_StatsDataTable(ds.Tables["VSE_Stats"]));
                }
                if ((ds.Tables["VSE_Summary"] != null)) {
                    base.Tables.Add(new VSE_SummaryDataTable(ds.Tables["VSE_Summary"]));
                }
                if ((ds.Tables["ForeignIP_All"] != null)) {
                    base.Tables.Add(new ForeignIP_AllDataTable(ds.Tables["ForeignIP_All"]));
                }
                if ((ds.Tables["Connection_Stats_by_LocalPort"] != null)) {
                    base.Tables.Add(new Connection_Stats_by_LocalPortDataTable(ds.Tables["Connection_Stats_by_LocalPort"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableConnection_BSDC = ((Connection_BSDCDataTable)(base.Tables["Connection_BSDC"]));
            if ((initTable == true)) {
                if ((this.tableConnection_BSDC != null)) {
                    this.tableConnection_BSDC.InitVars();
                }
            }
            this.tableConnection_Records = ((Connection_RecordsDataTable)(base.Tables["Connection_Records"]));
            if ((initTable == true)) {
                if ((this.tableConnection_Records != null)) {
                    this.tableConnection_Records.InitVars();
                }
            }
            this.tableConnection_Stats = ((Connection_StatsDataTable)(base.Tables["Connection_Stats"]));
            if ((initTable == true)) {
                if ((this.tableConnection_Stats != null)) {
                    this.tableConnection_Stats.InitVars();
                }
            }
            this.tableCPU_Stats = ((CPU_StatsDataTable)(base.Tables["CPU_Stats"]));
            if ((initTable == true)) {
                if ((this.tableCPU_Stats != null)) {
                    this.tableCPU_Stats.InitVars();
                }
            }
            this.tableForeignIP_Stats = ((ForeignIP_StatsDataTable)(base.Tables["ForeignIP_Stats"]));
            if ((initTable == true)) {
                if ((this.tableForeignIP_Stats != null)) {
                    this.tableForeignIP_Stats.InitVars();
                }
            }
            this.tableFTP_Records = ((FTP_RecordsDataTable)(base.Tables["FTP_Records"]));
            if ((initTable == true)) {
                if ((this.tableFTP_Records != null)) {
                    this.tableFTP_Records.InitVars();
                }
            }
            this.tableJobStep_Records = ((JobStep_RecordsDataTable)(base.Tables["JobStep_Records"]));
            if ((initTable == true)) {
                if ((this.tableJobStep_Records != null)) {
                    this.tableJobStep_Records.InitVars();
                }
            }
            this.tableLink_Adapter = ((Link_AdapterDataTable)(base.Tables["Link_Adapter"]));
            if ((initTable == true)) {
                if ((this.tableLink_Adapter != null)) {
                    this.tableLink_Adapter.InitVars();
                }
            }
            this.tablePartition_Job_Step = ((Partition_Job_StepDataTable)(base.Tables["Partition_Job_Step"]));
            if ((initTable == true)) {
                if ((this.tablePartition_Job_Step != null)) {
                    this.tablePartition_Job_Step.InitVars();
                }
            }
            this.tableSeeServer_Summary = ((SeeServer_SummaryDataTable)(base.Tables["SeeServer_Summary"]));
            if ((initTable == true)) {
                if ((this.tableSeeServer_Summary != null)) {
                    this.tableSeeServer_Summary.InitVars();
                }
            }
            this.tableStartup_Records = ((Startup_RecordsDataTable)(base.Tables["Startup_Records"]));
            if ((initTable == true)) {
                if ((this.tableStartup_Records != null)) {
                    this.tableStartup_Records.InitVars();
                }
            }
            this.tableTCPIP_Clients = ((TCPIP_ClientsDataTable)(base.Tables["TCPIP_Clients"]));
            if ((initTable == true)) {
                if ((this.tableTCPIP_Clients != null)) {
                    this.tableTCPIP_Clients.InitVars();
                }
            }
            this.tableTCPIP_Daemons = ((TCPIP_DaemonsDataTable)(base.Tables["TCPIP_Daemons"]));
            if ((initTable == true)) {
                if ((this.tableTCPIP_Daemons != null)) {
                    this.tableTCPIP_Daemons.InitVars();
                }
            }
            this.tableTCPIP_Dispatcher = ((TCPIP_DispatcherDataTable)(base.Tables["TCPIP_Dispatcher"]));
            if ((initTable == true)) {
                if ((this.tableTCPIP_Dispatcher != null)) {
                    this.tableTCPIP_Dispatcher.InitVars();
                }
            }
            this.tableTCPIP_Errors = ((TCPIP_ErrorsDataTable)(base.Tables["TCPIP_Errors"]));
            if ((initTable == true)) {
                if ((this.tableTCPIP_Errors != null)) {
                    this.tableTCPIP_Errors.InitVars();
                }
            }
            this.tableTCPIP_Messages = ((TCPIP_MessagesDataTable)(base.Tables["TCPIP_Messages"]));
            if ((initTable == true)) {
                if ((this.tableTCPIP_Messages != null)) {
                    this.tableTCPIP_Messages.InitVars();
                }
            }
            this.tableTCPIP_Other = ((TCPIP_OtherDataTable)(base.Tables["TCPIP_Other"]));
            if ((initTable == true)) {
                if ((this.tableTCPIP_Other != null)) {
                    this.tableTCPIP_Other.InitVars();
                }
            }
            this.tableTCPIP_Summary = ((TCPIP_SummaryDataTable)(base.Tables["TCPIP_Summary"]));
            if ((initTable == true)) {
                if ((this.tableTCPIP_Summary != null)) {
                    this.tableTCPIP_Summary.InitVars();
                }
            }
            this.tableTCPIP_Traffic = ((TCPIP_TrafficDataTable)(base.Tables["TCPIP_Traffic"]));
            if ((initTable == true)) {
                if ((this.tableTCPIP_Traffic != null)) {
                    this.tableTCPIP_Traffic.InitVars();
                }
            }
            this.tableVSE_Stats = ((VSE_StatsDataTable)(base.Tables["VSE_Stats"]));
            if ((initTable == true)) {
                if ((this.tableVSE_Stats != null)) {
                    this.tableVSE_Stats.InitVars();
                }
            }
            this.tableVSE_Summary = ((VSE_SummaryDataTable)(base.Tables["VSE_Summary"]));
            if ((initTable == true)) {
                if ((this.tableVSE_Summary != null)) {
                    this.tableVSE_Summary.InitVars();
                }
            }
            this.tableForeignIP_All = ((ForeignIP_AllDataTable)(base.Tables["ForeignIP_All"]));
            if ((initTable == true)) {
                if ((this.tableForeignIP_All != null)) {
                    this.tableForeignIP_All.InitVars();
                }
            }
            this.tableConnection_Stats_by_LocalPort = ((Connection_Stats_by_LocalPortDataTable)(base.Tables["Connection_Stats_by_LocalPort"]));
            if ((initTable == true)) {
                if ((this.tableConnection_Stats_by_LocalPort != null)) {
                    this.tableConnection_Stats_by_LocalPort.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "VseDbDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/VseDbDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableConnection_BSDC = new Connection_BSDCDataTable();
            base.Tables.Add(this.tableConnection_BSDC);
            this.tableConnection_Records = new Connection_RecordsDataTable();
            base.Tables.Add(this.tableConnection_Records);
            this.tableConnection_Stats = new Connection_StatsDataTable();
            base.Tables.Add(this.tableConnection_Stats);
            this.tableCPU_Stats = new CPU_StatsDataTable();
            base.Tables.Add(this.tableCPU_Stats);
            this.tableForeignIP_Stats = new ForeignIP_StatsDataTable();
            base.Tables.Add(this.tableForeignIP_Stats);
            this.tableFTP_Records = new FTP_RecordsDataTable();
            base.Tables.Add(this.tableFTP_Records);
            this.tableJobStep_Records = new JobStep_RecordsDataTable();
            base.Tables.Add(this.tableJobStep_Records);
            this.tableLink_Adapter = new Link_AdapterDataTable();
            base.Tables.Add(this.tableLink_Adapter);
            this.tablePartition_Job_Step = new Partition_Job_StepDataTable();
            base.Tables.Add(this.tablePartition_Job_Step);
            this.tableSeeServer_Summary = new SeeServer_SummaryDataTable();
            base.Tables.Add(this.tableSeeServer_Summary);
            this.tableStartup_Records = new Startup_RecordsDataTable();
            base.Tables.Add(this.tableStartup_Records);
            this.tableTCPIP_Clients = new TCPIP_ClientsDataTable();
            base.Tables.Add(this.tableTCPIP_Clients);
            this.tableTCPIP_Daemons = new TCPIP_DaemonsDataTable();
            base.Tables.Add(this.tableTCPIP_Daemons);
            this.tableTCPIP_Dispatcher = new TCPIP_DispatcherDataTable();
            base.Tables.Add(this.tableTCPIP_Dispatcher);
            this.tableTCPIP_Errors = new TCPIP_ErrorsDataTable();
            base.Tables.Add(this.tableTCPIP_Errors);
            this.tableTCPIP_Messages = new TCPIP_MessagesDataTable();
            base.Tables.Add(this.tableTCPIP_Messages);
            this.tableTCPIP_Other = new TCPIP_OtherDataTable();
            base.Tables.Add(this.tableTCPIP_Other);
            this.tableTCPIP_Summary = new TCPIP_SummaryDataTable();
            base.Tables.Add(this.tableTCPIP_Summary);
            this.tableTCPIP_Traffic = new TCPIP_TrafficDataTable();
            base.Tables.Add(this.tableTCPIP_Traffic);
            this.tableVSE_Stats = new VSE_StatsDataTable();
            base.Tables.Add(this.tableVSE_Stats);
            this.tableVSE_Summary = new VSE_SummaryDataTable();
            base.Tables.Add(this.tableVSE_Summary);
            this.tableForeignIP_All = new ForeignIP_AllDataTable();
            base.Tables.Add(this.tableForeignIP_All);
            this.tableConnection_Stats_by_LocalPort = new Connection_Stats_by_LocalPortDataTable();
            base.Tables.Add(this.tableConnection_Stats_by_LocalPort);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeConnection_BSDC() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeConnection_Records() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeConnection_Stats() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeCPU_Stats() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeForeignIP_Stats() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeFTP_Records() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeJobStep_Records() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeLink_Adapter() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializePartition_Job_Step() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSeeServer_Summary() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeStartup_Records() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTCPIP_Clients() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTCPIP_Daemons() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTCPIP_Dispatcher() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTCPIP_Errors() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTCPIP_Messages() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTCPIP_Other() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTCPIP_Summary() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTCPIP_Traffic() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeVSE_Stats() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeVSE_Summary() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeForeignIP_All() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeConnection_Stats_by_LocalPort() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            VseDbDataSet ds = new VseDbDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Connection_BSDCRowChangeEventHandler(object sender, Connection_BSDCRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Connection_RecordsRowChangeEventHandler(object sender, Connection_RecordsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Connection_StatsRowChangeEventHandler(object sender, Connection_StatsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void CPU_StatsRowChangeEventHandler(object sender, CPU_StatsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ForeignIP_StatsRowChangeEventHandler(object sender, ForeignIP_StatsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void FTP_RecordsRowChangeEventHandler(object sender, FTP_RecordsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void JobStep_RecordsRowChangeEventHandler(object sender, JobStep_RecordsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Link_AdapterRowChangeEventHandler(object sender, Link_AdapterRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Partition_Job_StepRowChangeEventHandler(object sender, Partition_Job_StepRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SeeServer_SummaryRowChangeEventHandler(object sender, SeeServer_SummaryRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Startup_RecordsRowChangeEventHandler(object sender, Startup_RecordsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TCPIP_ClientsRowChangeEventHandler(object sender, TCPIP_ClientsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TCPIP_DaemonsRowChangeEventHandler(object sender, TCPIP_DaemonsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TCPIP_DispatcherRowChangeEventHandler(object sender, TCPIP_DispatcherRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TCPIP_ErrorsRowChangeEventHandler(object sender, TCPIP_ErrorsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TCPIP_MessagesRowChangeEventHandler(object sender, TCPIP_MessagesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TCPIP_OtherRowChangeEventHandler(object sender, TCPIP_OtherRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TCPIP_SummaryRowChangeEventHandler(object sender, TCPIP_SummaryRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TCPIP_TrafficRowChangeEventHandler(object sender, TCPIP_TrafficRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void VSE_StatsRowChangeEventHandler(object sender, VSE_StatsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void VSE_SummaryRowChangeEventHandler(object sender, VSE_SummaryRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ForeignIP_AllRowChangeEventHandler(object sender, ForeignIP_AllRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Connection_Stats_by_LocalPortRowChangeEventHandler(object sender, Connection_Stats_by_LocalPortRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Connection_BSDCDataTable : global::System.Data.TypedTableBase<Connection_BSDCRow> {
            
            private global::System.Data.DataColumn columnPoll_Time;
            
            private global::System.Data.DataColumn columnStore_Clock;
            
            private global::System.Data.DataColumn columnCCBLOK_ID;
            
            private global::System.Data.DataColumn columnSock_Descriptor;
            
            private global::System.Data.DataColumn columnQueue_Depth;
            
            private global::System.Data.DataColumn columnForeign_IP;
            
            private global::System.Data.DataColumn columnLocal_IP;
            
            private global::System.Data.DataColumn columnForeign_Port;
            
            private global::System.Data.DataColumn columnLocal_Port;
            
            private global::System.Data.DataColumn columnBase_Sock_Addr;
            
            private global::System.Data.DataColumn columnCICS_Trans_ID;
            
            private global::System.Data.DataColumn columnCICS_Task;
            
            private global::System.Data.DataColumn columnSock_Number;
            
            private global::System.Data.DataColumn columnSock_Addr;
            
            private global::System.Data.DataColumn columnFlag_1;
            
            private global::System.Data.DataColumn columnSock_Options;
            
            private global::System.Data.DataColumn columnFlag_2;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnPID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Connection_BSDCDataTable() {
                this.TableName = "Connection_BSDC";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Connection_BSDCDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Connection_BSDCDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Poll_TimeColumn {
                get {
                    return this.columnPoll_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Store_ClockColumn {
                get {
                    return this.columnStore_Clock;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CCBLOK_IDColumn {
                get {
                    return this.columnCCBLOK_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Sock_DescriptorColumn {
                get {
                    return this.columnSock_Descriptor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Queue_DepthColumn {
                get {
                    return this.columnQueue_Depth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Foreign_IPColumn {
                get {
                    return this.columnForeign_IP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Local_IPColumn {
                get {
                    return this.columnLocal_IP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Foreign_PortColumn {
                get {
                    return this.columnForeign_Port;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Local_PortColumn {
                get {
                    return this.columnLocal_Port;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Base_Sock_AddrColumn {
                get {
                    return this.columnBase_Sock_Addr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CICS_Trans_IDColumn {
                get {
                    return this.columnCICS_Trans_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CICS_TaskColumn {
                get {
                    return this.columnCICS_Task;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Sock_NumberColumn {
                get {
                    return this.columnSock_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Sock_AddrColumn {
                get {
                    return this.columnSock_Addr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Flag_1Column {
                get {
                    return this.columnFlag_1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Sock_OptionsColumn {
                get {
                    return this.columnSock_Options;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Flag_2Column {
                get {
                    return this.columnFlag_2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PIDColumn {
                get {
                    return this.columnPID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Connection_BSDCRow this[int index] {
                get {
                    return ((Connection_BSDCRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Connection_BSDCRowChangeEventHandler Connection_BSDCRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Connection_BSDCRowChangeEventHandler Connection_BSDCRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Connection_BSDCRowChangeEventHandler Connection_BSDCRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Connection_BSDCRowChangeEventHandler Connection_BSDCRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddConnection_BSDCRow(Connection_BSDCRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Connection_BSDCRow AddConnection_BSDCRow(
                        System.DateTime Poll_Time, 
                        System.DateTime Store_Clock, 
                        double CCBLOK_ID, 
                        string Sock_Descriptor, 
                        double Queue_Depth, 
                        string Foreign_IP, 
                        string Local_IP, 
                        double Foreign_Port, 
                        double Local_Port, 
                        string Base_Sock_Addr, 
                        string CICS_Trans_ID, 
                        double CICS_Task, 
                        double Sock_Number, 
                        string Sock_Addr, 
                        byte Flag_1, 
                        byte Sock_Options, 
                        byte Flag_2, 
                        byte Type, 
                        string PID) {
                Connection_BSDCRow rowConnection_BSDCRow = ((Connection_BSDCRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Poll_Time,
                        Store_Clock,
                        CCBLOK_ID,
                        Sock_Descriptor,
                        Queue_Depth,
                        Foreign_IP,
                        Local_IP,
                        Foreign_Port,
                        Local_Port,
                        Base_Sock_Addr,
                        CICS_Trans_ID,
                        CICS_Task,
                        Sock_Number,
                        Sock_Addr,
                        Flag_1,
                        Sock_Options,
                        Flag_2,
                        Type,
                        PID};
                rowConnection_BSDCRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowConnection_BSDCRow);
                return rowConnection_BSDCRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Connection_BSDCRow FindByPoll_TimeSock_NumberSock_Addr(System.DateTime Poll_Time, double Sock_Number, string Sock_Addr) {
                return ((Connection_BSDCRow)(this.Rows.Find(new object[] {
                            Poll_Time,
                            Sock_Number,
                            Sock_Addr})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Connection_BSDCDataTable cln = ((Connection_BSDCDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Connection_BSDCDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPoll_Time = base.Columns["Poll_Time"];
                this.columnStore_Clock = base.Columns["Store_Clock"];
                this.columnCCBLOK_ID = base.Columns["CCBLOK_ID"];
                this.columnSock_Descriptor = base.Columns["Sock_Descriptor"];
                this.columnQueue_Depth = base.Columns["Queue_Depth"];
                this.columnForeign_IP = base.Columns["Foreign_IP"];
                this.columnLocal_IP = base.Columns["Local_IP"];
                this.columnForeign_Port = base.Columns["Foreign_Port"];
                this.columnLocal_Port = base.Columns["Local_Port"];
                this.columnBase_Sock_Addr = base.Columns["Base_Sock_Addr"];
                this.columnCICS_Trans_ID = base.Columns["CICS_Trans_ID"];
                this.columnCICS_Task = base.Columns["CICS_Task"];
                this.columnSock_Number = base.Columns["Sock_Number"];
                this.columnSock_Addr = base.Columns["Sock_Addr"];
                this.columnFlag_1 = base.Columns["Flag_1"];
                this.columnSock_Options = base.Columns["Sock_Options"];
                this.columnFlag_2 = base.Columns["Flag_2"];
                this.columnType = base.Columns["Type"];
                this.columnPID = base.Columns["PID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPoll_Time = new global::System.Data.DataColumn("Poll_Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPoll_Time);
                this.columnStore_Clock = new global::System.Data.DataColumn("Store_Clock", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStore_Clock);
                this.columnCCBLOK_ID = new global::System.Data.DataColumn("CCBLOK_ID", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCCBLOK_ID);
                this.columnSock_Descriptor = new global::System.Data.DataColumn("Sock_Descriptor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSock_Descriptor);
                this.columnQueue_Depth = new global::System.Data.DataColumn("Queue_Depth", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQueue_Depth);
                this.columnForeign_IP = new global::System.Data.DataColumn("Foreign_IP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForeign_IP);
                this.columnLocal_IP = new global::System.Data.DataColumn("Local_IP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocal_IP);
                this.columnForeign_Port = new global::System.Data.DataColumn("Foreign_Port", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForeign_Port);
                this.columnLocal_Port = new global::System.Data.DataColumn("Local_Port", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocal_Port);
                this.columnBase_Sock_Addr = new global::System.Data.DataColumn("Base_Sock_Addr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBase_Sock_Addr);
                this.columnCICS_Trans_ID = new global::System.Data.DataColumn("CICS_Trans_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCICS_Trans_ID);
                this.columnCICS_Task = new global::System.Data.DataColumn("CICS_Task", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCICS_Task);
                this.columnSock_Number = new global::System.Data.DataColumn("Sock_Number", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSock_Number);
                this.columnSock_Addr = new global::System.Data.DataColumn("Sock_Addr", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSock_Addr);
                this.columnFlag_1 = new global::System.Data.DataColumn("Flag_1", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlag_1);
                this.columnSock_Options = new global::System.Data.DataColumn("Sock_Options", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSock_Options);
                this.columnFlag_2 = new global::System.Data.DataColumn("Flag_2", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlag_2);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnPID = new global::System.Data.DataColumn("PID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPoll_Time,
                                this.columnSock_Number,
                                this.columnSock_Addr}, true));
                this.columnPoll_Time.AllowDBNull = false;
                this.columnSock_Descriptor.MaxLength = 8;
                this.columnForeign_IP.MaxLength = 15;
                this.columnLocal_IP.MaxLength = 15;
                this.columnBase_Sock_Addr.MaxLength = 8;
                this.columnCICS_Trans_ID.MaxLength = 4;
                this.columnSock_Number.AllowDBNull = false;
                this.columnSock_Addr.AllowDBNull = false;
                this.columnSock_Addr.MaxLength = 8;
                this.columnPID.MaxLength = 2;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Connection_BSDCRow NewConnection_BSDCRow() {
                return ((Connection_BSDCRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Connection_BSDCRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Connection_BSDCRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Connection_BSDCRowChanged != null)) {
                    this.Connection_BSDCRowChanged(this, new Connection_BSDCRowChangeEvent(((Connection_BSDCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Connection_BSDCRowChanging != null)) {
                    this.Connection_BSDCRowChanging(this, new Connection_BSDCRowChangeEvent(((Connection_BSDCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Connection_BSDCRowDeleted != null)) {
                    this.Connection_BSDCRowDeleted(this, new Connection_BSDCRowChangeEvent(((Connection_BSDCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Connection_BSDCRowDeleting != null)) {
                    this.Connection_BSDCRowDeleting(this, new Connection_BSDCRowChangeEvent(((Connection_BSDCRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveConnection_BSDCRow(Connection_BSDCRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                VseDbDataSet ds = new VseDbDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Connection_BSDCDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Connection_RecordsDataTable : global::System.Data.TypedTableBase<Connection_RecordsRow> {
            
            private global::System.Data.DataColumn columnRecord_ID;
            
            private global::System.Data.DataColumn columnConn_PID;
            
            private global::System.Data.DataColumn columnLocal_Port;
            
            private global::System.Data.DataColumn columnForeign_Port;
            
            private global::System.Data.DataColumn columnForeign_IP;
            
            private global::System.Data.DataColumn columnConn_Start_Time;
            
            private global::System.Data.DataColumn columnConn_End_Time;
            
            private global::System.Data.DataColumn columnINT_EXT;
            
            private global::System.Data.DataColumn columnConn_State;
            
            private global::System.Data.DataColumn columnConn_Protocol;
            
            private global::System.Data.DataColumn columnHighest_Depth;
            
            private global::System.Data.DataColumn columnMax_Send_Window;
            
            private global::System.Data.DataColumn columnMax_Recv_Window;
            
            private global::System.Data.DataColumn columnRecv_Window_Closed;
            
            private global::System.Data.DataColumn columnSWS_Count;
            
            private global::System.Data.DataColumn columnInbound_Data;
            
            private global::System.Data.DataColumn columnInbound_Bytes;
            
            private global::System.Data.DataColumn columnInbound_Data_Dup;
            
            private global::System.Data.DataColumn columnInbound_Bytes_Dup;
            
            private global::System.Data.DataColumn columnInbound_Eff;
            
            private global::System.Data.DataColumn columnOutbound_Data;
            
            private global::System.Data.DataColumn columnOutbound_Bytes;
            
            private global::System.Data.DataColumn columnOutbound_Data_Retr;
            
            private global::System.Data.DataColumn columnOutbound_Bytes_Retr;
            
            private global::System.Data.DataColumn columnOutbound_Eff;
            
            private global::System.Data.DataColumn columnRecvs_Issued;
            
            private global::System.Data.DataColumn columnSends_Issued;
            
            private global::System.Data.DataColumn columnRetransmits;
            
            private global::System.Data.DataColumn columnIn_Retr_Mode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Connection_RecordsDataTable() {
                this.TableName = "Connection_Records";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Connection_RecordsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Connection_RecordsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Record_IDColumn {
                get {
                    return this.columnRecord_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Conn_PIDColumn {
                get {
                    return this.columnConn_PID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Local_PortColumn {
                get {
                    return this.columnLocal_Port;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Foreign_PortColumn {
                get {
                    return this.columnForeign_Port;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Foreign_IPColumn {
                get {
                    return this.columnForeign_IP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Conn_Start_TimeColumn {
                get {
                    return this.columnConn_Start_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Conn_End_TimeColumn {
                get {
                    return this.columnConn_End_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INT_EXTColumn {
                get {
                    return this.columnINT_EXT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Conn_StateColumn {
                get {
                    return this.columnConn_State;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Conn_ProtocolColumn {
                get {
                    return this.columnConn_Protocol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Highest_DepthColumn {
                get {
                    return this.columnHighest_Depth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Max_Send_WindowColumn {
                get {
                    return this.columnMax_Send_Window;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Max_Recv_WindowColumn {
                get {
                    return this.columnMax_Recv_Window;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Recv_Window_ClosedColumn {
                get {
                    return this.columnRecv_Window_Closed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SWS_CountColumn {
                get {
                    return this.columnSWS_Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Inbound_DataColumn {
                get {
                    return this.columnInbound_Data;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Inbound_BytesColumn {
                get {
                    return this.columnInbound_Bytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Inbound_Data_DupColumn {
                get {
                    return this.columnInbound_Data_Dup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Inbound_Bytes_DupColumn {
                get {
                    return this.columnInbound_Bytes_Dup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Inbound_EffColumn {
                get {
                    return this.columnInbound_Eff;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Outbound_DataColumn {
                get {
                    return this.columnOutbound_Data;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Outbound_BytesColumn {
                get {
                    return this.columnOutbound_Bytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Outbound_Data_RetrColumn {
                get {
                    return this.columnOutbound_Data_Retr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Outbound_Bytes_RetrColumn {
                get {
                    return this.columnOutbound_Bytes_Retr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Outbound_EffColumn {
                get {
                    return this.columnOutbound_Eff;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Recvs_IssuedColumn {
                get {
                    return this.columnRecvs_Issued;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Sends_IssuedColumn {
                get {
                    return this.columnSends_Issued;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RetransmitsColumn {
                get {
                    return this.columnRetransmits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn In_Retr_ModeColumn {
                get {
                    return this.columnIn_Retr_Mode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Connection_RecordsRow this[int index] {
                get {
                    return ((Connection_RecordsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Connection_RecordsRowChangeEventHandler Connection_RecordsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Connection_RecordsRowChangeEventHandler Connection_RecordsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Connection_RecordsRowChangeEventHandler Connection_RecordsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Connection_RecordsRowChangeEventHandler Connection_RecordsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddConnection_RecordsRow(Connection_RecordsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Connection_RecordsRow AddConnection_RecordsRow(
                        string Conn_PID, 
                        double Local_Port, 
                        double Foreign_Port, 
                        string Foreign_IP, 
                        System.DateTime Conn_Start_Time, 
                        System.DateTime Conn_End_Time, 
                        string INT_EXT, 
                        string Conn_State, 
                        string Conn_Protocol, 
                        double Highest_Depth, 
                        double Max_Send_Window, 
                        double Max_Recv_Window, 
                        double Recv_Window_Closed, 
                        double SWS_Count, 
                        double Inbound_Data, 
                        double Inbound_Bytes, 
                        double Inbound_Data_Dup, 
                        double Inbound_Bytes_Dup, 
                        double Inbound_Eff, 
                        double Outbound_Data, 
                        double Outbound_Bytes, 
                        double Outbound_Data_Retr, 
                        double Outbound_Bytes_Retr, 
                        double Outbound_Eff, 
                        double Recvs_Issued, 
                        double Sends_Issued, 
                        double Retransmits, 
                        double In_Retr_Mode) {
                Connection_RecordsRow rowConnection_RecordsRow = ((Connection_RecordsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Conn_PID,
                        Local_Port,
                        Foreign_Port,
                        Foreign_IP,
                        Conn_Start_Time,
                        Conn_End_Time,
                        INT_EXT,
                        Conn_State,
                        Conn_Protocol,
                        Highest_Depth,
                        Max_Send_Window,
                        Max_Recv_Window,
                        Recv_Window_Closed,
                        SWS_Count,
                        Inbound_Data,
                        Inbound_Bytes,
                        Inbound_Data_Dup,
                        Inbound_Bytes_Dup,
                        Inbound_Eff,
                        Outbound_Data,
                        Outbound_Bytes,
                        Outbound_Data_Retr,
                        Outbound_Bytes_Retr,
                        Outbound_Eff,
                        Recvs_Issued,
                        Sends_Issued,
                        Retransmits,
                        In_Retr_Mode};
                rowConnection_RecordsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowConnection_RecordsRow);
                return rowConnection_RecordsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Connection_RecordsRow FindByRecord_IDLocal_PortForeign_PortForeign_IPConn_Start_TimeConn_End_Time(int Record_ID, double Local_Port, double Foreign_Port, string Foreign_IP, System.DateTime Conn_Start_Time, System.DateTime Conn_End_Time) {
                return ((Connection_RecordsRow)(this.Rows.Find(new object[] {
                            Record_ID,
                            Local_Port,
                            Foreign_Port,
                            Foreign_IP,
                            Conn_Start_Time,
                            Conn_End_Time})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Connection_RecordsDataTable cln = ((Connection_RecordsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Connection_RecordsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRecord_ID = base.Columns["Record_ID"];
                this.columnConn_PID = base.Columns["Conn_PID"];
                this.columnLocal_Port = base.Columns["Local_Port"];
                this.columnForeign_Port = base.Columns["Foreign_Port"];
                this.columnForeign_IP = base.Columns["Foreign_IP"];
                this.columnConn_Start_Time = base.Columns["Conn_Start_Time"];
                this.columnConn_End_Time = base.Columns["Conn_End_Time"];
                this.columnINT_EXT = base.Columns["INT_EXT"];
                this.columnConn_State = base.Columns["Conn_State"];
                this.columnConn_Protocol = base.Columns["Conn_Protocol"];
                this.columnHighest_Depth = base.Columns["Highest_Depth"];
                this.columnMax_Send_Window = base.Columns["Max_Send_Window"];
                this.columnMax_Recv_Window = base.Columns["Max_Recv_Window"];
                this.columnRecv_Window_Closed = base.Columns["Recv_Window_Closed"];
                this.columnSWS_Count = base.Columns["SWS_Count"];
                this.columnInbound_Data = base.Columns["Inbound_Data"];
                this.columnInbound_Bytes = base.Columns["Inbound_Bytes"];
                this.columnInbound_Data_Dup = base.Columns["Inbound_Data_Dup"];
                this.columnInbound_Bytes_Dup = base.Columns["Inbound_Bytes_Dup"];
                this.columnInbound_Eff = base.Columns["Inbound_Eff"];
                this.columnOutbound_Data = base.Columns["Outbound_Data"];
                this.columnOutbound_Bytes = base.Columns["Outbound_Bytes"];
                this.columnOutbound_Data_Retr = base.Columns["Outbound_Data_Retr"];
                this.columnOutbound_Bytes_Retr = base.Columns["Outbound_Bytes_Retr"];
                this.columnOutbound_Eff = base.Columns["Outbound_Eff"];
                this.columnRecvs_Issued = base.Columns["Recvs_Issued"];
                this.columnSends_Issued = base.Columns["Sends_Issued"];
                this.columnRetransmits = base.Columns["Retransmits"];
                this.columnIn_Retr_Mode = base.Columns["In_Retr_Mode"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRecord_ID = new global::System.Data.DataColumn("Record_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecord_ID);
                this.columnConn_PID = new global::System.Data.DataColumn("Conn_PID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConn_PID);
                this.columnLocal_Port = new global::System.Data.DataColumn("Local_Port", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocal_Port);
                this.columnForeign_Port = new global::System.Data.DataColumn("Foreign_Port", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForeign_Port);
                this.columnForeign_IP = new global::System.Data.DataColumn("Foreign_IP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForeign_IP);
                this.columnConn_Start_Time = new global::System.Data.DataColumn("Conn_Start_Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConn_Start_Time);
                this.columnConn_End_Time = new global::System.Data.DataColumn("Conn_End_Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConn_End_Time);
                this.columnINT_EXT = new global::System.Data.DataColumn("INT_EXT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINT_EXT);
                this.columnConn_State = new global::System.Data.DataColumn("Conn_State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConn_State);
                this.columnConn_Protocol = new global::System.Data.DataColumn("Conn_Protocol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConn_Protocol);
                this.columnHighest_Depth = new global::System.Data.DataColumn("Highest_Depth", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHighest_Depth);
                this.columnMax_Send_Window = new global::System.Data.DataColumn("Max_Send_Window", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMax_Send_Window);
                this.columnMax_Recv_Window = new global::System.Data.DataColumn("Max_Recv_Window", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMax_Recv_Window);
                this.columnRecv_Window_Closed = new global::System.Data.DataColumn("Recv_Window_Closed", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecv_Window_Closed);
                this.columnSWS_Count = new global::System.Data.DataColumn("SWS_Count", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSWS_Count);
                this.columnInbound_Data = new global::System.Data.DataColumn("Inbound_Data", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInbound_Data);
                this.columnInbound_Bytes = new global::System.Data.DataColumn("Inbound_Bytes", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInbound_Bytes);
                this.columnInbound_Data_Dup = new global::System.Data.DataColumn("Inbound_Data_Dup", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInbound_Data_Dup);
                this.columnInbound_Bytes_Dup = new global::System.Data.DataColumn("Inbound_Bytes_Dup", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInbound_Bytes_Dup);
                this.columnInbound_Eff = new global::System.Data.DataColumn("Inbound_Eff", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInbound_Eff);
                this.columnOutbound_Data = new global::System.Data.DataColumn("Outbound_Data", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutbound_Data);
                this.columnOutbound_Bytes = new global::System.Data.DataColumn("Outbound_Bytes", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutbound_Bytes);
                this.columnOutbound_Data_Retr = new global::System.Data.DataColumn("Outbound_Data_Retr", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutbound_Data_Retr);
                this.columnOutbound_Bytes_Retr = new global::System.Data.DataColumn("Outbound_Bytes_Retr", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutbound_Bytes_Retr);
                this.columnOutbound_Eff = new global::System.Data.DataColumn("Outbound_Eff", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutbound_Eff);
                this.columnRecvs_Issued = new global::System.Data.DataColumn("Recvs_Issued", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecvs_Issued);
                this.columnSends_Issued = new global::System.Data.DataColumn("Sends_Issued", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSends_Issued);
                this.columnRetransmits = new global::System.Data.DataColumn("Retransmits", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRetransmits);
                this.columnIn_Retr_Mode = new global::System.Data.DataColumn("In_Retr_Mode", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIn_Retr_Mode);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRecord_ID,
                                this.columnLocal_Port,
                                this.columnForeign_Port,
                                this.columnForeign_IP,
                                this.columnConn_Start_Time,
                                this.columnConn_End_Time}, true));
                this.columnRecord_ID.AutoIncrement = true;
                this.columnRecord_ID.AllowDBNull = false;
                this.columnRecord_ID.ReadOnly = true;
                this.columnConn_PID.MaxLength = 2;
                this.columnLocal_Port.AllowDBNull = false;
                this.columnForeign_Port.AllowDBNull = false;
                this.columnForeign_IP.AllowDBNull = false;
                this.columnForeign_IP.MaxLength = 15;
                this.columnConn_Start_Time.AllowDBNull = false;
                this.columnConn_End_Time.AllowDBNull = false;
                this.columnINT_EXT.MaxLength = 3;
                this.columnConn_State.MaxLength = 12;
                this.columnConn_Protocol.MaxLength = 8;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Connection_RecordsRow NewConnection_RecordsRow() {
                return ((Connection_RecordsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Connection_RecordsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Connection_RecordsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Connection_RecordsRowChanged != null)) {
                    this.Connection_RecordsRowChanged(this, new Connection_RecordsRowChangeEvent(((Connection_RecordsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Connection_RecordsRowChanging != null)) {
                    this.Connection_RecordsRowChanging(this, new Connection_RecordsRowChangeEvent(((Connection_RecordsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Connection_RecordsRowDeleted != null)) {
                    this.Connection_RecordsRowDeleted(this, new Connection_RecordsRowChangeEvent(((Connection_RecordsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Connection_RecordsRowDeleting != null)) {
                    this.Connection_RecordsRowDeleting(this, new Connection_RecordsRowChangeEvent(((Connection_RecordsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveConnection_RecordsRow(Connection_RecordsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                VseDbDataSet ds = new VseDbDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Connection_RecordsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Connection_StatsDataTable : global::System.Data.TypedTableBase<Connection_StatsRow> {
            
            private global::System.Data.DataColumn columnPoll_Time;
            
            private global::System.Data.DataColumn columnConn_PID;
            
            private global::System.Data.DataColumn columnLocal_Port;
            
            private global::System.Data.DataColumn columnForeign_Port;
            
            private global::System.Data.DataColumn columnForeign_IP;
            
            private global::System.Data.DataColumn columnCCIDENT;
            
            private global::System.Data.DataColumn columnConn_Start_Time;
            
            private global::System.Data.DataColumn columnINT_EXT;
            
            private global::System.Data.DataColumn columnConn_State;
            
            private global::System.Data.DataColumn columnConn_Protocol;
            
            private global::System.Data.DataColumn columnHighest_Depth;
            
            private global::System.Data.DataColumn columnMax_Send_Window;
            
            private global::System.Data.DataColumn columnMax_Recv_Window;
            
            private global::System.Data.DataColumn columnRecv_Window_Closed;
            
            private global::System.Data.DataColumn columnSWS_Count;
            
            private global::System.Data.DataColumn columnInbound_Data;
            
            private global::System.Data.DataColumn columnInbound_Bytes;
            
            private global::System.Data.DataColumn columnInbound_Data_Dup;
            
            private global::System.Data.DataColumn columnInbound_Bytes_Dup;
            
            private global::System.Data.DataColumn columnInbound_Eff;
            
            private global::System.Data.DataColumn columnOutbound_Data;
            
            private global::System.Data.DataColumn columnOutbound_Bytes;
            
            private global::System.Data.DataColumn columnOutbound_Data_Retr;
            
            private global::System.Data.DataColumn columnOutbound_Bytes_Retr;
            
            private global::System.Data.DataColumn columnOutbound_Eff;
            
            private global::System.Data.DataColumn columnRecvs_Issued;
            
            private global::System.Data.DataColumn columnSends_Issued;
            
            private global::System.Data.DataColumn columnRetransmits;
            
            private global::System.Data.DataColumn columnIn_Retr_Mode;
            
            private global::System.Data.DataColumn columnConn_Phase;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Connection_StatsDataTable() {
                this.TableName = "Connection_Stats";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Connection_StatsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Connection_StatsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Poll_TimeColumn {
                get {
                    return this.columnPoll_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Conn_PIDColumn {
                get {
                    return this.columnConn_PID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Local_PortColumn {
                get {
                    return this.columnLocal_Port;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Foreign_PortColumn {
                get {
                    return this.columnForeign_Port;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Foreign_IPColumn {
                get {
                    return this.columnForeign_IP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CCIDENTColumn {
                get {
                    return this.columnCCIDENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Conn_Start_TimeColumn {
                get {
                    return this.columnConn_Start_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn INT_EXTColumn {
                get {
                    return this.columnINT_EXT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Conn_StateColumn {
                get {
                    return this.columnConn_State;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Conn_ProtocolColumn {
                get {
                    return this.columnConn_Protocol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Highest_DepthColumn {
                get {
                    return this.columnHighest_Depth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Max_Send_WindowColumn {
                get {
                    return this.columnMax_Send_Window;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Max_Recv_WindowColumn {
                get {
                    return this.columnMax_Recv_Window;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Recv_Window_ClosedColumn {
                get {
                    return this.columnRecv_Window_Closed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SWS_CountColumn {
                get {
                    return this.columnSWS_Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Inbound_DataColumn {
                get {
                    return this.columnInbound_Data;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Inbound_BytesColumn {
                get {
                    return this.columnInbound_Bytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Inbound_Data_DupColumn {
                get {
                    return this.columnInbound_Data_Dup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Inbound_Bytes_DupColumn {
                get {
                    return this.columnInbound_Bytes_Dup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Inbound_EffColumn {
                get {
                    return this.columnInbound_Eff;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Outbound_DataColumn {
                get {
                    return this.columnOutbound_Data;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Outbound_BytesColumn {
                get {
                    return this.columnOutbound_Bytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Outbound_Data_RetrColumn {
                get {
                    return this.columnOutbound_Data_Retr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Outbound_Bytes_RetrColumn {
                get {
                    return this.columnOutbound_Bytes_Retr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Outbound_EffColumn {
                get {
                    return this.columnOutbound_Eff;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Recvs_IssuedColumn {
                get {
                    return this.columnRecvs_Issued;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Sends_IssuedColumn {
                get {
                    return this.columnSends_Issued;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RetransmitsColumn {
                get {
                    return this.columnRetransmits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn In_Retr_ModeColumn {
                get {
                    return this.columnIn_Retr_Mode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Conn_PhaseColumn {
                get {
                    return this.columnConn_Phase;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Connection_StatsRow this[int index] {
                get {
                    return ((Connection_StatsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Connection_StatsRowChangeEventHandler Connection_StatsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Connection_StatsRowChangeEventHandler Connection_StatsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Connection_StatsRowChangeEventHandler Connection_StatsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Connection_StatsRowChangeEventHandler Connection_StatsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddConnection_StatsRow(Connection_StatsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Connection_StatsRow AddConnection_StatsRow(
                        System.DateTime Poll_Time, 
                        string Conn_PID, 
                        double Local_Port, 
                        double Foreign_Port, 
                        string Foreign_IP, 
                        double CCIDENT, 
                        System.DateTime Conn_Start_Time, 
                        string INT_EXT, 
                        string Conn_State, 
                        string Conn_Protocol, 
                        double Highest_Depth, 
                        double Max_Send_Window, 
                        double Max_Recv_Window, 
                        double Recv_Window_Closed, 
                        double SWS_Count, 
                        double Inbound_Data, 
                        double Inbound_Bytes, 
                        double Inbound_Data_Dup, 
                        double Inbound_Bytes_Dup, 
                        double Inbound_Eff, 
                        double Outbound_Data, 
                        double Outbound_Bytes, 
                        double Outbound_Data_Retr, 
                        double Outbound_Bytes_Retr, 
                        double Outbound_Eff, 
                        double Recvs_Issued, 
                        double Sends_Issued, 
                        double Retransmits, 
                        double In_Retr_Mode, 
                        string Conn_Phase) {
                Connection_StatsRow rowConnection_StatsRow = ((Connection_StatsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Poll_Time,
                        Conn_PID,
                        Local_Port,
                        Foreign_Port,
                        Foreign_IP,
                        CCIDENT,
                        Conn_Start_Time,
                        INT_EXT,
                        Conn_State,
                        Conn_Protocol,
                        Highest_Depth,
                        Max_Send_Window,
                        Max_Recv_Window,
                        Recv_Window_Closed,
                        SWS_Count,
                        Inbound_Data,
                        Inbound_Bytes,
                        Inbound_Data_Dup,
                        Inbound_Bytes_Dup,
                        Inbound_Eff,
                        Outbound_Data,
                        Outbound_Bytes,
                        Outbound_Data_Retr,
                        Outbound_Bytes_Retr,
                        Outbound_Eff,
                        Recvs_Issued,
                        Sends_Issued,
                        Retransmits,
                        In_Retr_Mode,
                        Conn_Phase};
                rowConnection_StatsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowConnection_StatsRow);
                return rowConnection_StatsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Connection_StatsRow FindByPoll_TimeLocal_PortForeign_PortForeign_IPCCIDENT(System.DateTime Poll_Time, double Local_Port, double Foreign_Port, string Foreign_IP, double CCIDENT) {
                return ((Connection_StatsRow)(this.Rows.Find(new object[] {
                            Poll_Time,
                            Local_Port,
                            Foreign_Port,
                            Foreign_IP,
                            CCIDENT})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Connection_StatsDataTable cln = ((Connection_StatsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Connection_StatsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPoll_Time = base.Columns["Poll_Time"];
                this.columnConn_PID = base.Columns["Conn_PID"];
                this.columnLocal_Port = base.Columns["Local_Port"];
                this.columnForeign_Port = base.Columns["Foreign_Port"];
                this.columnForeign_IP = base.Columns["Foreign_IP"];
                this.columnCCIDENT = base.Columns["CCIDENT"];
                this.columnConn_Start_Time = base.Columns["Conn_Start_Time"];
                this.columnINT_EXT = base.Columns["INT_EXT"];
                this.columnConn_State = base.Columns["Conn_State"];
                this.columnConn_Protocol = base.Columns["Conn_Protocol"];
                this.columnHighest_Depth = base.Columns["Highest_Depth"];
                this.columnMax_Send_Window = base.Columns["Max_Send_Window"];
                this.columnMax_Recv_Window = base.Columns["Max_Recv_Window"];
                this.columnRecv_Window_Closed = base.Columns["Recv_Window_Closed"];
                this.columnSWS_Count = base.Columns["SWS_Count"];
                this.columnInbound_Data = base.Columns["Inbound_Data"];
                this.columnInbound_Bytes = base.Columns["Inbound_Bytes"];
                this.columnInbound_Data_Dup = base.Columns["Inbound_Data_Dup"];
                this.columnInbound_Bytes_Dup = base.Columns["Inbound_Bytes_Dup"];
                this.columnInbound_Eff = base.Columns["Inbound_Eff"];
                this.columnOutbound_Data = base.Columns["Outbound_Data"];
                this.columnOutbound_Bytes = base.Columns["Outbound_Bytes"];
                this.columnOutbound_Data_Retr = base.Columns["Outbound_Data_Retr"];
                this.columnOutbound_Bytes_Retr = base.Columns["Outbound_Bytes_Retr"];
                this.columnOutbound_Eff = base.Columns["Outbound_Eff"];
                this.columnRecvs_Issued = base.Columns["Recvs_Issued"];
                this.columnSends_Issued = base.Columns["Sends_Issued"];
                this.columnRetransmits = base.Columns["Retransmits"];
                this.columnIn_Retr_Mode = base.Columns["In_Retr_Mode"];
                this.columnConn_Phase = base.Columns["Conn_Phase"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPoll_Time = new global::System.Data.DataColumn("Poll_Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPoll_Time);
                this.columnConn_PID = new global::System.Data.DataColumn("Conn_PID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConn_PID);
                this.columnLocal_Port = new global::System.Data.DataColumn("Local_Port", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocal_Port);
                this.columnForeign_Port = new global::System.Data.DataColumn("Foreign_Port", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForeign_Port);
                this.columnForeign_IP = new global::System.Data.DataColumn("Foreign_IP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForeign_IP);
                this.columnCCIDENT = new global::System.Data.DataColumn("CCIDENT", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCCIDENT);
                this.columnConn_Start_Time = new global::System.Data.DataColumn("Conn_Start_Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConn_Start_Time);
                this.columnINT_EXT = new global::System.Data.DataColumn("INT_EXT", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnINT_EXT);
                this.columnConn_State = new global::System.Data.DataColumn("Conn_State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConn_State);
                this.columnConn_Protocol = new global::System.Data.DataColumn("Conn_Protocol", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConn_Protocol);
                this.columnHighest_Depth = new global::System.Data.DataColumn("Highest_Depth", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHighest_Depth);
                this.columnMax_Send_Window = new global::System.Data.DataColumn("Max_Send_Window", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMax_Send_Window);
                this.columnMax_Recv_Window = new global::System.Data.DataColumn("Max_Recv_Window", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMax_Recv_Window);
                this.columnRecv_Window_Closed = new global::System.Data.DataColumn("Recv_Window_Closed", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecv_Window_Closed);
                this.columnSWS_Count = new global::System.Data.DataColumn("SWS_Count", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSWS_Count);
                this.columnInbound_Data = new global::System.Data.DataColumn("Inbound_Data", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInbound_Data);
                this.columnInbound_Bytes = new global::System.Data.DataColumn("Inbound_Bytes", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInbound_Bytes);
                this.columnInbound_Data_Dup = new global::System.Data.DataColumn("Inbound_Data_Dup", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInbound_Data_Dup);
                this.columnInbound_Bytes_Dup = new global::System.Data.DataColumn("Inbound_Bytes_Dup", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInbound_Bytes_Dup);
                this.columnInbound_Eff = new global::System.Data.DataColumn("Inbound_Eff", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInbound_Eff);
                this.columnOutbound_Data = new global::System.Data.DataColumn("Outbound_Data", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutbound_Data);
                this.columnOutbound_Bytes = new global::System.Data.DataColumn("Outbound_Bytes", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutbound_Bytes);
                this.columnOutbound_Data_Retr = new global::System.Data.DataColumn("Outbound_Data_Retr", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutbound_Data_Retr);
                this.columnOutbound_Bytes_Retr = new global::System.Data.DataColumn("Outbound_Bytes_Retr", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutbound_Bytes_Retr);
                this.columnOutbound_Eff = new global::System.Data.DataColumn("Outbound_Eff", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOutbound_Eff);
                this.columnRecvs_Issued = new global::System.Data.DataColumn("Recvs_Issued", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecvs_Issued);
                this.columnSends_Issued = new global::System.Data.DataColumn("Sends_Issued", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSends_Issued);
                this.columnRetransmits = new global::System.Data.DataColumn("Retransmits", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRetransmits);
                this.columnIn_Retr_Mode = new global::System.Data.DataColumn("In_Retr_Mode", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIn_Retr_Mode);
                this.columnConn_Phase = new global::System.Data.DataColumn("Conn_Phase", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConn_Phase);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPoll_Time,
                                this.columnLocal_Port,
                                this.columnForeign_Port,
                                this.columnForeign_IP,
                                this.columnCCIDENT}, true));
                this.columnPoll_Time.AllowDBNull = false;
                this.columnConn_PID.MaxLength = 2;
                this.columnLocal_Port.AllowDBNull = false;
                this.columnForeign_Port.AllowDBNull = false;
                this.columnForeign_IP.AllowDBNull = false;
                this.columnForeign_IP.MaxLength = 15;
                this.columnCCIDENT.AllowDBNull = false;
                this.columnINT_EXT.MaxLength = 3;
                this.columnConn_State.MaxLength = 12;
                this.columnConn_Protocol.MaxLength = 8;
                this.columnConn_Phase.MaxLength = 8;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Connection_StatsRow NewConnection_StatsRow() {
                return ((Connection_StatsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Connection_StatsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Connection_StatsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Connection_StatsRowChanged != null)) {
                    this.Connection_StatsRowChanged(this, new Connection_StatsRowChangeEvent(((Connection_StatsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Connection_StatsRowChanging != null)) {
                    this.Connection_StatsRowChanging(this, new Connection_StatsRowChangeEvent(((Connection_StatsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Connection_StatsRowDeleted != null)) {
                    this.Connection_StatsRowDeleted(this, new Connection_StatsRowChangeEvent(((Connection_StatsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Connection_StatsRowDeleting != null)) {
                    this.Connection_StatsRowDeleting(this, new Connection_StatsRowChangeEvent(((Connection_StatsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveConnection_StatsRow(Connection_StatsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                VseDbDataSet ds = new VseDbDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Connection_StatsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CPU_StatsDataTable : global::System.Data.TypedTableBase<CPU_StatsRow> {
            
            private global::System.Data.DataColumn columnPoll_Time;
            
            private global::System.Data.DataColumn columnCPU_ID;
            
            private global::System.Data.DataColumn columnCPU_State;
            
            private global::System.Data.DataColumn columnDispatch_Cycles;
            
            private global::System.Data.DataColumn columnNonVSE_sec;
            
            private global::System.Data.DataColumn columnSpin_sec;
            
            private global::System.Data.DataColumn columnWaiting_sec;
            
            private global::System.Data.DataColumn columnBusy_P_sec;
            
            private global::System.Data.DataColumn columnBusy_NonP_sec;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CPU_StatsDataTable() {
                this.TableName = "CPU_Stats";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CPU_StatsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected CPU_StatsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Poll_TimeColumn {
                get {
                    return this.columnPoll_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CPU_IDColumn {
                get {
                    return this.columnCPU_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CPU_StateColumn {
                get {
                    return this.columnCPU_State;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Dispatch_CyclesColumn {
                get {
                    return this.columnDispatch_Cycles;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NonVSE_secColumn {
                get {
                    return this.columnNonVSE_sec;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Spin_secColumn {
                get {
                    return this.columnSpin_sec;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Waiting_secColumn {
                get {
                    return this.columnWaiting_sec;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Busy_P_secColumn {
                get {
                    return this.columnBusy_P_sec;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Busy_NonP_secColumn {
                get {
                    return this.columnBusy_NonP_sec;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CPU_StatsRow this[int index] {
                get {
                    return ((CPU_StatsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CPU_StatsRowChangeEventHandler CPU_StatsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CPU_StatsRowChangeEventHandler CPU_StatsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CPU_StatsRowChangeEventHandler CPU_StatsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CPU_StatsRowChangeEventHandler CPU_StatsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddCPU_StatsRow(CPU_StatsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CPU_StatsRow AddCPU_StatsRow(System.DateTime Poll_Time, double CPU_ID, string CPU_State, double Dispatch_Cycles, double NonVSE_sec, double Spin_sec, double Waiting_sec, double Busy_P_sec, double Busy_NonP_sec) {
                CPU_StatsRow rowCPU_StatsRow = ((CPU_StatsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Poll_Time,
                        CPU_ID,
                        CPU_State,
                        Dispatch_Cycles,
                        NonVSE_sec,
                        Spin_sec,
                        Waiting_sec,
                        Busy_P_sec,
                        Busy_NonP_sec};
                rowCPU_StatsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCPU_StatsRow);
                return rowCPU_StatsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CPU_StatsRow FindByPoll_TimeCPU_ID(System.DateTime Poll_Time, double CPU_ID) {
                return ((CPU_StatsRow)(this.Rows.Find(new object[] {
                            Poll_Time,
                            CPU_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CPU_StatsDataTable cln = ((CPU_StatsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CPU_StatsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPoll_Time = base.Columns["Poll_Time"];
                this.columnCPU_ID = base.Columns["CPU_ID"];
                this.columnCPU_State = base.Columns["CPU_State"];
                this.columnDispatch_Cycles = base.Columns["Dispatch_Cycles"];
                this.columnNonVSE_sec = base.Columns["NonVSE_sec"];
                this.columnSpin_sec = base.Columns["Spin_sec"];
                this.columnWaiting_sec = base.Columns["Waiting_sec"];
                this.columnBusy_P_sec = base.Columns["Busy_P_sec"];
                this.columnBusy_NonP_sec = base.Columns["Busy_NonP_sec"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPoll_Time = new global::System.Data.DataColumn("Poll_Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPoll_Time);
                this.columnCPU_ID = new global::System.Data.DataColumn("CPU_ID", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCPU_ID);
                this.columnCPU_State = new global::System.Data.DataColumn("CPU_State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCPU_State);
                this.columnDispatch_Cycles = new global::System.Data.DataColumn("Dispatch_Cycles", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDispatch_Cycles);
                this.columnNonVSE_sec = new global::System.Data.DataColumn("NonVSE_sec", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNonVSE_sec);
                this.columnSpin_sec = new global::System.Data.DataColumn("Spin_sec", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpin_sec);
                this.columnWaiting_sec = new global::System.Data.DataColumn("Waiting_sec", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWaiting_sec);
                this.columnBusy_P_sec = new global::System.Data.DataColumn("Busy_P_sec", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusy_P_sec);
                this.columnBusy_NonP_sec = new global::System.Data.DataColumn("Busy_NonP_sec", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBusy_NonP_sec);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPoll_Time,
                                this.columnCPU_ID}, true));
                this.columnPoll_Time.AllowDBNull = false;
                this.columnCPU_ID.AllowDBNull = false;
                this.columnCPU_State.MaxLength = 8;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CPU_StatsRow NewCPU_StatsRow() {
                return ((CPU_StatsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CPU_StatsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CPU_StatsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CPU_StatsRowChanged != null)) {
                    this.CPU_StatsRowChanged(this, new CPU_StatsRowChangeEvent(((CPU_StatsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CPU_StatsRowChanging != null)) {
                    this.CPU_StatsRowChanging(this, new CPU_StatsRowChangeEvent(((CPU_StatsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CPU_StatsRowDeleted != null)) {
                    this.CPU_StatsRowDeleted(this, new CPU_StatsRowChangeEvent(((CPU_StatsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CPU_StatsRowDeleting != null)) {
                    this.CPU_StatsRowDeleting(this, new CPU_StatsRowChangeEvent(((CPU_StatsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveCPU_StatsRow(CPU_StatsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                VseDbDataSet ds = new VseDbDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CPU_StatsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ForeignIP_StatsDataTable : global::System.Data.TypedTableBase<ForeignIP_StatsRow> {
            
            private global::System.Data.DataColumn columnPoll_Time;
            
            private global::System.Data.DataColumn columnIP_Address;
            
            private global::System.Data.DataColumn columnRefuse_Flag;
            
            private global::System.Data.DataColumn columnMisdirected_IP_Datagrams;
            
            private global::System.Data.DataColumn columnNonIP_Datagrams;
            
            private global::System.Data.DataColumn columnARP_Inbound_Datagrams;
            
            private global::System.Data.DataColumn columnARP_Outbound_Datagrams;
            
            private global::System.Data.DataColumn columnICMP_Inbound_Datagrams;
            
            private global::System.Data.DataColumn columnICMP_Outbound_Datagrams;
            
            private global::System.Data.DataColumn columnIP_Inbound_Datagrams;
            
            private global::System.Data.DataColumn columnIP_Outbound_Datagrams;
            
            private global::System.Data.DataColumn columnTCP_Inbound_Datagrams;
            
            private global::System.Data.DataColumn columnTCP_Outbound_Datagrams;
            
            private global::System.Data.DataColumn columnUDP_Inbound_Datagrams;
            
            private global::System.Data.DataColumn columnUDP_Outbound_Datagrams;
            
            private global::System.Data.DataColumn columnMisdirected_IP_Bytes;
            
            private global::System.Data.DataColumn columnNonIP_Bytes;
            
            private global::System.Data.DataColumn columnARP_Inbound_Bytes;
            
            private global::System.Data.DataColumn columnARP_Outbound_Bytes;
            
            private global::System.Data.DataColumn columnICMP_Inbound_Bytes;
            
            private global::System.Data.DataColumn columnICMP_Outbound_Bytes;
            
            private global::System.Data.DataColumn columnIP_Inbound_Bytes;
            
            private global::System.Data.DataColumn columnIP_Outbound_Bytes;
            
            private global::System.Data.DataColumn columnTCP_Inbound_Bytes;
            
            private global::System.Data.DataColumn columnTCP_Outbound_Bytes;
            
            private global::System.Data.DataColumn columnUDP_Inbound_Bytes;
            
            private global::System.Data.DataColumn columnUDP_Outbound_Bytes;
            
            private global::System.Data.DataColumn columnRefused_Bytes;
            
            private global::System.Data.DataColumn columnRefused_Datagrams;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ForeignIP_StatsDataTable() {
                this.TableName = "ForeignIP_Stats";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ForeignIP_StatsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ForeignIP_StatsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Poll_TimeColumn {
                get {
                    return this.columnPoll_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IP_AddressColumn {
                get {
                    return this.columnIP_Address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Refuse_FlagColumn {
                get {
                    return this.columnRefuse_Flag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Misdirected_IP_DatagramsColumn {
                get {
                    return this.columnMisdirected_IP_Datagrams;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NonIP_DatagramsColumn {
                get {
                    return this.columnNonIP_Datagrams;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ARP_Inbound_DatagramsColumn {
                get {
                    return this.columnARP_Inbound_Datagrams;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ARP_Outbound_DatagramsColumn {
                get {
                    return this.columnARP_Outbound_Datagrams;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ICMP_Inbound_DatagramsColumn {
                get {
                    return this.columnICMP_Inbound_Datagrams;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ICMP_Outbound_DatagramsColumn {
                get {
                    return this.columnICMP_Outbound_Datagrams;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IP_Inbound_DatagramsColumn {
                get {
                    return this.columnIP_Inbound_Datagrams;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IP_Outbound_DatagramsColumn {
                get {
                    return this.columnIP_Outbound_Datagrams;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TCP_Inbound_DatagramsColumn {
                get {
                    return this.columnTCP_Inbound_Datagrams;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TCP_Outbound_DatagramsColumn {
                get {
                    return this.columnTCP_Outbound_Datagrams;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UDP_Inbound_DatagramsColumn {
                get {
                    return this.columnUDP_Inbound_Datagrams;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UDP_Outbound_DatagramsColumn {
                get {
                    return this.columnUDP_Outbound_Datagrams;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Misdirected_IP_BytesColumn {
                get {
                    return this.columnMisdirected_IP_Bytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NonIP_BytesColumn {
                get {
                    return this.columnNonIP_Bytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ARP_Inbound_BytesColumn {
                get {
                    return this.columnARP_Inbound_Bytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ARP_Outbound_BytesColumn {
                get {
                    return this.columnARP_Outbound_Bytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ICMP_Inbound_BytesColumn {
                get {
                    return this.columnICMP_Inbound_Bytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ICMP_Outbound_BytesColumn {
                get {
                    return this.columnICMP_Outbound_Bytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IP_Inbound_BytesColumn {
                get {
                    return this.columnIP_Inbound_Bytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IP_Outbound_BytesColumn {
                get {
                    return this.columnIP_Outbound_Bytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TCP_Inbound_BytesColumn {
                get {
                    return this.columnTCP_Inbound_Bytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TCP_Outbound_BytesColumn {
                get {
                    return this.columnTCP_Outbound_Bytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UDP_Inbound_BytesColumn {
                get {
                    return this.columnUDP_Inbound_Bytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UDP_Outbound_BytesColumn {
                get {
                    return this.columnUDP_Outbound_Bytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Refused_BytesColumn {
                get {
                    return this.columnRefused_Bytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Refused_DatagramsColumn {
                get {
                    return this.columnRefused_Datagrams;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ForeignIP_StatsRow this[int index] {
                get {
                    return ((ForeignIP_StatsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ForeignIP_StatsRowChangeEventHandler ForeignIP_StatsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ForeignIP_StatsRowChangeEventHandler ForeignIP_StatsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ForeignIP_StatsRowChangeEventHandler ForeignIP_StatsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ForeignIP_StatsRowChangeEventHandler ForeignIP_StatsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddForeignIP_StatsRow(ForeignIP_StatsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ForeignIP_StatsRow AddForeignIP_StatsRow(
                        System.DateTime Poll_Time, 
                        string IP_Address, 
                        bool Refuse_Flag, 
                        double Misdirected_IP_Datagrams, 
                        double NonIP_Datagrams, 
                        double ARP_Inbound_Datagrams, 
                        double ARP_Outbound_Datagrams, 
                        double ICMP_Inbound_Datagrams, 
                        double ICMP_Outbound_Datagrams, 
                        double IP_Inbound_Datagrams, 
                        double IP_Outbound_Datagrams, 
                        double TCP_Inbound_Datagrams, 
                        double TCP_Outbound_Datagrams, 
                        double UDP_Inbound_Datagrams, 
                        double UDP_Outbound_Datagrams, 
                        double Misdirected_IP_Bytes, 
                        double NonIP_Bytes, 
                        double ARP_Inbound_Bytes, 
                        double ARP_Outbound_Bytes, 
                        double ICMP_Inbound_Bytes, 
                        double ICMP_Outbound_Bytes, 
                        double IP_Inbound_Bytes, 
                        double IP_Outbound_Bytes, 
                        double TCP_Inbound_Bytes, 
                        double TCP_Outbound_Bytes, 
                        double UDP_Inbound_Bytes, 
                        double UDP_Outbound_Bytes, 
                        double Refused_Bytes, 
                        double Refused_Datagrams) {
                ForeignIP_StatsRow rowForeignIP_StatsRow = ((ForeignIP_StatsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Poll_Time,
                        IP_Address,
                        Refuse_Flag,
                        Misdirected_IP_Datagrams,
                        NonIP_Datagrams,
                        ARP_Inbound_Datagrams,
                        ARP_Outbound_Datagrams,
                        ICMP_Inbound_Datagrams,
                        ICMP_Outbound_Datagrams,
                        IP_Inbound_Datagrams,
                        IP_Outbound_Datagrams,
                        TCP_Inbound_Datagrams,
                        TCP_Outbound_Datagrams,
                        UDP_Inbound_Datagrams,
                        UDP_Outbound_Datagrams,
                        Misdirected_IP_Bytes,
                        NonIP_Bytes,
                        ARP_Inbound_Bytes,
                        ARP_Outbound_Bytes,
                        ICMP_Inbound_Bytes,
                        ICMP_Outbound_Bytes,
                        IP_Inbound_Bytes,
                        IP_Outbound_Bytes,
                        TCP_Inbound_Bytes,
                        TCP_Outbound_Bytes,
                        UDP_Inbound_Bytes,
                        UDP_Outbound_Bytes,
                        Refused_Bytes,
                        Refused_Datagrams};
                rowForeignIP_StatsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowForeignIP_StatsRow);
                return rowForeignIP_StatsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ForeignIP_StatsRow FindByPoll_TimeIP_Address(System.DateTime Poll_Time, string IP_Address) {
                return ((ForeignIP_StatsRow)(this.Rows.Find(new object[] {
                            Poll_Time,
                            IP_Address})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ForeignIP_StatsDataTable cln = ((ForeignIP_StatsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ForeignIP_StatsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPoll_Time = base.Columns["Poll_Time"];
                this.columnIP_Address = base.Columns["IP_Address"];
                this.columnRefuse_Flag = base.Columns["Refuse_Flag"];
                this.columnMisdirected_IP_Datagrams = base.Columns["Misdirected_IP_Datagrams"];
                this.columnNonIP_Datagrams = base.Columns["NonIP_Datagrams"];
                this.columnARP_Inbound_Datagrams = base.Columns["ARP_Inbound_Datagrams"];
                this.columnARP_Outbound_Datagrams = base.Columns["ARP_Outbound_Datagrams"];
                this.columnICMP_Inbound_Datagrams = base.Columns["ICMP_Inbound_Datagrams"];
                this.columnICMP_Outbound_Datagrams = base.Columns["ICMP_Outbound_Datagrams"];
                this.columnIP_Inbound_Datagrams = base.Columns["IP_Inbound_Datagrams"];
                this.columnIP_Outbound_Datagrams = base.Columns["IP_Outbound_Datagrams"];
                this.columnTCP_Inbound_Datagrams = base.Columns["TCP_Inbound_Datagrams"];
                this.columnTCP_Outbound_Datagrams = base.Columns["TCP_Outbound_Datagrams"];
                this.columnUDP_Inbound_Datagrams = base.Columns["UDP_Inbound_Datagrams"];
                this.columnUDP_Outbound_Datagrams = base.Columns["UDP_Outbound_Datagrams"];
                this.columnMisdirected_IP_Bytes = base.Columns["Misdirected_IP_Bytes"];
                this.columnNonIP_Bytes = base.Columns["NonIP_Bytes"];
                this.columnARP_Inbound_Bytes = base.Columns["ARP_Inbound_Bytes"];
                this.columnARP_Outbound_Bytes = base.Columns["ARP_Outbound_Bytes"];
                this.columnICMP_Inbound_Bytes = base.Columns["ICMP_Inbound_Bytes"];
                this.columnICMP_Outbound_Bytes = base.Columns["ICMP_Outbound_Bytes"];
                this.columnIP_Inbound_Bytes = base.Columns["IP_Inbound_Bytes"];
                this.columnIP_Outbound_Bytes = base.Columns["IP_Outbound_Bytes"];
                this.columnTCP_Inbound_Bytes = base.Columns["TCP_Inbound_Bytes"];
                this.columnTCP_Outbound_Bytes = base.Columns["TCP_Outbound_Bytes"];
                this.columnUDP_Inbound_Bytes = base.Columns["UDP_Inbound_Bytes"];
                this.columnUDP_Outbound_Bytes = base.Columns["UDP_Outbound_Bytes"];
                this.columnRefused_Bytes = base.Columns["Refused_Bytes"];
                this.columnRefused_Datagrams = base.Columns["Refused_Datagrams"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPoll_Time = new global::System.Data.DataColumn("Poll_Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPoll_Time);
                this.columnIP_Address = new global::System.Data.DataColumn("IP_Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIP_Address);
                this.columnRefuse_Flag = new global::System.Data.DataColumn("Refuse_Flag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefuse_Flag);
                this.columnMisdirected_IP_Datagrams = new global::System.Data.DataColumn("Misdirected_IP_Datagrams", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMisdirected_IP_Datagrams);
                this.columnNonIP_Datagrams = new global::System.Data.DataColumn("NonIP_Datagrams", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNonIP_Datagrams);
                this.columnARP_Inbound_Datagrams = new global::System.Data.DataColumn("ARP_Inbound_Datagrams", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnARP_Inbound_Datagrams);
                this.columnARP_Outbound_Datagrams = new global::System.Data.DataColumn("ARP_Outbound_Datagrams", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnARP_Outbound_Datagrams);
                this.columnICMP_Inbound_Datagrams = new global::System.Data.DataColumn("ICMP_Inbound_Datagrams", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnICMP_Inbound_Datagrams);
                this.columnICMP_Outbound_Datagrams = new global::System.Data.DataColumn("ICMP_Outbound_Datagrams", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnICMP_Outbound_Datagrams);
                this.columnIP_Inbound_Datagrams = new global::System.Data.DataColumn("IP_Inbound_Datagrams", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIP_Inbound_Datagrams);
                this.columnIP_Outbound_Datagrams = new global::System.Data.DataColumn("IP_Outbound_Datagrams", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIP_Outbound_Datagrams);
                this.columnTCP_Inbound_Datagrams = new global::System.Data.DataColumn("TCP_Inbound_Datagrams", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTCP_Inbound_Datagrams);
                this.columnTCP_Outbound_Datagrams = new global::System.Data.DataColumn("TCP_Outbound_Datagrams", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTCP_Outbound_Datagrams);
                this.columnUDP_Inbound_Datagrams = new global::System.Data.DataColumn("UDP_Inbound_Datagrams", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUDP_Inbound_Datagrams);
                this.columnUDP_Outbound_Datagrams = new global::System.Data.DataColumn("UDP_Outbound_Datagrams", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUDP_Outbound_Datagrams);
                this.columnMisdirected_IP_Bytes = new global::System.Data.DataColumn("Misdirected_IP_Bytes", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMisdirected_IP_Bytes);
                this.columnNonIP_Bytes = new global::System.Data.DataColumn("NonIP_Bytes", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNonIP_Bytes);
                this.columnARP_Inbound_Bytes = new global::System.Data.DataColumn("ARP_Inbound_Bytes", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnARP_Inbound_Bytes);
                this.columnARP_Outbound_Bytes = new global::System.Data.DataColumn("ARP_Outbound_Bytes", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnARP_Outbound_Bytes);
                this.columnICMP_Inbound_Bytes = new global::System.Data.DataColumn("ICMP_Inbound_Bytes", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnICMP_Inbound_Bytes);
                this.columnICMP_Outbound_Bytes = new global::System.Data.DataColumn("ICMP_Outbound_Bytes", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnICMP_Outbound_Bytes);
                this.columnIP_Inbound_Bytes = new global::System.Data.DataColumn("IP_Inbound_Bytes", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIP_Inbound_Bytes);
                this.columnIP_Outbound_Bytes = new global::System.Data.DataColumn("IP_Outbound_Bytes", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIP_Outbound_Bytes);
                this.columnTCP_Inbound_Bytes = new global::System.Data.DataColumn("TCP_Inbound_Bytes", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTCP_Inbound_Bytes);
                this.columnTCP_Outbound_Bytes = new global::System.Data.DataColumn("TCP_Outbound_Bytes", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTCP_Outbound_Bytes);
                this.columnUDP_Inbound_Bytes = new global::System.Data.DataColumn("UDP_Inbound_Bytes", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUDP_Inbound_Bytes);
                this.columnUDP_Outbound_Bytes = new global::System.Data.DataColumn("UDP_Outbound_Bytes", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUDP_Outbound_Bytes);
                this.columnRefused_Bytes = new global::System.Data.DataColumn("Refused_Bytes", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefused_Bytes);
                this.columnRefused_Datagrams = new global::System.Data.DataColumn("Refused_Datagrams", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefused_Datagrams);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPoll_Time,
                                this.columnIP_Address}, true));
                this.columnPoll_Time.AllowDBNull = false;
                this.columnIP_Address.AllowDBNull = false;
                this.columnIP_Address.MaxLength = 15;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ForeignIP_StatsRow NewForeignIP_StatsRow() {
                return ((ForeignIP_StatsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ForeignIP_StatsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ForeignIP_StatsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ForeignIP_StatsRowChanged != null)) {
                    this.ForeignIP_StatsRowChanged(this, new ForeignIP_StatsRowChangeEvent(((ForeignIP_StatsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ForeignIP_StatsRowChanging != null)) {
                    this.ForeignIP_StatsRowChanging(this, new ForeignIP_StatsRowChangeEvent(((ForeignIP_StatsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ForeignIP_StatsRowDeleted != null)) {
                    this.ForeignIP_StatsRowDeleted(this, new ForeignIP_StatsRowChangeEvent(((ForeignIP_StatsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ForeignIP_StatsRowDeleting != null)) {
                    this.ForeignIP_StatsRowDeleting(this, new ForeignIP_StatsRowChangeEvent(((ForeignIP_StatsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveForeignIP_StatsRow(ForeignIP_StatsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                VseDbDataSet ds = new VseDbDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ForeignIP_StatsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FTP_RecordsDataTable : global::System.Data.TypedTableBase<FTP_RecordsRow> {
            
            private global::System.Data.DataColumn columnRecord_ID;
            
            private global::System.Data.DataColumn columnFTP_Node_Name;
            
            private global::System.Data.DataColumn columnFTP_User_ID;
            
            private global::System.Data.DataColumn columnBytes_SentAcked;
            
            private global::System.Data.DataColumn columnBytes_Received;
            
            private global::System.Data.DataColumn columnStart_Time;
            
            private global::System.Data.DataColumn columnEnd_Time;
            
            private global::System.Data.DataColumn columnFiles_Received;
            
            private global::System.Data.DataColumn columnFiles_Sent;
            
            private global::System.Data.DataColumn columnVse_IP;
            
            private global::System.Data.DataColumn columnClient_IP;
            
            private global::System.Data.DataColumn columnVse_Port;
            
            private global::System.Data.DataColumn columnClient_Port;
            
            private global::System.Data.DataColumn columnVse_Task_ID;
            
            private global::System.Data.DataColumn columnSSL_Flag;
            
            private global::System.Data.DataColumn columnGeneral_Flag;
            
            private global::System.Data.DataColumn columnForeign_Data_IP;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FTP_RecordsDataTable() {
                this.TableName = "FTP_Records";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FTP_RecordsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected FTP_RecordsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Record_IDColumn {
                get {
                    return this.columnRecord_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTP_Node_NameColumn {
                get {
                    return this.columnFTP_Node_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTP_User_IDColumn {
                get {
                    return this.columnFTP_User_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bytes_SentAckedColumn {
                get {
                    return this.columnBytes_SentAcked;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Bytes_ReceivedColumn {
                get {
                    return this.columnBytes_Received;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Start_TimeColumn {
                get {
                    return this.columnStart_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn End_TimeColumn {
                get {
                    return this.columnEnd_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Files_ReceivedColumn {
                get {
                    return this.columnFiles_Received;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Files_SentColumn {
                get {
                    return this.columnFiles_Sent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Vse_IPColumn {
                get {
                    return this.columnVse_IP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Client_IPColumn {
                get {
                    return this.columnClient_IP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Vse_PortColumn {
                get {
                    return this.columnVse_Port;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Client_PortColumn {
                get {
                    return this.columnClient_Port;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Vse_Task_IDColumn {
                get {
                    return this.columnVse_Task_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SSL_FlagColumn {
                get {
                    return this.columnSSL_Flag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn General_FlagColumn {
                get {
                    return this.columnGeneral_Flag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Foreign_Data_IPColumn {
                get {
                    return this.columnForeign_Data_IP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FTP_RecordsRow this[int index] {
                get {
                    return ((FTP_RecordsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FTP_RecordsRowChangeEventHandler FTP_RecordsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FTP_RecordsRowChangeEventHandler FTP_RecordsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FTP_RecordsRowChangeEventHandler FTP_RecordsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event FTP_RecordsRowChangeEventHandler FTP_RecordsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddFTP_RecordsRow(FTP_RecordsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FTP_RecordsRow AddFTP_RecordsRow(
                        string FTP_Node_Name, 
                        string FTP_User_ID, 
                        double Bytes_SentAcked, 
                        double Bytes_Received, 
                        System.DateTime Start_Time, 
                        System.DateTime End_Time, 
                        double Files_Received, 
                        double Files_Sent, 
                        string Vse_IP, 
                        string Client_IP, 
                        int Vse_Port, 
                        int Client_Port, 
                        int Vse_Task_ID, 
                        byte SSL_Flag, 
                        byte General_Flag, 
                        string Foreign_Data_IP) {
                FTP_RecordsRow rowFTP_RecordsRow = ((FTP_RecordsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        FTP_Node_Name,
                        FTP_User_ID,
                        Bytes_SentAcked,
                        Bytes_Received,
                        Start_Time,
                        End_Time,
                        Files_Received,
                        Files_Sent,
                        Vse_IP,
                        Client_IP,
                        Vse_Port,
                        Client_Port,
                        Vse_Task_ID,
                        SSL_Flag,
                        General_Flag,
                        Foreign_Data_IP};
                rowFTP_RecordsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFTP_RecordsRow);
                return rowFTP_RecordsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FTP_RecordsRow FindByRecord_ID(int Record_ID) {
                return ((FTP_RecordsRow)(this.Rows.Find(new object[] {
                            Record_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                FTP_RecordsDataTable cln = ((FTP_RecordsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FTP_RecordsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRecord_ID = base.Columns["Record_ID"];
                this.columnFTP_Node_Name = base.Columns["FTP_Node_Name"];
                this.columnFTP_User_ID = base.Columns["FTP_User_ID"];
                this.columnBytes_SentAcked = base.Columns["Bytes_SentAcked"];
                this.columnBytes_Received = base.Columns["Bytes_Received"];
                this.columnStart_Time = base.Columns["Start_Time"];
                this.columnEnd_Time = base.Columns["End_Time"];
                this.columnFiles_Received = base.Columns["Files_Received"];
                this.columnFiles_Sent = base.Columns["Files_Sent"];
                this.columnVse_IP = base.Columns["Vse_IP"];
                this.columnClient_IP = base.Columns["Client_IP"];
                this.columnVse_Port = base.Columns["Vse_Port"];
                this.columnClient_Port = base.Columns["Client_Port"];
                this.columnVse_Task_ID = base.Columns["Vse_Task_ID"];
                this.columnSSL_Flag = base.Columns["SSL_Flag"];
                this.columnGeneral_Flag = base.Columns["General_Flag"];
                this.columnForeign_Data_IP = base.Columns["Foreign_Data_IP"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRecord_ID = new global::System.Data.DataColumn("Record_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecord_ID);
                this.columnFTP_Node_Name = new global::System.Data.DataColumn("FTP_Node_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTP_Node_Name);
                this.columnFTP_User_ID = new global::System.Data.DataColumn("FTP_User_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTP_User_ID);
                this.columnBytes_SentAcked = new global::System.Data.DataColumn("Bytes_SentAcked", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBytes_SentAcked);
                this.columnBytes_Received = new global::System.Data.DataColumn("Bytes_Received", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBytes_Received);
                this.columnStart_Time = new global::System.Data.DataColumn("Start_Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStart_Time);
                this.columnEnd_Time = new global::System.Data.DataColumn("End_Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnd_Time);
                this.columnFiles_Received = new global::System.Data.DataColumn("Files_Received", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiles_Received);
                this.columnFiles_Sent = new global::System.Data.DataColumn("Files_Sent", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFiles_Sent);
                this.columnVse_IP = new global::System.Data.DataColumn("Vse_IP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVse_IP);
                this.columnClient_IP = new global::System.Data.DataColumn("Client_IP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClient_IP);
                this.columnVse_Port = new global::System.Data.DataColumn("Vse_Port", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVse_Port);
                this.columnClient_Port = new global::System.Data.DataColumn("Client_Port", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClient_Port);
                this.columnVse_Task_ID = new global::System.Data.DataColumn("Vse_Task_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVse_Task_ID);
                this.columnSSL_Flag = new global::System.Data.DataColumn("SSL_Flag", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSSL_Flag);
                this.columnGeneral_Flag = new global::System.Data.DataColumn("General_Flag", typeof(byte), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGeneral_Flag);
                this.columnForeign_Data_IP = new global::System.Data.DataColumn("Foreign_Data_IP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnForeign_Data_IP);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRecord_ID}, true));
                this.columnRecord_ID.AutoIncrement = true;
                this.columnRecord_ID.AllowDBNull = false;
                this.columnRecord_ID.ReadOnly = true;
                this.columnRecord_ID.Unique = true;
                this.columnFTP_Node_Name.MaxLength = 16;
                this.columnFTP_User_ID.MaxLength = 16;
                this.columnVse_IP.MaxLength = 15;
                this.columnClient_IP.MaxLength = 15;
                this.columnForeign_Data_IP.MaxLength = 15;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FTP_RecordsRow NewFTP_RecordsRow() {
                return ((FTP_RecordsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FTP_RecordsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(FTP_RecordsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FTP_RecordsRowChanged != null)) {
                    this.FTP_RecordsRowChanged(this, new FTP_RecordsRowChangeEvent(((FTP_RecordsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FTP_RecordsRowChanging != null)) {
                    this.FTP_RecordsRowChanging(this, new FTP_RecordsRowChangeEvent(((FTP_RecordsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FTP_RecordsRowDeleted != null)) {
                    this.FTP_RecordsRowDeleted(this, new FTP_RecordsRowChangeEvent(((FTP_RecordsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FTP_RecordsRowDeleting != null)) {
                    this.FTP_RecordsRowDeleting(this, new FTP_RecordsRowChangeEvent(((FTP_RecordsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveFTP_RecordsRow(FTP_RecordsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                VseDbDataSet ds = new VseDbDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FTP_RecordsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class JobStep_RecordsDataTable : global::System.Data.TypedTableBase<JobStep_RecordsRow> {
            
            private global::System.Data.DataColumn columnRecord_ID;
            
            private global::System.Data.DataColumn columnPID;
            
            private global::System.Data.DataColumn columnJob_Name;
            
            private global::System.Data.DataColumn columnStep_Name;
            
            private global::System.Data.DataColumn columnStep_Start_Time;
            
            private global::System.Data.DataColumn columnStep_End_Time;
            
            private global::System.Data.DataColumn columnDuration_Sec;
            
            private global::System.Data.DataColumn columnCpu_Time_Sec;
            
            private global::System.Data.DataColumn columnLocalPOr;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JobStep_RecordsDataTable() {
                this.TableName = "JobStep_Records";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal JobStep_RecordsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected JobStep_RecordsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Record_IDColumn {
                get {
                    return this.columnRecord_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PIDColumn {
                get {
                    return this.columnPID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Job_NameColumn {
                get {
                    return this.columnJob_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Step_NameColumn {
                get {
                    return this.columnStep_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Step_Start_TimeColumn {
                get {
                    return this.columnStep_Start_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Step_End_TimeColumn {
                get {
                    return this.columnStep_End_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Duration_SecColumn {
                get {
                    return this.columnDuration_Sec;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Cpu_Time_SecColumn {
                get {
                    return this.columnCpu_Time_Sec;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LocalPOrColumn {
                get {
                    return this.columnLocalPOr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JobStep_RecordsRow this[int index] {
                get {
                    return ((JobStep_RecordsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event JobStep_RecordsRowChangeEventHandler JobStep_RecordsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event JobStep_RecordsRowChangeEventHandler JobStep_RecordsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event JobStep_RecordsRowChangeEventHandler JobStep_RecordsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event JobStep_RecordsRowChangeEventHandler JobStep_RecordsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddJobStep_RecordsRow(JobStep_RecordsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JobStep_RecordsRow AddJobStep_RecordsRow(string PID, string Job_Name, string Step_Name, System.DateTime Step_Start_Time, System.DateTime Step_End_Time, double Duration_Sec, double Cpu_Time_Sec, double LocalPOr) {
                JobStep_RecordsRow rowJobStep_RecordsRow = ((JobStep_RecordsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        PID,
                        Job_Name,
                        Step_Name,
                        Step_Start_Time,
                        Step_End_Time,
                        Duration_Sec,
                        Cpu_Time_Sec,
                        LocalPOr};
                rowJobStep_RecordsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowJobStep_RecordsRow);
                return rowJobStep_RecordsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JobStep_RecordsRow FindByRecord_IDJob_NameStep_NameStep_Start_Time(int Record_ID, string Job_Name, string Step_Name, System.DateTime Step_Start_Time) {
                return ((JobStep_RecordsRow)(this.Rows.Find(new object[] {
                            Record_ID,
                            Job_Name,
                            Step_Name,
                            Step_Start_Time})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                JobStep_RecordsDataTable cln = ((JobStep_RecordsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new JobStep_RecordsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRecord_ID = base.Columns["Record_ID"];
                this.columnPID = base.Columns["PID"];
                this.columnJob_Name = base.Columns["Job_Name"];
                this.columnStep_Name = base.Columns["Step_Name"];
                this.columnStep_Start_Time = base.Columns["Step_Start_Time"];
                this.columnStep_End_Time = base.Columns["Step_End_Time"];
                this.columnDuration_Sec = base.Columns["Duration_Sec"];
                this.columnCpu_Time_Sec = base.Columns["Cpu_Time_Sec"];
                this.columnLocalPOr = base.Columns["LocalPOr"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRecord_ID = new global::System.Data.DataColumn("Record_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecord_ID);
                this.columnPID = new global::System.Data.DataColumn("PID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPID);
                this.columnJob_Name = new global::System.Data.DataColumn("Job_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJob_Name);
                this.columnStep_Name = new global::System.Data.DataColumn("Step_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStep_Name);
                this.columnStep_Start_Time = new global::System.Data.DataColumn("Step_Start_Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStep_Start_Time);
                this.columnStep_End_Time = new global::System.Data.DataColumn("Step_End_Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStep_End_Time);
                this.columnDuration_Sec = new global::System.Data.DataColumn("Duration_Sec", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDuration_Sec);
                this.columnCpu_Time_Sec = new global::System.Data.DataColumn("Cpu_Time_Sec", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCpu_Time_Sec);
                this.columnLocalPOr = new global::System.Data.DataColumn("LocalPOr", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocalPOr);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRecord_ID,
                                this.columnJob_Name,
                                this.columnStep_Name,
                                this.columnStep_Start_Time}, true));
                this.columnRecord_ID.AutoIncrement = true;
                this.columnRecord_ID.AllowDBNull = false;
                this.columnRecord_ID.ReadOnly = true;
                this.columnPID.MaxLength = 2;
                this.columnJob_Name.AllowDBNull = false;
                this.columnJob_Name.MaxLength = 8;
                this.columnStep_Name.AllowDBNull = false;
                this.columnStep_Name.MaxLength = 8;
                this.columnStep_Start_Time.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JobStep_RecordsRow NewJobStep_RecordsRow() {
                return ((JobStep_RecordsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new JobStep_RecordsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(JobStep_RecordsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.JobStep_RecordsRowChanged != null)) {
                    this.JobStep_RecordsRowChanged(this, new JobStep_RecordsRowChangeEvent(((JobStep_RecordsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.JobStep_RecordsRowChanging != null)) {
                    this.JobStep_RecordsRowChanging(this, new JobStep_RecordsRowChangeEvent(((JobStep_RecordsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.JobStep_RecordsRowDeleted != null)) {
                    this.JobStep_RecordsRowDeleted(this, new JobStep_RecordsRowChangeEvent(((JobStep_RecordsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.JobStep_RecordsRowDeleting != null)) {
                    this.JobStep_RecordsRowDeleting(this, new JobStep_RecordsRowChangeEvent(((JobStep_RecordsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveJobStep_RecordsRow(JobStep_RecordsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                VseDbDataSet ds = new VseDbDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "JobStep_RecordsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Link_AdapterDataTable : global::System.Data.TypedTableBase<Link_AdapterRow> {
            
            private global::System.Data.DataColumn columnPoll_Time;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnLink_ID;
            
            private global::System.Data.DataColumn columnDefine_Type;
            
            private global::System.Data.DataColumn columnMTU;
            
            private global::System.Data.DataColumn columnCUU_Name;
            
            private global::System.Data.DataColumn columnAlternate_CUU;
            
            private global::System.Data.DataColumn columnIP_Address;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Link_AdapterDataTable() {
                this.TableName = "Link_Adapter";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Link_AdapterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Link_AdapterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Poll_TimeColumn {
                get {
                    return this.columnPoll_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Link_IDColumn {
                get {
                    return this.columnLink_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Define_TypeColumn {
                get {
                    return this.columnDefine_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MTUColumn {
                get {
                    return this.columnMTU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CUU_NameColumn {
                get {
                    return this.columnCUU_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Alternate_CUUColumn {
                get {
                    return this.columnAlternate_CUU;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IP_AddressColumn {
                get {
                    return this.columnIP_Address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Link_AdapterRow this[int index] {
                get {
                    return ((Link_AdapterRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Link_AdapterRowChangeEventHandler Link_AdapterRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Link_AdapterRowChangeEventHandler Link_AdapterRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Link_AdapterRowChangeEventHandler Link_AdapterRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Link_AdapterRowChangeEventHandler Link_AdapterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddLink_AdapterRow(Link_AdapterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Link_AdapterRow AddLink_AdapterRow(System.DateTime Poll_Time, string Type, string Link_ID, string Define_Type, double MTU, string CUU_Name, string Alternate_CUU, string IP_Address) {
                Link_AdapterRow rowLink_AdapterRow = ((Link_AdapterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Poll_Time,
                        Type,
                        Link_ID,
                        Define_Type,
                        MTU,
                        CUU_Name,
                        Alternate_CUU,
                        IP_Address};
                rowLink_AdapterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLink_AdapterRow);
                return rowLink_AdapterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Link_AdapterRow FindByPoll_TimeLink_IDDefine_Type(System.DateTime Poll_Time, string Link_ID, string Define_Type) {
                return ((Link_AdapterRow)(this.Rows.Find(new object[] {
                            Poll_Time,
                            Link_ID,
                            Define_Type})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Link_AdapterDataTable cln = ((Link_AdapterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Link_AdapterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPoll_Time = base.Columns["Poll_Time"];
                this.columnType = base.Columns["Type"];
                this.columnLink_ID = base.Columns["Link_ID"];
                this.columnDefine_Type = base.Columns["Define_Type"];
                this.columnMTU = base.Columns["MTU"];
                this.columnCUU_Name = base.Columns["CUU_Name"];
                this.columnAlternate_CUU = base.Columns["Alternate_CUU"];
                this.columnIP_Address = base.Columns["IP_Address"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPoll_Time = new global::System.Data.DataColumn("Poll_Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPoll_Time);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnLink_ID = new global::System.Data.DataColumn("Link_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLink_ID);
                this.columnDefine_Type = new global::System.Data.DataColumn("Define_Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDefine_Type);
                this.columnMTU = new global::System.Data.DataColumn("MTU", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMTU);
                this.columnCUU_Name = new global::System.Data.DataColumn("CUU_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUU_Name);
                this.columnAlternate_CUU = new global::System.Data.DataColumn("Alternate_CUU", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAlternate_CUU);
                this.columnIP_Address = new global::System.Data.DataColumn("IP_Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIP_Address);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPoll_Time,
                                this.columnLink_ID,
                                this.columnDefine_Type}, true));
                this.columnPoll_Time.AllowDBNull = false;
                this.columnType.MaxLength = 7;
                this.columnLink_ID.AllowDBNull = false;
                this.columnLink_ID.MaxLength = 16;
                this.columnDefine_Type.AllowDBNull = false;
                this.columnDefine_Type.MaxLength = 5;
                this.columnCUU_Name.MaxLength = 4;
                this.columnAlternate_CUU.MaxLength = 4;
                this.columnIP_Address.MaxLength = 15;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Link_AdapterRow NewLink_AdapterRow() {
                return ((Link_AdapterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Link_AdapterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Link_AdapterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Link_AdapterRowChanged != null)) {
                    this.Link_AdapterRowChanged(this, new Link_AdapterRowChangeEvent(((Link_AdapterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Link_AdapterRowChanging != null)) {
                    this.Link_AdapterRowChanging(this, new Link_AdapterRowChangeEvent(((Link_AdapterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Link_AdapterRowDeleted != null)) {
                    this.Link_AdapterRowDeleted(this, new Link_AdapterRowChangeEvent(((Link_AdapterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Link_AdapterRowDeleting != null)) {
                    this.Link_AdapterRowDeleting(this, new Link_AdapterRowChangeEvent(((Link_AdapterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveLink_AdapterRow(Link_AdapterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                VseDbDataSet ds = new VseDbDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Link_AdapterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Partition_Job_StepDataTable : global::System.Data.TypedTableBase<Partition_Job_StepRow> {
            
            private global::System.Data.DataColumn columnPoll_Time;
            
            private global::System.Data.DataColumn columnPartition_ID;
            
            private global::System.Data.DataColumn columnPower_Job_Name;
            
            private global::System.Data.DataColumn columnVSE_Job_Name;
            
            private global::System.Data.DataColumn columnVSE_Step_Name;
            
            private global::System.Data.DataColumn columnJob_Start_Time;
            
            private global::System.Data.DataColumn columnStep_Start_Time;
            
            private global::System.Data.DataColumn columnCPU_Time_sec;
            
            private global::System.Data.DataColumn columnSIO_Count;
            
            private global::System.Data.DataColumn columnPriority;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Partition_Job_StepDataTable() {
                this.TableName = "Partition_Job_Step";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Partition_Job_StepDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Partition_Job_StepDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Poll_TimeColumn {
                get {
                    return this.columnPoll_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Partition_IDColumn {
                get {
                    return this.columnPartition_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Power_Job_NameColumn {
                get {
                    return this.columnPower_Job_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VSE_Job_NameColumn {
                get {
                    return this.columnVSE_Job_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VSE_Step_NameColumn {
                get {
                    return this.columnVSE_Step_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Job_Start_TimeColumn {
                get {
                    return this.columnJob_Start_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Step_Start_TimeColumn {
                get {
                    return this.columnStep_Start_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CPU_Time_secColumn {
                get {
                    return this.columnCPU_Time_sec;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SIO_CountColumn {
                get {
                    return this.columnSIO_Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PriorityColumn {
                get {
                    return this.columnPriority;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Partition_Job_StepRow this[int index] {
                get {
                    return ((Partition_Job_StepRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Partition_Job_StepRowChangeEventHandler Partition_Job_StepRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Partition_Job_StepRowChangeEventHandler Partition_Job_StepRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Partition_Job_StepRowChangeEventHandler Partition_Job_StepRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Partition_Job_StepRowChangeEventHandler Partition_Job_StepRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddPartition_Job_StepRow(Partition_Job_StepRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Partition_Job_StepRow AddPartition_Job_StepRow(System.DateTime Poll_Time, string Partition_ID, string Power_Job_Name, string VSE_Job_Name, string VSE_Step_Name, System.DateTime Job_Start_Time, System.DateTime Step_Start_Time, double CPU_Time_sec, double SIO_Count, double Priority) {
                Partition_Job_StepRow rowPartition_Job_StepRow = ((Partition_Job_StepRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Poll_Time,
                        Partition_ID,
                        Power_Job_Name,
                        VSE_Job_Name,
                        VSE_Step_Name,
                        Job_Start_Time,
                        Step_Start_Time,
                        CPU_Time_sec,
                        SIO_Count,
                        Priority};
                rowPartition_Job_StepRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPartition_Job_StepRow);
                return rowPartition_Job_StepRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Partition_Job_StepRow FindByPoll_TimePartition_IDPower_Job_NameVSE_Job_NameVSE_Step_NameJob_Start_TimeStep_Start_Time(System.DateTime Poll_Time, string Partition_ID, string Power_Job_Name, string VSE_Job_Name, string VSE_Step_Name, System.DateTime Job_Start_Time, System.DateTime Step_Start_Time) {
                return ((Partition_Job_StepRow)(this.Rows.Find(new object[] {
                            Poll_Time,
                            Partition_ID,
                            Power_Job_Name,
                            VSE_Job_Name,
                            VSE_Step_Name,
                            Job_Start_Time,
                            Step_Start_Time})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Partition_Job_StepDataTable cln = ((Partition_Job_StepDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Partition_Job_StepDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPoll_Time = base.Columns["Poll_Time"];
                this.columnPartition_ID = base.Columns["Partition_ID"];
                this.columnPower_Job_Name = base.Columns["Power_Job_Name"];
                this.columnVSE_Job_Name = base.Columns["VSE_Job_Name"];
                this.columnVSE_Step_Name = base.Columns["VSE_Step_Name"];
                this.columnJob_Start_Time = base.Columns["Job_Start_Time"];
                this.columnStep_Start_Time = base.Columns["Step_Start_Time"];
                this.columnCPU_Time_sec = base.Columns["CPU_Time_sec"];
                this.columnSIO_Count = base.Columns["SIO_Count"];
                this.columnPriority = base.Columns["Priority"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPoll_Time = new global::System.Data.DataColumn("Poll_Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPoll_Time);
                this.columnPartition_ID = new global::System.Data.DataColumn("Partition_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPartition_ID);
                this.columnPower_Job_Name = new global::System.Data.DataColumn("Power_Job_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPower_Job_Name);
                this.columnVSE_Job_Name = new global::System.Data.DataColumn("VSE_Job_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVSE_Job_Name);
                this.columnVSE_Step_Name = new global::System.Data.DataColumn("VSE_Step_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVSE_Step_Name);
                this.columnJob_Start_Time = new global::System.Data.DataColumn("Job_Start_Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJob_Start_Time);
                this.columnStep_Start_Time = new global::System.Data.DataColumn("Step_Start_Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStep_Start_Time);
                this.columnCPU_Time_sec = new global::System.Data.DataColumn("CPU_Time_sec", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCPU_Time_sec);
                this.columnSIO_Count = new global::System.Data.DataColumn("SIO_Count", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSIO_Count);
                this.columnPriority = new global::System.Data.DataColumn("Priority", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriority);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPoll_Time,
                                this.columnPartition_ID,
                                this.columnPower_Job_Name,
                                this.columnVSE_Job_Name,
                                this.columnVSE_Step_Name,
                                this.columnJob_Start_Time,
                                this.columnStep_Start_Time}, true));
                this.columnPoll_Time.AllowDBNull = false;
                this.columnPartition_ID.AllowDBNull = false;
                this.columnPartition_ID.MaxLength = 2;
                this.columnPower_Job_Name.AllowDBNull = false;
                this.columnPower_Job_Name.MaxLength = 8;
                this.columnVSE_Job_Name.AllowDBNull = false;
                this.columnVSE_Job_Name.MaxLength = 8;
                this.columnVSE_Step_Name.AllowDBNull = false;
                this.columnVSE_Step_Name.MaxLength = 8;
                this.columnJob_Start_Time.AllowDBNull = false;
                this.columnStep_Start_Time.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Partition_Job_StepRow NewPartition_Job_StepRow() {
                return ((Partition_Job_StepRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Partition_Job_StepRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Partition_Job_StepRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Partition_Job_StepRowChanged != null)) {
                    this.Partition_Job_StepRowChanged(this, new Partition_Job_StepRowChangeEvent(((Partition_Job_StepRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Partition_Job_StepRowChanging != null)) {
                    this.Partition_Job_StepRowChanging(this, new Partition_Job_StepRowChangeEvent(((Partition_Job_StepRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Partition_Job_StepRowDeleted != null)) {
                    this.Partition_Job_StepRowDeleted(this, new Partition_Job_StepRowChangeEvent(((Partition_Job_StepRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Partition_Job_StepRowDeleting != null)) {
                    this.Partition_Job_StepRowDeleting(this, new Partition_Job_StepRowChangeEvent(((Partition_Job_StepRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovePartition_Job_StepRow(Partition_Job_StepRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                VseDbDataSet ds = new VseDbDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Partition_Job_StepDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SeeServer_SummaryDataTable : global::System.Data.TypedTableBase<SeeServer_SummaryRow> {
            
            private global::System.Data.DataColumn columnPoll_Time;
            
            private global::System.Data.DataColumn columnSeeServer_Start_Time;
            
            private global::System.Data.DataColumn columnPID;
            
            private global::System.Data.DataColumn columnJob_Name;
            
            private global::System.Data.DataColumn columnRelease;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SeeServer_SummaryDataTable() {
                this.TableName = "SeeServer_Summary";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SeeServer_SummaryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SeeServer_SummaryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Poll_TimeColumn {
                get {
                    return this.columnPoll_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SeeServer_Start_TimeColumn {
                get {
                    return this.columnSeeServer_Start_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PIDColumn {
                get {
                    return this.columnPID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Job_NameColumn {
                get {
                    return this.columnJob_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReleaseColumn {
                get {
                    return this.columnRelease;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SeeServer_SummaryRow this[int index] {
                get {
                    return ((SeeServer_SummaryRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SeeServer_SummaryRowChangeEventHandler SeeServer_SummaryRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SeeServer_SummaryRowChangeEventHandler SeeServer_SummaryRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SeeServer_SummaryRowChangeEventHandler SeeServer_SummaryRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SeeServer_SummaryRowChangeEventHandler SeeServer_SummaryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSeeServer_SummaryRow(SeeServer_SummaryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SeeServer_SummaryRow AddSeeServer_SummaryRow(System.DateTime Poll_Time, System.DateTime SeeServer_Start_Time, string PID, string Job_Name, string Release) {
                SeeServer_SummaryRow rowSeeServer_SummaryRow = ((SeeServer_SummaryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Poll_Time,
                        SeeServer_Start_Time,
                        PID,
                        Job_Name,
                        Release};
                rowSeeServer_SummaryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSeeServer_SummaryRow);
                return rowSeeServer_SummaryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SeeServer_SummaryRow FindByPoll_Time(System.DateTime Poll_Time) {
                return ((SeeServer_SummaryRow)(this.Rows.Find(new object[] {
                            Poll_Time})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SeeServer_SummaryDataTable cln = ((SeeServer_SummaryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SeeServer_SummaryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPoll_Time = base.Columns["Poll_Time"];
                this.columnSeeServer_Start_Time = base.Columns["SeeServer_Start_Time"];
                this.columnPID = base.Columns["PID"];
                this.columnJob_Name = base.Columns["Job_Name"];
                this.columnRelease = base.Columns["Release"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPoll_Time = new global::System.Data.DataColumn("Poll_Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPoll_Time);
                this.columnSeeServer_Start_Time = new global::System.Data.DataColumn("SeeServer_Start_Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeeServer_Start_Time);
                this.columnPID = new global::System.Data.DataColumn("PID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPID);
                this.columnJob_Name = new global::System.Data.DataColumn("Job_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJob_Name);
                this.columnRelease = new global::System.Data.DataColumn("Release", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelease);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPoll_Time}, true));
                this.columnPoll_Time.AllowDBNull = false;
                this.columnPoll_Time.Unique = true;
                this.columnPID.MaxLength = 2;
                this.columnJob_Name.MaxLength = 8;
                this.columnRelease.MaxLength = 8;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SeeServer_SummaryRow NewSeeServer_SummaryRow() {
                return ((SeeServer_SummaryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SeeServer_SummaryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SeeServer_SummaryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SeeServer_SummaryRowChanged != null)) {
                    this.SeeServer_SummaryRowChanged(this, new SeeServer_SummaryRowChangeEvent(((SeeServer_SummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SeeServer_SummaryRowChanging != null)) {
                    this.SeeServer_SummaryRowChanging(this, new SeeServer_SummaryRowChangeEvent(((SeeServer_SummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SeeServer_SummaryRowDeleted != null)) {
                    this.SeeServer_SummaryRowDeleted(this, new SeeServer_SummaryRowChangeEvent(((SeeServer_SummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SeeServer_SummaryRowDeleting != null)) {
                    this.SeeServer_SummaryRowDeleting(this, new SeeServer_SummaryRowChangeEvent(((SeeServer_SummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSeeServer_SummaryRow(SeeServer_SummaryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                VseDbDataSet ds = new VseDbDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SeeServer_SummaryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Startup_RecordsDataTable : global::System.Data.TypedTableBase<Startup_RecordsRow> {
            
            private global::System.Data.DataColumn columnRecord_ID;
            
            private global::System.Data.DataColumn columnStart_Time;
            
            private global::System.Data.DataColumn columnCpu_ID;
            
            private global::System.Data.DataColumn columnProgram_ID;
            
            private global::System.Data.DataColumn columnProgram_Version;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Startup_RecordsDataTable() {
                this.TableName = "Startup_Records";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Startup_RecordsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Startup_RecordsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Record_IDColumn {
                get {
                    return this.columnRecord_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Start_TimeColumn {
                get {
                    return this.columnStart_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Cpu_IDColumn {
                get {
                    return this.columnCpu_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Program_IDColumn {
                get {
                    return this.columnProgram_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Program_VersionColumn {
                get {
                    return this.columnProgram_Version;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Startup_RecordsRow this[int index] {
                get {
                    return ((Startup_RecordsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Startup_RecordsRowChangeEventHandler Startup_RecordsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Startup_RecordsRowChangeEventHandler Startup_RecordsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Startup_RecordsRowChangeEventHandler Startup_RecordsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Startup_RecordsRowChangeEventHandler Startup_RecordsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddStartup_RecordsRow(Startup_RecordsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Startup_RecordsRow AddStartup_RecordsRow(System.DateTime Start_Time, string Cpu_ID, string Program_ID, string Program_Version) {
                Startup_RecordsRow rowStartup_RecordsRow = ((Startup_RecordsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Start_Time,
                        Cpu_ID,
                        Program_ID,
                        Program_Version};
                rowStartup_RecordsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStartup_RecordsRow);
                return rowStartup_RecordsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Startup_RecordsRow FindByRecord_IDStart_TimeProgram_ID(int Record_ID, System.DateTime Start_Time, string Program_ID) {
                return ((Startup_RecordsRow)(this.Rows.Find(new object[] {
                            Record_ID,
                            Start_Time,
                            Program_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Startup_RecordsDataTable cln = ((Startup_RecordsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Startup_RecordsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRecord_ID = base.Columns["Record_ID"];
                this.columnStart_Time = base.Columns["Start_Time"];
                this.columnCpu_ID = base.Columns["Cpu_ID"];
                this.columnProgram_ID = base.Columns["Program_ID"];
                this.columnProgram_Version = base.Columns["Program_Version"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRecord_ID = new global::System.Data.DataColumn("Record_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRecord_ID);
                this.columnStart_Time = new global::System.Data.DataColumn("Start_Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStart_Time);
                this.columnCpu_ID = new global::System.Data.DataColumn("Cpu_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCpu_ID);
                this.columnProgram_ID = new global::System.Data.DataColumn("Program_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgram_ID);
                this.columnProgram_Version = new global::System.Data.DataColumn("Program_Version", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgram_Version);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnRecord_ID,
                                this.columnStart_Time,
                                this.columnProgram_ID}, true));
                this.columnRecord_ID.AutoIncrement = true;
                this.columnRecord_ID.AllowDBNull = false;
                this.columnRecord_ID.ReadOnly = true;
                this.columnStart_Time.AllowDBNull = false;
                this.columnCpu_ID.MaxLength = 17;
                this.columnProgram_ID.AllowDBNull = false;
                this.columnProgram_ID.MaxLength = 8;
                this.columnProgram_Version.MaxLength = 8;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Startup_RecordsRow NewStartup_RecordsRow() {
                return ((Startup_RecordsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Startup_RecordsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Startup_RecordsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Startup_RecordsRowChanged != null)) {
                    this.Startup_RecordsRowChanged(this, new Startup_RecordsRowChangeEvent(((Startup_RecordsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Startup_RecordsRowChanging != null)) {
                    this.Startup_RecordsRowChanging(this, new Startup_RecordsRowChangeEvent(((Startup_RecordsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Startup_RecordsRowDeleted != null)) {
                    this.Startup_RecordsRowDeleted(this, new Startup_RecordsRowChangeEvent(((Startup_RecordsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Startup_RecordsRowDeleting != null)) {
                    this.Startup_RecordsRowDeleting(this, new Startup_RecordsRowChangeEvent(((Startup_RecordsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveStartup_RecordsRow(Startup_RecordsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                VseDbDataSet ds = new VseDbDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Startup_RecordsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TCPIP_ClientsDataTable : global::System.Data.TypedTableBase<TCPIP_ClientsRow> {
            
            private global::System.Data.DataColumn columnPoll_Time;
            
            private global::System.Data.DataColumn columnFTP_Clients;
            
            private global::System.Data.DataColumn columnTelnet_Clients;
            
            private global::System.Data.DataColumn columnLPR_Clients;
            
            private global::System.Data.DataColumn columnHTTP_Clients;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_ClientsDataTable() {
                this.TableName = "TCPIP_Clients";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TCPIP_ClientsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TCPIP_ClientsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Poll_TimeColumn {
                get {
                    return this.columnPoll_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTP_ClientsColumn {
                get {
                    return this.columnFTP_Clients;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Telnet_ClientsColumn {
                get {
                    return this.columnTelnet_Clients;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LPR_ClientsColumn {
                get {
                    return this.columnLPR_Clients;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HTTP_ClientsColumn {
                get {
                    return this.columnHTTP_Clients;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_ClientsRow this[int index] {
                get {
                    return ((TCPIP_ClientsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TCPIP_ClientsRowChangeEventHandler TCPIP_ClientsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TCPIP_ClientsRowChangeEventHandler TCPIP_ClientsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TCPIP_ClientsRowChangeEventHandler TCPIP_ClientsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TCPIP_ClientsRowChangeEventHandler TCPIP_ClientsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTCPIP_ClientsRow(TCPIP_ClientsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_ClientsRow AddTCPIP_ClientsRow(System.DateTime Poll_Time, double FTP_Clients, double Telnet_Clients, double LPR_Clients, double HTTP_Clients) {
                TCPIP_ClientsRow rowTCPIP_ClientsRow = ((TCPIP_ClientsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Poll_Time,
                        FTP_Clients,
                        Telnet_Clients,
                        LPR_Clients,
                        HTTP_Clients};
                rowTCPIP_ClientsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTCPIP_ClientsRow);
                return rowTCPIP_ClientsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_ClientsRow FindByPoll_Time(System.DateTime Poll_Time) {
                return ((TCPIP_ClientsRow)(this.Rows.Find(new object[] {
                            Poll_Time})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TCPIP_ClientsDataTable cln = ((TCPIP_ClientsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TCPIP_ClientsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPoll_Time = base.Columns["Poll_Time"];
                this.columnFTP_Clients = base.Columns["FTP_Clients"];
                this.columnTelnet_Clients = base.Columns["Telnet_Clients"];
                this.columnLPR_Clients = base.Columns["LPR_Clients"];
                this.columnHTTP_Clients = base.Columns["HTTP_Clients"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPoll_Time = new global::System.Data.DataColumn("Poll_Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPoll_Time);
                this.columnFTP_Clients = new global::System.Data.DataColumn("FTP_Clients", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTP_Clients);
                this.columnTelnet_Clients = new global::System.Data.DataColumn("Telnet_Clients", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelnet_Clients);
                this.columnLPR_Clients = new global::System.Data.DataColumn("LPR_Clients", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLPR_Clients);
                this.columnHTTP_Clients = new global::System.Data.DataColumn("HTTP_Clients", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHTTP_Clients);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPoll_Time}, true));
                this.columnPoll_Time.AllowDBNull = false;
                this.columnPoll_Time.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_ClientsRow NewTCPIP_ClientsRow() {
                return ((TCPIP_ClientsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TCPIP_ClientsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TCPIP_ClientsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TCPIP_ClientsRowChanged != null)) {
                    this.TCPIP_ClientsRowChanged(this, new TCPIP_ClientsRowChangeEvent(((TCPIP_ClientsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TCPIP_ClientsRowChanging != null)) {
                    this.TCPIP_ClientsRowChanging(this, new TCPIP_ClientsRowChangeEvent(((TCPIP_ClientsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TCPIP_ClientsRowDeleted != null)) {
                    this.TCPIP_ClientsRowDeleted(this, new TCPIP_ClientsRowChangeEvent(((TCPIP_ClientsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TCPIP_ClientsRowDeleting != null)) {
                    this.TCPIP_ClientsRowDeleting(this, new TCPIP_ClientsRowChangeEvent(((TCPIP_ClientsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTCPIP_ClientsRow(TCPIP_ClientsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                VseDbDataSet ds = new VseDbDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TCPIP_ClientsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TCPIP_DaemonsDataTable : global::System.Data.TypedTableBase<TCPIP_DaemonsRow> {
            
            private global::System.Data.DataColumn columnPoll_Time;
            
            private global::System.Data.DataColumn columnFTP_Daemons;
            
            private global::System.Data.DataColumn columnActive_FTP_Daemons;
            
            private global::System.Data.DataColumn columnMax_FTP_Daemons;
            
            private global::System.Data.DataColumn columnTelnet_Daemons;
            
            private global::System.Data.DataColumn columnActive_Telnet_Daemons;
            
            private global::System.Data.DataColumn columnMax_Telnet_Daemons;
            
            private global::System.Data.DataColumn columnActive_Telnet_Buffers;
            
            private global::System.Data.DataColumn columnMax_Telnet_Buffers;
            
            private global::System.Data.DataColumn columnLP_Daemons;
            
            private global::System.Data.DataColumn columnHTTP_Daemons;
            
            private global::System.Data.DataColumn columnSMTP_Daemons;
            
            private global::System.Data.DataColumn columnPOP3_Daemons;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_DaemonsDataTable() {
                this.TableName = "TCPIP_Daemons";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TCPIP_DaemonsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TCPIP_DaemonsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Poll_TimeColumn {
                get {
                    return this.columnPoll_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FTP_DaemonsColumn {
                get {
                    return this.columnFTP_Daemons;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Active_FTP_DaemonsColumn {
                get {
                    return this.columnActive_FTP_Daemons;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Max_FTP_DaemonsColumn {
                get {
                    return this.columnMax_FTP_Daemons;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Telnet_DaemonsColumn {
                get {
                    return this.columnTelnet_Daemons;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Active_Telnet_DaemonsColumn {
                get {
                    return this.columnActive_Telnet_Daemons;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Max_Telnet_DaemonsColumn {
                get {
                    return this.columnMax_Telnet_Daemons;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Active_Telnet_BuffersColumn {
                get {
                    return this.columnActive_Telnet_Buffers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Max_Telnet_BuffersColumn {
                get {
                    return this.columnMax_Telnet_Buffers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LP_DaemonsColumn {
                get {
                    return this.columnLP_Daemons;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HTTP_DaemonsColumn {
                get {
                    return this.columnHTTP_Daemons;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SMTP_DaemonsColumn {
                get {
                    return this.columnSMTP_Daemons;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn POP3_DaemonsColumn {
                get {
                    return this.columnPOP3_Daemons;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_DaemonsRow this[int index] {
                get {
                    return ((TCPIP_DaemonsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TCPIP_DaemonsRowChangeEventHandler TCPIP_DaemonsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TCPIP_DaemonsRowChangeEventHandler TCPIP_DaemonsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TCPIP_DaemonsRowChangeEventHandler TCPIP_DaemonsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TCPIP_DaemonsRowChangeEventHandler TCPIP_DaemonsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTCPIP_DaemonsRow(TCPIP_DaemonsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_DaemonsRow AddTCPIP_DaemonsRow(System.DateTime Poll_Time, double FTP_Daemons, double Active_FTP_Daemons, double Max_FTP_Daemons, double Telnet_Daemons, double Active_Telnet_Daemons, double Max_Telnet_Daemons, double Active_Telnet_Buffers, double Max_Telnet_Buffers, double LP_Daemons, double HTTP_Daemons, double SMTP_Daemons, double POP3_Daemons) {
                TCPIP_DaemonsRow rowTCPIP_DaemonsRow = ((TCPIP_DaemonsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Poll_Time,
                        FTP_Daemons,
                        Active_FTP_Daemons,
                        Max_FTP_Daemons,
                        Telnet_Daemons,
                        Active_Telnet_Daemons,
                        Max_Telnet_Daemons,
                        Active_Telnet_Buffers,
                        Max_Telnet_Buffers,
                        LP_Daemons,
                        HTTP_Daemons,
                        SMTP_Daemons,
                        POP3_Daemons};
                rowTCPIP_DaemonsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTCPIP_DaemonsRow);
                return rowTCPIP_DaemonsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_DaemonsRow FindByPoll_Time(System.DateTime Poll_Time) {
                return ((TCPIP_DaemonsRow)(this.Rows.Find(new object[] {
                            Poll_Time})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TCPIP_DaemonsDataTable cln = ((TCPIP_DaemonsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TCPIP_DaemonsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPoll_Time = base.Columns["Poll_Time"];
                this.columnFTP_Daemons = base.Columns["FTP_Daemons"];
                this.columnActive_FTP_Daemons = base.Columns["Active_FTP_Daemons"];
                this.columnMax_FTP_Daemons = base.Columns["Max_FTP_Daemons"];
                this.columnTelnet_Daemons = base.Columns["Telnet_Daemons"];
                this.columnActive_Telnet_Daemons = base.Columns["Active_Telnet_Daemons"];
                this.columnMax_Telnet_Daemons = base.Columns["Max_Telnet_Daemons"];
                this.columnActive_Telnet_Buffers = base.Columns["Active_Telnet_Buffers"];
                this.columnMax_Telnet_Buffers = base.Columns["Max_Telnet_Buffers"];
                this.columnLP_Daemons = base.Columns["LP_Daemons"];
                this.columnHTTP_Daemons = base.Columns["HTTP_Daemons"];
                this.columnSMTP_Daemons = base.Columns["SMTP_Daemons"];
                this.columnPOP3_Daemons = base.Columns["POP3_Daemons"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPoll_Time = new global::System.Data.DataColumn("Poll_Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPoll_Time);
                this.columnFTP_Daemons = new global::System.Data.DataColumn("FTP_Daemons", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFTP_Daemons);
                this.columnActive_FTP_Daemons = new global::System.Data.DataColumn("Active_FTP_Daemons", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive_FTP_Daemons);
                this.columnMax_FTP_Daemons = new global::System.Data.DataColumn("Max_FTP_Daemons", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMax_FTP_Daemons);
                this.columnTelnet_Daemons = new global::System.Data.DataColumn("Telnet_Daemons", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelnet_Daemons);
                this.columnActive_Telnet_Daemons = new global::System.Data.DataColumn("Active_Telnet_Daemons", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive_Telnet_Daemons);
                this.columnMax_Telnet_Daemons = new global::System.Data.DataColumn("Max_Telnet_Daemons", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMax_Telnet_Daemons);
                this.columnActive_Telnet_Buffers = new global::System.Data.DataColumn("Active_Telnet_Buffers", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive_Telnet_Buffers);
                this.columnMax_Telnet_Buffers = new global::System.Data.DataColumn("Max_Telnet_Buffers", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMax_Telnet_Buffers);
                this.columnLP_Daemons = new global::System.Data.DataColumn("LP_Daemons", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLP_Daemons);
                this.columnHTTP_Daemons = new global::System.Data.DataColumn("HTTP_Daemons", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHTTP_Daemons);
                this.columnSMTP_Daemons = new global::System.Data.DataColumn("SMTP_Daemons", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSMTP_Daemons);
                this.columnPOP3_Daemons = new global::System.Data.DataColumn("POP3_Daemons", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPOP3_Daemons);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPoll_Time}, true));
                this.columnPoll_Time.AllowDBNull = false;
                this.columnPoll_Time.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_DaemonsRow NewTCPIP_DaemonsRow() {
                return ((TCPIP_DaemonsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TCPIP_DaemonsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TCPIP_DaemonsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TCPIP_DaemonsRowChanged != null)) {
                    this.TCPIP_DaemonsRowChanged(this, new TCPIP_DaemonsRowChangeEvent(((TCPIP_DaemonsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TCPIP_DaemonsRowChanging != null)) {
                    this.TCPIP_DaemonsRowChanging(this, new TCPIP_DaemonsRowChangeEvent(((TCPIP_DaemonsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TCPIP_DaemonsRowDeleted != null)) {
                    this.TCPIP_DaemonsRowDeleted(this, new TCPIP_DaemonsRowChangeEvent(((TCPIP_DaemonsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TCPIP_DaemonsRowDeleting != null)) {
                    this.TCPIP_DaemonsRowDeleting(this, new TCPIP_DaemonsRowChangeEvent(((TCPIP_DaemonsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTCPIP_DaemonsRow(TCPIP_DaemonsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                VseDbDataSet ds = new VseDbDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TCPIP_DaemonsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TCPIP_DispatcherDataTable : global::System.Data.TypedTableBase<TCPIP_DispatcherRow> {
            
            private global::System.Data.DataColumn columnPoll_Time;
            
            private global::System.Data.DataColumn columnTotal_Dispatches;
            
            private global::System.Data.DataColumn columnActive_Dispatches;
            
            private global::System.Data.DataColumn columnFixed_Dispatches;
            
            private global::System.Data.DataColumn columnQuick_Dispatches;
            
            private global::System.Data.DataColumn columnPersistent_Dispatches;
            
            private global::System.Data.DataColumn columnComplete_Dispatches;
            
            private global::System.Data.DataColumn columnPassed_Dispatches;
            
            private global::System.Data.DataColumn columnTotal_Dispatcher_Time;
            
            private global::System.Data.DataColumn columnDispatcher_Waits;
            
            private global::System.Data.DataColumn columnStorage_Releases;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_DispatcherDataTable() {
                this.TableName = "TCPIP_Dispatcher";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TCPIP_DispatcherDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TCPIP_DispatcherDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Poll_TimeColumn {
                get {
                    return this.columnPoll_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Total_DispatchesColumn {
                get {
                    return this.columnTotal_Dispatches;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Active_DispatchesColumn {
                get {
                    return this.columnActive_Dispatches;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Fixed_DispatchesColumn {
                get {
                    return this.columnFixed_Dispatches;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Quick_DispatchesColumn {
                get {
                    return this.columnQuick_Dispatches;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Persistent_DispatchesColumn {
                get {
                    return this.columnPersistent_Dispatches;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Complete_DispatchesColumn {
                get {
                    return this.columnComplete_Dispatches;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Passed_DispatchesColumn {
                get {
                    return this.columnPassed_Dispatches;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Total_Dispatcher_TimeColumn {
                get {
                    return this.columnTotal_Dispatcher_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Dispatcher_WaitsColumn {
                get {
                    return this.columnDispatcher_Waits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Storage_ReleasesColumn {
                get {
                    return this.columnStorage_Releases;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_DispatcherRow this[int index] {
                get {
                    return ((TCPIP_DispatcherRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TCPIP_DispatcherRowChangeEventHandler TCPIP_DispatcherRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TCPIP_DispatcherRowChangeEventHandler TCPIP_DispatcherRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TCPIP_DispatcherRowChangeEventHandler TCPIP_DispatcherRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TCPIP_DispatcherRowChangeEventHandler TCPIP_DispatcherRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTCPIP_DispatcherRow(TCPIP_DispatcherRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_DispatcherRow AddTCPIP_DispatcherRow(System.DateTime Poll_Time, double Total_Dispatches, double Active_Dispatches, double Fixed_Dispatches, double Quick_Dispatches, double Persistent_Dispatches, double Complete_Dispatches, double Passed_Dispatches, double Total_Dispatcher_Time, double Dispatcher_Waits, double Storage_Releases) {
                TCPIP_DispatcherRow rowTCPIP_DispatcherRow = ((TCPIP_DispatcherRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Poll_Time,
                        Total_Dispatches,
                        Active_Dispatches,
                        Fixed_Dispatches,
                        Quick_Dispatches,
                        Persistent_Dispatches,
                        Complete_Dispatches,
                        Passed_Dispatches,
                        Total_Dispatcher_Time,
                        Dispatcher_Waits,
                        Storage_Releases};
                rowTCPIP_DispatcherRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTCPIP_DispatcherRow);
                return rowTCPIP_DispatcherRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_DispatcherRow FindByPoll_Time(System.DateTime Poll_Time) {
                return ((TCPIP_DispatcherRow)(this.Rows.Find(new object[] {
                            Poll_Time})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TCPIP_DispatcherDataTable cln = ((TCPIP_DispatcherDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TCPIP_DispatcherDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPoll_Time = base.Columns["Poll_Time"];
                this.columnTotal_Dispatches = base.Columns["Total_Dispatches"];
                this.columnActive_Dispatches = base.Columns["Active_Dispatches"];
                this.columnFixed_Dispatches = base.Columns["Fixed_Dispatches"];
                this.columnQuick_Dispatches = base.Columns["Quick_Dispatches"];
                this.columnPersistent_Dispatches = base.Columns["Persistent_Dispatches"];
                this.columnComplete_Dispatches = base.Columns["Complete_Dispatches"];
                this.columnPassed_Dispatches = base.Columns["Passed_Dispatches"];
                this.columnTotal_Dispatcher_Time = base.Columns["Total_Dispatcher_Time"];
                this.columnDispatcher_Waits = base.Columns["Dispatcher_Waits"];
                this.columnStorage_Releases = base.Columns["Storage_Releases"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPoll_Time = new global::System.Data.DataColumn("Poll_Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPoll_Time);
                this.columnTotal_Dispatches = new global::System.Data.DataColumn("Total_Dispatches", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal_Dispatches);
                this.columnActive_Dispatches = new global::System.Data.DataColumn("Active_Dispatches", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActive_Dispatches);
                this.columnFixed_Dispatches = new global::System.Data.DataColumn("Fixed_Dispatches", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFixed_Dispatches);
                this.columnQuick_Dispatches = new global::System.Data.DataColumn("Quick_Dispatches", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuick_Dispatches);
                this.columnPersistent_Dispatches = new global::System.Data.DataColumn("Persistent_Dispatches", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPersistent_Dispatches);
                this.columnComplete_Dispatches = new global::System.Data.DataColumn("Complete_Dispatches", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComplete_Dispatches);
                this.columnPassed_Dispatches = new global::System.Data.DataColumn("Passed_Dispatches", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPassed_Dispatches);
                this.columnTotal_Dispatcher_Time = new global::System.Data.DataColumn("Total_Dispatcher_Time", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal_Dispatcher_Time);
                this.columnDispatcher_Waits = new global::System.Data.DataColumn("Dispatcher_Waits", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDispatcher_Waits);
                this.columnStorage_Releases = new global::System.Data.DataColumn("Storage_Releases", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorage_Releases);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPoll_Time}, true));
                this.columnPoll_Time.AllowDBNull = false;
                this.columnPoll_Time.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_DispatcherRow NewTCPIP_DispatcherRow() {
                return ((TCPIP_DispatcherRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TCPIP_DispatcherRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TCPIP_DispatcherRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TCPIP_DispatcherRowChanged != null)) {
                    this.TCPIP_DispatcherRowChanged(this, new TCPIP_DispatcherRowChangeEvent(((TCPIP_DispatcherRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TCPIP_DispatcherRowChanging != null)) {
                    this.TCPIP_DispatcherRowChanging(this, new TCPIP_DispatcherRowChangeEvent(((TCPIP_DispatcherRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TCPIP_DispatcherRowDeleted != null)) {
                    this.TCPIP_DispatcherRowDeleted(this, new TCPIP_DispatcherRowChangeEvent(((TCPIP_DispatcherRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TCPIP_DispatcherRowDeleting != null)) {
                    this.TCPIP_DispatcherRowDeleting(this, new TCPIP_DispatcherRowChangeEvent(((TCPIP_DispatcherRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTCPIP_DispatcherRow(TCPIP_DispatcherRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                VseDbDataSet ds = new VseDbDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TCPIP_DispatcherDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TCPIP_ErrorsDataTable : global::System.Data.TypedTableBase<TCPIP_ErrorsRow> {
            
            private global::System.Data.DataColumn columnPoll_Time;
            
            private global::System.Data.DataColumn columnTCP_Checksum_Errors;
            
            private global::System.Data.DataColumn columnIP_Checksum_Errors;
            
            private global::System.Data.DataColumn columnUDP_Checksum_Errors;
            
            private global::System.Data.DataColumn columnICMP_Checksum_Errors;
            
            private global::System.Data.DataColumn columnDatagram_Length_Errors;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_ErrorsDataTable() {
                this.TableName = "TCPIP_Errors";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TCPIP_ErrorsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TCPIP_ErrorsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Poll_TimeColumn {
                get {
                    return this.columnPoll_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TCP_Checksum_ErrorsColumn {
                get {
                    return this.columnTCP_Checksum_Errors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IP_Checksum_ErrorsColumn {
                get {
                    return this.columnIP_Checksum_Errors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UDP_Checksum_ErrorsColumn {
                get {
                    return this.columnUDP_Checksum_Errors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ICMP_Checksum_ErrorsColumn {
                get {
                    return this.columnICMP_Checksum_Errors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Datagram_Length_ErrorsColumn {
                get {
                    return this.columnDatagram_Length_Errors;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_ErrorsRow this[int index] {
                get {
                    return ((TCPIP_ErrorsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TCPIP_ErrorsRowChangeEventHandler TCPIP_ErrorsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TCPIP_ErrorsRowChangeEventHandler TCPIP_ErrorsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TCPIP_ErrorsRowChangeEventHandler TCPIP_ErrorsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TCPIP_ErrorsRowChangeEventHandler TCPIP_ErrorsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTCPIP_ErrorsRow(TCPIP_ErrorsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_ErrorsRow AddTCPIP_ErrorsRow(System.DateTime Poll_Time, double TCP_Checksum_Errors, double IP_Checksum_Errors, double UDP_Checksum_Errors, double ICMP_Checksum_Errors, double Datagram_Length_Errors) {
                TCPIP_ErrorsRow rowTCPIP_ErrorsRow = ((TCPIP_ErrorsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Poll_Time,
                        TCP_Checksum_Errors,
                        IP_Checksum_Errors,
                        UDP_Checksum_Errors,
                        ICMP_Checksum_Errors,
                        Datagram_Length_Errors};
                rowTCPIP_ErrorsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTCPIP_ErrorsRow);
                return rowTCPIP_ErrorsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_ErrorsRow FindByPoll_Time(System.DateTime Poll_Time) {
                return ((TCPIP_ErrorsRow)(this.Rows.Find(new object[] {
                            Poll_Time})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TCPIP_ErrorsDataTable cln = ((TCPIP_ErrorsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TCPIP_ErrorsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPoll_Time = base.Columns["Poll_Time"];
                this.columnTCP_Checksum_Errors = base.Columns["TCP_Checksum_Errors"];
                this.columnIP_Checksum_Errors = base.Columns["IP_Checksum_Errors"];
                this.columnUDP_Checksum_Errors = base.Columns["UDP_Checksum_Errors"];
                this.columnICMP_Checksum_Errors = base.Columns["ICMP_Checksum_Errors"];
                this.columnDatagram_Length_Errors = base.Columns["Datagram_Length_Errors"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPoll_Time = new global::System.Data.DataColumn("Poll_Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPoll_Time);
                this.columnTCP_Checksum_Errors = new global::System.Data.DataColumn("TCP_Checksum_Errors", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTCP_Checksum_Errors);
                this.columnIP_Checksum_Errors = new global::System.Data.DataColumn("IP_Checksum_Errors", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIP_Checksum_Errors);
                this.columnUDP_Checksum_Errors = new global::System.Data.DataColumn("UDP_Checksum_Errors", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUDP_Checksum_Errors);
                this.columnICMP_Checksum_Errors = new global::System.Data.DataColumn("ICMP_Checksum_Errors", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnICMP_Checksum_Errors);
                this.columnDatagram_Length_Errors = new global::System.Data.DataColumn("Datagram_Length_Errors", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDatagram_Length_Errors);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPoll_Time}, true));
                this.columnPoll_Time.AllowDBNull = false;
                this.columnPoll_Time.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_ErrorsRow NewTCPIP_ErrorsRow() {
                return ((TCPIP_ErrorsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TCPIP_ErrorsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TCPIP_ErrorsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TCPIP_ErrorsRowChanged != null)) {
                    this.TCPIP_ErrorsRowChanged(this, new TCPIP_ErrorsRowChangeEvent(((TCPIP_ErrorsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TCPIP_ErrorsRowChanging != null)) {
                    this.TCPIP_ErrorsRowChanging(this, new TCPIP_ErrorsRowChangeEvent(((TCPIP_ErrorsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TCPIP_ErrorsRowDeleted != null)) {
                    this.TCPIP_ErrorsRowDeleted(this, new TCPIP_ErrorsRowChangeEvent(((TCPIP_ErrorsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TCPIP_ErrorsRowDeleting != null)) {
                    this.TCPIP_ErrorsRowDeleting(this, new TCPIP_ErrorsRowChangeEvent(((TCPIP_ErrorsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTCPIP_ErrorsRow(TCPIP_ErrorsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                VseDbDataSet ds = new VseDbDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TCPIP_ErrorsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TCPIP_MessagesDataTable : global::System.Data.TypedTableBase<TCPIP_MessagesRow> {
            
            private global::System.Data.DataColumn columnMessage_ID;
            
            private global::System.Data.DataColumn columnTime_Stamp;
            
            private global::System.Data.DataColumn columnMessage_Text;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_MessagesDataTable() {
                this.TableName = "TCPIP_Messages";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TCPIP_MessagesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TCPIP_MessagesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Message_IDColumn {
                get {
                    return this.columnMessage_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Time_StampColumn {
                get {
                    return this.columnTime_Stamp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Message_TextColumn {
                get {
                    return this.columnMessage_Text;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_MessagesRow this[int index] {
                get {
                    return ((TCPIP_MessagesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TCPIP_MessagesRowChangeEventHandler TCPIP_MessagesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TCPIP_MessagesRowChangeEventHandler TCPIP_MessagesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TCPIP_MessagesRowChangeEventHandler TCPIP_MessagesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TCPIP_MessagesRowChangeEventHandler TCPIP_MessagesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTCPIP_MessagesRow(TCPIP_MessagesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_MessagesRow AddTCPIP_MessagesRow(System.DateTime Time_Stamp, string Message_Text) {
                TCPIP_MessagesRow rowTCPIP_MessagesRow = ((TCPIP_MessagesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Time_Stamp,
                        Message_Text};
                rowTCPIP_MessagesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTCPIP_MessagesRow);
                return rowTCPIP_MessagesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_MessagesRow FindByMessage_ID(int Message_ID) {
                return ((TCPIP_MessagesRow)(this.Rows.Find(new object[] {
                            Message_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TCPIP_MessagesDataTable cln = ((TCPIP_MessagesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TCPIP_MessagesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnMessage_ID = base.Columns["Message_ID"];
                this.columnTime_Stamp = base.Columns["Time_Stamp"];
                this.columnMessage_Text = base.Columns["Message_Text"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnMessage_ID = new global::System.Data.DataColumn("Message_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMessage_ID);
                this.columnTime_Stamp = new global::System.Data.DataColumn("Time_Stamp", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTime_Stamp);
                this.columnMessage_Text = new global::System.Data.DataColumn("Message_Text", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMessage_Text);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMessage_ID}, true));
                this.columnMessage_ID.AutoIncrement = true;
                this.columnMessage_ID.AllowDBNull = false;
                this.columnMessage_ID.ReadOnly = true;
                this.columnMessage_ID.Unique = true;
                this.columnMessage_Text.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_MessagesRow NewTCPIP_MessagesRow() {
                return ((TCPIP_MessagesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TCPIP_MessagesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TCPIP_MessagesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TCPIP_MessagesRowChanged != null)) {
                    this.TCPIP_MessagesRowChanged(this, new TCPIP_MessagesRowChangeEvent(((TCPIP_MessagesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TCPIP_MessagesRowChanging != null)) {
                    this.TCPIP_MessagesRowChanging(this, new TCPIP_MessagesRowChangeEvent(((TCPIP_MessagesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TCPIP_MessagesRowDeleted != null)) {
                    this.TCPIP_MessagesRowDeleted(this, new TCPIP_MessagesRowChangeEvent(((TCPIP_MessagesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TCPIP_MessagesRowDeleting != null)) {
                    this.TCPIP_MessagesRowDeleting(this, new TCPIP_MessagesRowChangeEvent(((TCPIP_MessagesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTCPIP_MessagesRow(TCPIP_MessagesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                VseDbDataSet ds = new VseDbDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TCPIP_MessagesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TCPIP_OtherDataTable : global::System.Data.TypedTableBase<TCPIP_OtherRow> {
            
            private global::System.Data.DataColumn columnPoll_Time;
            
            private global::System.Data.DataColumn columnNon_IP;
            
            private global::System.Data.DataColumn columnMiss_Routed_IP;
            
            private global::System.Data.DataColumn columnDiscarded_UDP;
            
            private global::System.Data.DataColumn columnUnsupported_ICMP;
            
            private global::System.Data.DataColumn columnUnsupported_IGMP;
            
            private global::System.Data.DataColumn columnUnsupported_Protocol;
            
            private global::System.Data.DataColumn columnConnect_Rejections;
            
            private global::System.Data.DataColumn columnInbound_TCP_Rejections;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_OtherDataTable() {
                this.TableName = "TCPIP_Other";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TCPIP_OtherDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TCPIP_OtherDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Poll_TimeColumn {
                get {
                    return this.columnPoll_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Non_IPColumn {
                get {
                    return this.columnNon_IP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Miss_Routed_IPColumn {
                get {
                    return this.columnMiss_Routed_IP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Discarded_UDPColumn {
                get {
                    return this.columnDiscarded_UDP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Unsupported_ICMPColumn {
                get {
                    return this.columnUnsupported_ICMP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Unsupported_IGMPColumn {
                get {
                    return this.columnUnsupported_IGMP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Unsupported_ProtocolColumn {
                get {
                    return this.columnUnsupported_Protocol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Connect_RejectionsColumn {
                get {
                    return this.columnConnect_Rejections;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Inbound_TCP_RejectionsColumn {
                get {
                    return this.columnInbound_TCP_Rejections;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_OtherRow this[int index] {
                get {
                    return ((TCPIP_OtherRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TCPIP_OtherRowChangeEventHandler TCPIP_OtherRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TCPIP_OtherRowChangeEventHandler TCPIP_OtherRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TCPIP_OtherRowChangeEventHandler TCPIP_OtherRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TCPIP_OtherRowChangeEventHandler TCPIP_OtherRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTCPIP_OtherRow(TCPIP_OtherRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_OtherRow AddTCPIP_OtherRow(System.DateTime Poll_Time, double Non_IP, double Miss_Routed_IP, double Discarded_UDP, double Unsupported_ICMP, double Unsupported_IGMP, double Unsupported_Protocol, double Connect_Rejections, double Inbound_TCP_Rejections) {
                TCPIP_OtherRow rowTCPIP_OtherRow = ((TCPIP_OtherRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Poll_Time,
                        Non_IP,
                        Miss_Routed_IP,
                        Discarded_UDP,
                        Unsupported_ICMP,
                        Unsupported_IGMP,
                        Unsupported_Protocol,
                        Connect_Rejections,
                        Inbound_TCP_Rejections};
                rowTCPIP_OtherRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTCPIP_OtherRow);
                return rowTCPIP_OtherRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_OtherRow FindByPoll_Time(System.DateTime Poll_Time) {
                return ((TCPIP_OtherRow)(this.Rows.Find(new object[] {
                            Poll_Time})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TCPIP_OtherDataTable cln = ((TCPIP_OtherDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TCPIP_OtherDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPoll_Time = base.Columns["Poll_Time"];
                this.columnNon_IP = base.Columns["Non_IP"];
                this.columnMiss_Routed_IP = base.Columns["Miss_Routed_IP"];
                this.columnDiscarded_UDP = base.Columns["Discarded_UDP"];
                this.columnUnsupported_ICMP = base.Columns["Unsupported_ICMP"];
                this.columnUnsupported_IGMP = base.Columns["Unsupported_IGMP"];
                this.columnUnsupported_Protocol = base.Columns["Unsupported_Protocol"];
                this.columnConnect_Rejections = base.Columns["Connect_Rejections"];
                this.columnInbound_TCP_Rejections = base.Columns["Inbound_TCP_Rejections"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPoll_Time = new global::System.Data.DataColumn("Poll_Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPoll_Time);
                this.columnNon_IP = new global::System.Data.DataColumn("Non_IP", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNon_IP);
                this.columnMiss_Routed_IP = new global::System.Data.DataColumn("Miss_Routed_IP", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMiss_Routed_IP);
                this.columnDiscarded_UDP = new global::System.Data.DataColumn("Discarded_UDP", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDiscarded_UDP);
                this.columnUnsupported_ICMP = new global::System.Data.DataColumn("Unsupported_ICMP", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnsupported_ICMP);
                this.columnUnsupported_IGMP = new global::System.Data.DataColumn("Unsupported_IGMP", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnsupported_IGMP);
                this.columnUnsupported_Protocol = new global::System.Data.DataColumn("Unsupported_Protocol", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnsupported_Protocol);
                this.columnConnect_Rejections = new global::System.Data.DataColumn("Connect_Rejections", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConnect_Rejections);
                this.columnInbound_TCP_Rejections = new global::System.Data.DataColumn("Inbound_TCP_Rejections", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInbound_TCP_Rejections);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPoll_Time}, true));
                this.columnPoll_Time.AllowDBNull = false;
                this.columnPoll_Time.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_OtherRow NewTCPIP_OtherRow() {
                return ((TCPIP_OtherRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TCPIP_OtherRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TCPIP_OtherRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TCPIP_OtherRowChanged != null)) {
                    this.TCPIP_OtherRowChanged(this, new TCPIP_OtherRowChangeEvent(((TCPIP_OtherRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TCPIP_OtherRowChanging != null)) {
                    this.TCPIP_OtherRowChanging(this, new TCPIP_OtherRowChangeEvent(((TCPIP_OtherRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TCPIP_OtherRowDeleted != null)) {
                    this.TCPIP_OtherRowDeleted(this, new TCPIP_OtherRowChangeEvent(((TCPIP_OtherRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TCPIP_OtherRowDeleting != null)) {
                    this.TCPIP_OtherRowDeleting(this, new TCPIP_OtherRowChangeEvent(((TCPIP_OtherRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTCPIP_OtherRow(TCPIP_OtherRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                VseDbDataSet ds = new VseDbDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TCPIP_OtherDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TCPIP_SummaryDataTable : global::System.Data.TypedTableBase<TCPIP_SummaryRow> {
            
            private global::System.Data.DataColumn columnPoll_Time;
            
            private global::System.Data.DataColumn columnTCPIP_Start_Time;
            
            private global::System.Data.DataColumn columnSys_ID;
            
            private global::System.Data.DataColumn columnPID;
            
            private global::System.Data.DataColumn columnJob_Name;
            
            private global::System.Data.DataColumn columnRelease;
            
            private global::System.Data.DataColumn columnLicense;
            
            private global::System.Data.DataColumn columnIP_Address;
            
            private global::System.Data.DataColumn columnConsole_Port;
            
            private global::System.Data.DataColumn columnNof_TCPIP_Connections;
            
            private global::System.Data.DataColumn columnNof_TCPIP_PseudoTasks;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_SummaryDataTable() {
                this.TableName = "TCPIP_Summary";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TCPIP_SummaryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TCPIP_SummaryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Poll_TimeColumn {
                get {
                    return this.columnPoll_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TCPIP_Start_TimeColumn {
                get {
                    return this.columnTCPIP_Start_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Sys_IDColumn {
                get {
                    return this.columnSys_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PIDColumn {
                get {
                    return this.columnPID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Job_NameColumn {
                get {
                    return this.columnJob_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReleaseColumn {
                get {
                    return this.columnRelease;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LicenseColumn {
                get {
                    return this.columnLicense;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IP_AddressColumn {
                get {
                    return this.columnIP_Address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Console_PortColumn {
                get {
                    return this.columnConsole_Port;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Nof_TCPIP_ConnectionsColumn {
                get {
                    return this.columnNof_TCPIP_Connections;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Nof_TCPIP_PseudoTasksColumn {
                get {
                    return this.columnNof_TCPIP_PseudoTasks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_SummaryRow this[int index] {
                get {
                    return ((TCPIP_SummaryRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TCPIP_SummaryRowChangeEventHandler TCPIP_SummaryRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TCPIP_SummaryRowChangeEventHandler TCPIP_SummaryRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TCPIP_SummaryRowChangeEventHandler TCPIP_SummaryRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TCPIP_SummaryRowChangeEventHandler TCPIP_SummaryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTCPIP_SummaryRow(TCPIP_SummaryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_SummaryRow AddTCPIP_SummaryRow(System.DateTime Poll_Time, System.DateTime TCPIP_Start_Time, string Sys_ID, string PID, string Job_Name, string Release, string License, string IP_Address, double Console_Port, double Nof_TCPIP_Connections, double Nof_TCPIP_PseudoTasks) {
                TCPIP_SummaryRow rowTCPIP_SummaryRow = ((TCPIP_SummaryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Poll_Time,
                        TCPIP_Start_Time,
                        Sys_ID,
                        PID,
                        Job_Name,
                        Release,
                        License,
                        IP_Address,
                        Console_Port,
                        Nof_TCPIP_Connections,
                        Nof_TCPIP_PseudoTasks};
                rowTCPIP_SummaryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTCPIP_SummaryRow);
                return rowTCPIP_SummaryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_SummaryRow FindByPoll_Time(System.DateTime Poll_Time) {
                return ((TCPIP_SummaryRow)(this.Rows.Find(new object[] {
                            Poll_Time})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TCPIP_SummaryDataTable cln = ((TCPIP_SummaryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TCPIP_SummaryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPoll_Time = base.Columns["Poll_Time"];
                this.columnTCPIP_Start_Time = base.Columns["TCPIP_Start_Time"];
                this.columnSys_ID = base.Columns["Sys_ID"];
                this.columnPID = base.Columns["PID"];
                this.columnJob_Name = base.Columns["Job_Name"];
                this.columnRelease = base.Columns["Release"];
                this.columnLicense = base.Columns["License"];
                this.columnIP_Address = base.Columns["IP_Address"];
                this.columnConsole_Port = base.Columns["Console_Port"];
                this.columnNof_TCPIP_Connections = base.Columns["Nof_TCPIP_Connections"];
                this.columnNof_TCPIP_PseudoTasks = base.Columns["Nof_TCPIP_PseudoTasks"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPoll_Time = new global::System.Data.DataColumn("Poll_Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPoll_Time);
                this.columnTCPIP_Start_Time = new global::System.Data.DataColumn("TCPIP_Start_Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTCPIP_Start_Time);
                this.columnSys_ID = new global::System.Data.DataColumn("Sys_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSys_ID);
                this.columnPID = new global::System.Data.DataColumn("PID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPID);
                this.columnJob_Name = new global::System.Data.DataColumn("Job_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJob_Name);
                this.columnRelease = new global::System.Data.DataColumn("Release", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelease);
                this.columnLicense = new global::System.Data.DataColumn("License", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLicense);
                this.columnIP_Address = new global::System.Data.DataColumn("IP_Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIP_Address);
                this.columnConsole_Port = new global::System.Data.DataColumn("Console_Port", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnConsole_Port);
                this.columnNof_TCPIP_Connections = new global::System.Data.DataColumn("Nof_TCPIP_Connections", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNof_TCPIP_Connections);
                this.columnNof_TCPIP_PseudoTasks = new global::System.Data.DataColumn("Nof_TCPIP_PseudoTasks", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNof_TCPIP_PseudoTasks);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPoll_Time}, true));
                this.columnPoll_Time.AllowDBNull = false;
                this.columnPoll_Time.Unique = true;
                this.columnSys_ID.MaxLength = 2;
                this.columnPID.MaxLength = 2;
                this.columnJob_Name.MaxLength = 8;
                this.columnRelease.MaxLength = 8;
                this.columnLicense.MaxLength = 3;
                this.columnIP_Address.MaxLength = 15;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_SummaryRow NewTCPIP_SummaryRow() {
                return ((TCPIP_SummaryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TCPIP_SummaryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TCPIP_SummaryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TCPIP_SummaryRowChanged != null)) {
                    this.TCPIP_SummaryRowChanged(this, new TCPIP_SummaryRowChangeEvent(((TCPIP_SummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TCPIP_SummaryRowChanging != null)) {
                    this.TCPIP_SummaryRowChanging(this, new TCPIP_SummaryRowChangeEvent(((TCPIP_SummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TCPIP_SummaryRowDeleted != null)) {
                    this.TCPIP_SummaryRowDeleted(this, new TCPIP_SummaryRowChangeEvent(((TCPIP_SummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TCPIP_SummaryRowDeleting != null)) {
                    this.TCPIP_SummaryRowDeleting(this, new TCPIP_SummaryRowChangeEvent(((TCPIP_SummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTCPIP_SummaryRow(TCPIP_SummaryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                VseDbDataSet ds = new VseDbDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TCPIP_SummaryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TCPIP_TrafficDataTable : global::System.Data.TypedTableBase<TCPIP_TrafficRow> {
            
            private global::System.Data.DataColumn columnPoll_Time;
            
            private global::System.Data.DataColumn columnInt_FTP_Files_Sent;
            
            private global::System.Data.DataColumn columnInt_FTP_Files_Received;
            
            private global::System.Data.DataColumn columnInt_FTP_Bytes_Sent;
            
            private global::System.Data.DataColumn columnInt_FTP_Bytes_Received;
            
            private global::System.Data.DataColumn columnTelnet_Bytes_Sent;
            
            private global::System.Data.DataColumn columnTelnet_Bytes_Received;
            
            private global::System.Data.DataColumn columnTCP_Bytes_Sent;
            
            private global::System.Data.DataColumn columnTCP_Bytes_Received;
            
            private global::System.Data.DataColumn columnUDP_Bytes_Sent;
            
            private global::System.Data.DataColumn columnUDP_Bytes_Received;
            
            private global::System.Data.DataColumn columnIP_Bytes_Sent;
            
            private global::System.Data.DataColumn columnIP_Bytes_Received;
            
            private global::System.Data.DataColumn columnArps_In;
            
            private global::System.Data.DataColumn columnArp_Requests_Inbound;
            
            private global::System.Data.DataColumn columnArp_Requests_Outbound;
            
            private global::System.Data.DataColumn columnArp_Replies_Outbound;
            
            private global::System.Data.DataColumn columnIPNL3172_Blocks_Received;
            
            private global::System.Data.DataColumn columnIPNL3172_Blocks_Transmitted;
            
            private global::System.Data.DataColumn columnIPNL3172_Datagrams_Inbound;
            
            private global::System.Data.DataColumn columnIPNL3172_Datagrams_Outbound;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_TrafficDataTable() {
                this.TableName = "TCPIP_Traffic";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TCPIP_TrafficDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TCPIP_TrafficDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Poll_TimeColumn {
                get {
                    return this.columnPoll_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Int_FTP_Files_SentColumn {
                get {
                    return this.columnInt_FTP_Files_Sent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Int_FTP_Files_ReceivedColumn {
                get {
                    return this.columnInt_FTP_Files_Received;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Int_FTP_Bytes_SentColumn {
                get {
                    return this.columnInt_FTP_Bytes_Sent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Int_FTP_Bytes_ReceivedColumn {
                get {
                    return this.columnInt_FTP_Bytes_Received;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Telnet_Bytes_SentColumn {
                get {
                    return this.columnTelnet_Bytes_Sent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Telnet_Bytes_ReceivedColumn {
                get {
                    return this.columnTelnet_Bytes_Received;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TCP_Bytes_SentColumn {
                get {
                    return this.columnTCP_Bytes_Sent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TCP_Bytes_ReceivedColumn {
                get {
                    return this.columnTCP_Bytes_Received;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UDP_Bytes_SentColumn {
                get {
                    return this.columnUDP_Bytes_Sent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UDP_Bytes_ReceivedColumn {
                get {
                    return this.columnUDP_Bytes_Received;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IP_Bytes_SentColumn {
                get {
                    return this.columnIP_Bytes_Sent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IP_Bytes_ReceivedColumn {
                get {
                    return this.columnIP_Bytes_Received;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Arps_InColumn {
                get {
                    return this.columnArps_In;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Arp_Requests_InboundColumn {
                get {
                    return this.columnArp_Requests_Inbound;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Arp_Requests_OutboundColumn {
                get {
                    return this.columnArp_Requests_Outbound;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Arp_Replies_OutboundColumn {
                get {
                    return this.columnArp_Replies_Outbound;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IPNL3172_Blocks_ReceivedColumn {
                get {
                    return this.columnIPNL3172_Blocks_Received;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IPNL3172_Blocks_TransmittedColumn {
                get {
                    return this.columnIPNL3172_Blocks_Transmitted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IPNL3172_Datagrams_InboundColumn {
                get {
                    return this.columnIPNL3172_Datagrams_Inbound;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IPNL3172_Datagrams_OutboundColumn {
                get {
                    return this.columnIPNL3172_Datagrams_Outbound;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_TrafficRow this[int index] {
                get {
                    return ((TCPIP_TrafficRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TCPIP_TrafficRowChangeEventHandler TCPIP_TrafficRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TCPIP_TrafficRowChangeEventHandler TCPIP_TrafficRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TCPIP_TrafficRowChangeEventHandler TCPIP_TrafficRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TCPIP_TrafficRowChangeEventHandler TCPIP_TrafficRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTCPIP_TrafficRow(TCPIP_TrafficRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_TrafficRow AddTCPIP_TrafficRow(
                        System.DateTime Poll_Time, 
                        double Int_FTP_Files_Sent, 
                        double Int_FTP_Files_Received, 
                        double Int_FTP_Bytes_Sent, 
                        double Int_FTP_Bytes_Received, 
                        double Telnet_Bytes_Sent, 
                        double Telnet_Bytes_Received, 
                        double TCP_Bytes_Sent, 
                        double TCP_Bytes_Received, 
                        double UDP_Bytes_Sent, 
                        double UDP_Bytes_Received, 
                        double IP_Bytes_Sent, 
                        double IP_Bytes_Received, 
                        double Arps_In, 
                        double Arp_Requests_Inbound, 
                        double Arp_Requests_Outbound, 
                        double Arp_Replies_Outbound, 
                        double IPNL3172_Blocks_Received, 
                        double IPNL3172_Blocks_Transmitted, 
                        double IPNL3172_Datagrams_Inbound, 
                        double IPNL3172_Datagrams_Outbound) {
                TCPIP_TrafficRow rowTCPIP_TrafficRow = ((TCPIP_TrafficRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Poll_Time,
                        Int_FTP_Files_Sent,
                        Int_FTP_Files_Received,
                        Int_FTP_Bytes_Sent,
                        Int_FTP_Bytes_Received,
                        Telnet_Bytes_Sent,
                        Telnet_Bytes_Received,
                        TCP_Bytes_Sent,
                        TCP_Bytes_Received,
                        UDP_Bytes_Sent,
                        UDP_Bytes_Received,
                        IP_Bytes_Sent,
                        IP_Bytes_Received,
                        Arps_In,
                        Arp_Requests_Inbound,
                        Arp_Requests_Outbound,
                        Arp_Replies_Outbound,
                        IPNL3172_Blocks_Received,
                        IPNL3172_Blocks_Transmitted,
                        IPNL3172_Datagrams_Inbound,
                        IPNL3172_Datagrams_Outbound};
                rowTCPIP_TrafficRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTCPIP_TrafficRow);
                return rowTCPIP_TrafficRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_TrafficRow FindByPoll_Time(System.DateTime Poll_Time) {
                return ((TCPIP_TrafficRow)(this.Rows.Find(new object[] {
                            Poll_Time})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TCPIP_TrafficDataTable cln = ((TCPIP_TrafficDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TCPIP_TrafficDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPoll_Time = base.Columns["Poll_Time"];
                this.columnInt_FTP_Files_Sent = base.Columns["Int_FTP_Files_Sent"];
                this.columnInt_FTP_Files_Received = base.Columns["Int_FTP_Files_Received"];
                this.columnInt_FTP_Bytes_Sent = base.Columns["Int_FTP_Bytes_Sent"];
                this.columnInt_FTP_Bytes_Received = base.Columns["Int_FTP_Bytes_Received"];
                this.columnTelnet_Bytes_Sent = base.Columns["Telnet_Bytes_Sent"];
                this.columnTelnet_Bytes_Received = base.Columns["Telnet_Bytes_Received"];
                this.columnTCP_Bytes_Sent = base.Columns["TCP_Bytes_Sent"];
                this.columnTCP_Bytes_Received = base.Columns["TCP_Bytes_Received"];
                this.columnUDP_Bytes_Sent = base.Columns["UDP_Bytes_Sent"];
                this.columnUDP_Bytes_Received = base.Columns["UDP_Bytes_Received"];
                this.columnIP_Bytes_Sent = base.Columns["IP_Bytes_Sent"];
                this.columnIP_Bytes_Received = base.Columns["IP_Bytes_Received"];
                this.columnArps_In = base.Columns["Arps_In"];
                this.columnArp_Requests_Inbound = base.Columns["Arp_Requests_Inbound"];
                this.columnArp_Requests_Outbound = base.Columns["Arp_Requests_Outbound"];
                this.columnArp_Replies_Outbound = base.Columns["Arp_Replies_Outbound"];
                this.columnIPNL3172_Blocks_Received = base.Columns["IPNL3172_Blocks_Received"];
                this.columnIPNL3172_Blocks_Transmitted = base.Columns["IPNL3172_Blocks_Transmitted"];
                this.columnIPNL3172_Datagrams_Inbound = base.Columns["IPNL3172_Datagrams_Inbound"];
                this.columnIPNL3172_Datagrams_Outbound = base.Columns["IPNL3172_Datagrams_Outbound"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPoll_Time = new global::System.Data.DataColumn("Poll_Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPoll_Time);
                this.columnInt_FTP_Files_Sent = new global::System.Data.DataColumn("Int_FTP_Files_Sent", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInt_FTP_Files_Sent);
                this.columnInt_FTP_Files_Received = new global::System.Data.DataColumn("Int_FTP_Files_Received", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInt_FTP_Files_Received);
                this.columnInt_FTP_Bytes_Sent = new global::System.Data.DataColumn("Int_FTP_Bytes_Sent", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInt_FTP_Bytes_Sent);
                this.columnInt_FTP_Bytes_Received = new global::System.Data.DataColumn("Int_FTP_Bytes_Received", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInt_FTP_Bytes_Received);
                this.columnTelnet_Bytes_Sent = new global::System.Data.DataColumn("Telnet_Bytes_Sent", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelnet_Bytes_Sent);
                this.columnTelnet_Bytes_Received = new global::System.Data.DataColumn("Telnet_Bytes_Received", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelnet_Bytes_Received);
                this.columnTCP_Bytes_Sent = new global::System.Data.DataColumn("TCP_Bytes_Sent", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTCP_Bytes_Sent);
                this.columnTCP_Bytes_Received = new global::System.Data.DataColumn("TCP_Bytes_Received", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTCP_Bytes_Received);
                this.columnUDP_Bytes_Sent = new global::System.Data.DataColumn("UDP_Bytes_Sent", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUDP_Bytes_Sent);
                this.columnUDP_Bytes_Received = new global::System.Data.DataColumn("UDP_Bytes_Received", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUDP_Bytes_Received);
                this.columnIP_Bytes_Sent = new global::System.Data.DataColumn("IP_Bytes_Sent", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIP_Bytes_Sent);
                this.columnIP_Bytes_Received = new global::System.Data.DataColumn("IP_Bytes_Received", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIP_Bytes_Received);
                this.columnArps_In = new global::System.Data.DataColumn("Arps_In", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArps_In);
                this.columnArp_Requests_Inbound = new global::System.Data.DataColumn("Arp_Requests_Inbound", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArp_Requests_Inbound);
                this.columnArp_Requests_Outbound = new global::System.Data.DataColumn("Arp_Requests_Outbound", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArp_Requests_Outbound);
                this.columnArp_Replies_Outbound = new global::System.Data.DataColumn("Arp_Replies_Outbound", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArp_Replies_Outbound);
                this.columnIPNL3172_Blocks_Received = new global::System.Data.DataColumn("IPNL3172_Blocks_Received", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIPNL3172_Blocks_Received);
                this.columnIPNL3172_Blocks_Transmitted = new global::System.Data.DataColumn("IPNL3172_Blocks_Transmitted", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIPNL3172_Blocks_Transmitted);
                this.columnIPNL3172_Datagrams_Inbound = new global::System.Data.DataColumn("IPNL3172_Datagrams_Inbound", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIPNL3172_Datagrams_Inbound);
                this.columnIPNL3172_Datagrams_Outbound = new global::System.Data.DataColumn("IPNL3172_Datagrams_Outbound", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIPNL3172_Datagrams_Outbound);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPoll_Time}, true));
                this.columnPoll_Time.AllowDBNull = false;
                this.columnPoll_Time.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_TrafficRow NewTCPIP_TrafficRow() {
                return ((TCPIP_TrafficRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TCPIP_TrafficRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TCPIP_TrafficRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TCPIP_TrafficRowChanged != null)) {
                    this.TCPIP_TrafficRowChanged(this, new TCPIP_TrafficRowChangeEvent(((TCPIP_TrafficRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TCPIP_TrafficRowChanging != null)) {
                    this.TCPIP_TrafficRowChanging(this, new TCPIP_TrafficRowChangeEvent(((TCPIP_TrafficRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TCPIP_TrafficRowDeleted != null)) {
                    this.TCPIP_TrafficRowDeleted(this, new TCPIP_TrafficRowChangeEvent(((TCPIP_TrafficRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TCPIP_TrafficRowDeleting != null)) {
                    this.TCPIP_TrafficRowDeleting(this, new TCPIP_TrafficRowChangeEvent(((TCPIP_TrafficRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTCPIP_TrafficRow(TCPIP_TrafficRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                VseDbDataSet ds = new VseDbDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TCPIP_TrafficDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class VSE_StatsDataTable : global::System.Data.TypedTableBase<VSE_StatsRow> {
            
            private global::System.Data.DataColumn columnPoll_Time;
            
            private global::System.Data.DataColumn columnProgram_Checks;
            
            private global::System.Data.DataColumn columnPhase_Loads;
            
            private global::System.Data.DataColumn columnSubchannel_Starts;
            
            private global::System.Data.DataColumn columnSupervisor_Interrupts;
            
            private global::System.Data.DataColumn columnIO_Interrupts;
            
            private global::System.Data.DataColumn columnExternal_Interrupts;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VSE_StatsDataTable() {
                this.TableName = "VSE_Stats";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal VSE_StatsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected VSE_StatsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Poll_TimeColumn {
                get {
                    return this.columnPoll_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Program_ChecksColumn {
                get {
                    return this.columnProgram_Checks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Phase_LoadsColumn {
                get {
                    return this.columnPhase_Loads;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Subchannel_StartsColumn {
                get {
                    return this.columnSubchannel_Starts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Supervisor_InterruptsColumn {
                get {
                    return this.columnSupervisor_Interrupts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IO_InterruptsColumn {
                get {
                    return this.columnIO_Interrupts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn External_InterruptsColumn {
                get {
                    return this.columnExternal_Interrupts;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VSE_StatsRow this[int index] {
                get {
                    return ((VSE_StatsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event VSE_StatsRowChangeEventHandler VSE_StatsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event VSE_StatsRowChangeEventHandler VSE_StatsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event VSE_StatsRowChangeEventHandler VSE_StatsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event VSE_StatsRowChangeEventHandler VSE_StatsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddVSE_StatsRow(VSE_StatsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VSE_StatsRow AddVSE_StatsRow(System.DateTime Poll_Time, double Program_Checks, double Phase_Loads, double Subchannel_Starts, double Supervisor_Interrupts, double IO_Interrupts, double External_Interrupts) {
                VSE_StatsRow rowVSE_StatsRow = ((VSE_StatsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Poll_Time,
                        Program_Checks,
                        Phase_Loads,
                        Subchannel_Starts,
                        Supervisor_Interrupts,
                        IO_Interrupts,
                        External_Interrupts};
                rowVSE_StatsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowVSE_StatsRow);
                return rowVSE_StatsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VSE_StatsRow FindByPoll_Time(System.DateTime Poll_Time) {
                return ((VSE_StatsRow)(this.Rows.Find(new object[] {
                            Poll_Time})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                VSE_StatsDataTable cln = ((VSE_StatsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new VSE_StatsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPoll_Time = base.Columns["Poll_Time"];
                this.columnProgram_Checks = base.Columns["Program_Checks"];
                this.columnPhase_Loads = base.Columns["Phase_Loads"];
                this.columnSubchannel_Starts = base.Columns["Subchannel_Starts"];
                this.columnSupervisor_Interrupts = base.Columns["Supervisor_Interrupts"];
                this.columnIO_Interrupts = base.Columns["IO_Interrupts"];
                this.columnExternal_Interrupts = base.Columns["External_Interrupts"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPoll_Time = new global::System.Data.DataColumn("Poll_Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPoll_Time);
                this.columnProgram_Checks = new global::System.Data.DataColumn("Program_Checks", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProgram_Checks);
                this.columnPhase_Loads = new global::System.Data.DataColumn("Phase_Loads", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhase_Loads);
                this.columnSubchannel_Starts = new global::System.Data.DataColumn("Subchannel_Starts", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubchannel_Starts);
                this.columnSupervisor_Interrupts = new global::System.Data.DataColumn("Supervisor_Interrupts", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSupervisor_Interrupts);
                this.columnIO_Interrupts = new global::System.Data.DataColumn("IO_Interrupts", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIO_Interrupts);
                this.columnExternal_Interrupts = new global::System.Data.DataColumn("External_Interrupts", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExternal_Interrupts);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPoll_Time}, true));
                this.columnPoll_Time.AllowDBNull = false;
                this.columnPoll_Time.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VSE_StatsRow NewVSE_StatsRow() {
                return ((VSE_StatsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new VSE_StatsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(VSE_StatsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.VSE_StatsRowChanged != null)) {
                    this.VSE_StatsRowChanged(this, new VSE_StatsRowChangeEvent(((VSE_StatsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.VSE_StatsRowChanging != null)) {
                    this.VSE_StatsRowChanging(this, new VSE_StatsRowChangeEvent(((VSE_StatsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.VSE_StatsRowDeleted != null)) {
                    this.VSE_StatsRowDeleted(this, new VSE_StatsRowChangeEvent(((VSE_StatsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.VSE_StatsRowDeleting != null)) {
                    this.VSE_StatsRowDeleting(this, new VSE_StatsRowChangeEvent(((VSE_StatsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveVSE_StatsRow(VSE_StatsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                VseDbDataSet ds = new VseDbDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "VSE_StatsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class VSE_SummaryDataTable : global::System.Data.TypedTableBase<VSE_SummaryRow> {
            
            private global::System.Data.DataColumn columnPoll_Time;
            
            private global::System.Data.DataColumn columnLast_IPL_Time;
            
            private global::System.Data.DataColumn columnLast_CpuReset_Time;
            
            private global::System.Data.DataColumn columnSec_since_IPL;
            
            private global::System.Data.DataColumn columnSec_since_CpuReset;
            
            private global::System.Data.DataColumn columnCpu_ID;
            
            private global::System.Data.DataColumn columnRelease;
            
            private global::System.Data.DataColumn columnPower_Sys_ID;
            
            private global::System.Data.DataColumn columnPower_Node;
            
            private global::System.Data.DataColumn columnEuropean_Dates;
            
            private global::System.Data.DataColumn columnTime_Zone_Offset;
            
            private global::System.Data.DataColumn columnNof_Cpus;
            
            private global::System.Data.DataColumn columnNof_Active_Cpus;
            
            private global::System.Data.DataColumn columnNof_Quiesced_Cpus;
            
            private global::System.Data.DataColumn columnMaxNof_Tasks;
            
            private global::System.Data.DataColumn columnNof_Active_Tasks;
            
            private global::System.Data.DataColumn columnMaxNof_Partitions;
            
            private global::System.Data.DataColumn columnNof_Allocated_Partitions;
            
            private global::System.Data.DataColumn columnNof_TCPIP_Stacks;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VSE_SummaryDataTable() {
                this.TableName = "VSE_Summary";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal VSE_SummaryDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected VSE_SummaryDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Poll_TimeColumn {
                get {
                    return this.columnPoll_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Last_IPL_TimeColumn {
                get {
                    return this.columnLast_IPL_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Last_CpuReset_TimeColumn {
                get {
                    return this.columnLast_CpuReset_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Sec_since_IPLColumn {
                get {
                    return this.columnSec_since_IPL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Sec_since_CpuResetColumn {
                get {
                    return this.columnSec_since_CpuReset;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Cpu_IDColumn {
                get {
                    return this.columnCpu_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReleaseColumn {
                get {
                    return this.columnRelease;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Power_Sys_IDColumn {
                get {
                    return this.columnPower_Sys_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Power_NodeColumn {
                get {
                    return this.columnPower_Node;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn European_DatesColumn {
                get {
                    return this.columnEuropean_Dates;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Time_Zone_OffsetColumn {
                get {
                    return this.columnTime_Zone_Offset;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Nof_CpusColumn {
                get {
                    return this.columnNof_Cpus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Nof_Active_CpusColumn {
                get {
                    return this.columnNof_Active_Cpus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Nof_Quiesced_CpusColumn {
                get {
                    return this.columnNof_Quiesced_Cpus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxNof_TasksColumn {
                get {
                    return this.columnMaxNof_Tasks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Nof_Active_TasksColumn {
                get {
                    return this.columnNof_Active_Tasks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxNof_PartitionsColumn {
                get {
                    return this.columnMaxNof_Partitions;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Nof_Allocated_PartitionsColumn {
                get {
                    return this.columnNof_Allocated_Partitions;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Nof_TCPIP_StacksColumn {
                get {
                    return this.columnNof_TCPIP_Stacks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VSE_SummaryRow this[int index] {
                get {
                    return ((VSE_SummaryRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event VSE_SummaryRowChangeEventHandler VSE_SummaryRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event VSE_SummaryRowChangeEventHandler VSE_SummaryRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event VSE_SummaryRowChangeEventHandler VSE_SummaryRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event VSE_SummaryRowChangeEventHandler VSE_SummaryRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddVSE_SummaryRow(VSE_SummaryRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VSE_SummaryRow AddVSE_SummaryRow(
                        System.DateTime Poll_Time, 
                        System.DateTime Last_IPL_Time, 
                        System.DateTime Last_CpuReset_Time, 
                        double Sec_since_IPL, 
                        double Sec_since_CpuReset, 
                        string Cpu_ID, 
                        string Release, 
                        string Power_Sys_ID, 
                        string Power_Node, 
                        bool European_Dates, 
                        double Time_Zone_Offset, 
                        double Nof_Cpus, 
                        double Nof_Active_Cpus, 
                        double Nof_Quiesced_Cpus, 
                        double MaxNof_Tasks, 
                        double Nof_Active_Tasks, 
                        double MaxNof_Partitions, 
                        double Nof_Allocated_Partitions, 
                        double Nof_TCPIP_Stacks) {
                VSE_SummaryRow rowVSE_SummaryRow = ((VSE_SummaryRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Poll_Time,
                        Last_IPL_Time,
                        Last_CpuReset_Time,
                        Sec_since_IPL,
                        Sec_since_CpuReset,
                        Cpu_ID,
                        Release,
                        Power_Sys_ID,
                        Power_Node,
                        European_Dates,
                        Time_Zone_Offset,
                        Nof_Cpus,
                        Nof_Active_Cpus,
                        Nof_Quiesced_Cpus,
                        MaxNof_Tasks,
                        Nof_Active_Tasks,
                        MaxNof_Partitions,
                        Nof_Allocated_Partitions,
                        Nof_TCPIP_Stacks};
                rowVSE_SummaryRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowVSE_SummaryRow);
                return rowVSE_SummaryRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VSE_SummaryRow FindByPoll_Time(System.DateTime Poll_Time) {
                return ((VSE_SummaryRow)(this.Rows.Find(new object[] {
                            Poll_Time})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                VSE_SummaryDataTable cln = ((VSE_SummaryDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new VSE_SummaryDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPoll_Time = base.Columns["Poll_Time"];
                this.columnLast_IPL_Time = base.Columns["Last_IPL_Time"];
                this.columnLast_CpuReset_Time = base.Columns["Last_CpuReset_Time"];
                this.columnSec_since_IPL = base.Columns["Sec_since_IPL"];
                this.columnSec_since_CpuReset = base.Columns["Sec_since_CpuReset"];
                this.columnCpu_ID = base.Columns["Cpu_ID"];
                this.columnRelease = base.Columns["Release"];
                this.columnPower_Sys_ID = base.Columns["Power_Sys_ID"];
                this.columnPower_Node = base.Columns["Power_Node"];
                this.columnEuropean_Dates = base.Columns["European_Dates"];
                this.columnTime_Zone_Offset = base.Columns["Time_Zone_Offset"];
                this.columnNof_Cpus = base.Columns["Nof_Cpus"];
                this.columnNof_Active_Cpus = base.Columns["Nof_Active_Cpus"];
                this.columnNof_Quiesced_Cpus = base.Columns["Nof_Quiesced_Cpus"];
                this.columnMaxNof_Tasks = base.Columns["MaxNof_Tasks"];
                this.columnNof_Active_Tasks = base.Columns["Nof_Active_Tasks"];
                this.columnMaxNof_Partitions = base.Columns["MaxNof_Partitions"];
                this.columnNof_Allocated_Partitions = base.Columns["Nof_Allocated_Partitions"];
                this.columnNof_TCPIP_Stacks = base.Columns["Nof_TCPIP_Stacks"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPoll_Time = new global::System.Data.DataColumn("Poll_Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPoll_Time);
                this.columnLast_IPL_Time = new global::System.Data.DataColumn("Last_IPL_Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLast_IPL_Time);
                this.columnLast_CpuReset_Time = new global::System.Data.DataColumn("Last_CpuReset_Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLast_CpuReset_Time);
                this.columnSec_since_IPL = new global::System.Data.DataColumn("Sec_since_IPL", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSec_since_IPL);
                this.columnSec_since_CpuReset = new global::System.Data.DataColumn("Sec_since_CpuReset", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSec_since_CpuReset);
                this.columnCpu_ID = new global::System.Data.DataColumn("Cpu_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCpu_ID);
                this.columnRelease = new global::System.Data.DataColumn("Release", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelease);
                this.columnPower_Sys_ID = new global::System.Data.DataColumn("Power_Sys_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPower_Sys_ID);
                this.columnPower_Node = new global::System.Data.DataColumn("Power_Node", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPower_Node);
                this.columnEuropean_Dates = new global::System.Data.DataColumn("European_Dates", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEuropean_Dates);
                this.columnTime_Zone_Offset = new global::System.Data.DataColumn("Time_Zone_Offset", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTime_Zone_Offset);
                this.columnNof_Cpus = new global::System.Data.DataColumn("Nof_Cpus", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNof_Cpus);
                this.columnNof_Active_Cpus = new global::System.Data.DataColumn("Nof_Active_Cpus", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNof_Active_Cpus);
                this.columnNof_Quiesced_Cpus = new global::System.Data.DataColumn("Nof_Quiesced_Cpus", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNof_Quiesced_Cpus);
                this.columnMaxNof_Tasks = new global::System.Data.DataColumn("MaxNof_Tasks", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxNof_Tasks);
                this.columnNof_Active_Tasks = new global::System.Data.DataColumn("Nof_Active_Tasks", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNof_Active_Tasks);
                this.columnMaxNof_Partitions = new global::System.Data.DataColumn("MaxNof_Partitions", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxNof_Partitions);
                this.columnNof_Allocated_Partitions = new global::System.Data.DataColumn("Nof_Allocated_Partitions", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNof_Allocated_Partitions);
                this.columnNof_TCPIP_Stacks = new global::System.Data.DataColumn("Nof_TCPIP_Stacks", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNof_TCPIP_Stacks);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPoll_Time}, true));
                this.columnPoll_Time.AllowDBNull = false;
                this.columnPoll_Time.Unique = true;
                this.columnCpu_ID.MaxLength = 17;
                this.columnRelease.MaxLength = 5;
                this.columnPower_Sys_ID.MaxLength = 1;
                this.columnPower_Node.MaxLength = 8;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VSE_SummaryRow NewVSE_SummaryRow() {
                return ((VSE_SummaryRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new VSE_SummaryRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(VSE_SummaryRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.VSE_SummaryRowChanged != null)) {
                    this.VSE_SummaryRowChanged(this, new VSE_SummaryRowChangeEvent(((VSE_SummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.VSE_SummaryRowChanging != null)) {
                    this.VSE_SummaryRowChanging(this, new VSE_SummaryRowChangeEvent(((VSE_SummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.VSE_SummaryRowDeleted != null)) {
                    this.VSE_SummaryRowDeleted(this, new VSE_SummaryRowChangeEvent(((VSE_SummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.VSE_SummaryRowDeleting != null)) {
                    this.VSE_SummaryRowDeleting(this, new VSE_SummaryRowChangeEvent(((VSE_SummaryRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveVSE_SummaryRow(VSE_SummaryRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                VseDbDataSet ds = new VseDbDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "VSE_SummaryDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ForeignIP_AllDataTable : global::System.Data.TypedTableBase<ForeignIP_AllRow> {
            
            private global::System.Data.DataColumn columnPoll_Time;
            
            private global::System.Data.DataColumn columnIP_Address;
            
            private global::System.Data.DataColumn columnRefuse_Flag;
            
            private global::System.Data.DataColumn columnMisdirected_IP_Datagrams;
            
            private global::System.Data.DataColumn columnNonIP_Datagrams;
            
            private global::System.Data.DataColumn columnARP_Inbound_Datagrams;
            
            private global::System.Data.DataColumn columnARP_Outbound_Datagrams;
            
            private global::System.Data.DataColumn columnICMP_Inbound_Datagrams;
            
            private global::System.Data.DataColumn columnICMP_Outbound_Datagrams;
            
            private global::System.Data.DataColumn columnIP_Inbound_Datagrams;
            
            private global::System.Data.DataColumn columnIP_Outbound_Datagrams;
            
            private global::System.Data.DataColumn columnTCP_Inbound_Datagrams;
            
            private global::System.Data.DataColumn columnTCP_Outbound_Datagrams;
            
            private global::System.Data.DataColumn columnUDP_Inbound_Datagrams;
            
            private global::System.Data.DataColumn columnUDP_Outbound_Datagrams;
            
            private global::System.Data.DataColumn columnMisdirected_IP_Bytes;
            
            private global::System.Data.DataColumn columnNonIP_Bytes;
            
            private global::System.Data.DataColumn columnARP_Inbound_Bytes;
            
            private global::System.Data.DataColumn columnARP_Outbound_Bytes;
            
            private global::System.Data.DataColumn columnICMP_Inbound_Bytes;
            
            private global::System.Data.DataColumn columnICMP_Outbound_Bytes;
            
            private global::System.Data.DataColumn columnIP_Inbound_Bytes;
            
            private global::System.Data.DataColumn columnIP_Outbound_Bytes;
            
            private global::System.Data.DataColumn columnTCP_Inbound_Bytes;
            
            private global::System.Data.DataColumn columnTCP_Outbound_Bytes;
            
            private global::System.Data.DataColumn columnUDP_Inbound_Bytes;
            
            private global::System.Data.DataColumn columnUDP_Outbound_Bytes;
            
            private global::System.Data.DataColumn columnRefused_Bytes;
            
            private global::System.Data.DataColumn columnRefused_Datagrams;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ForeignIP_AllDataTable() {
                this.TableName = "ForeignIP_All";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ForeignIP_AllDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ForeignIP_AllDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Poll_TimeColumn {
                get {
                    return this.columnPoll_Time;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IP_AddressColumn {
                get {
                    return this.columnIP_Address;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Refuse_FlagColumn {
                get {
                    return this.columnRefuse_Flag;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Misdirected_IP_DatagramsColumn {
                get {
                    return this.columnMisdirected_IP_Datagrams;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NonIP_DatagramsColumn {
                get {
                    return this.columnNonIP_Datagrams;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ARP_Inbound_DatagramsColumn {
                get {
                    return this.columnARP_Inbound_Datagrams;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ARP_Outbound_DatagramsColumn {
                get {
                    return this.columnARP_Outbound_Datagrams;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ICMP_Inbound_DatagramsColumn {
                get {
                    return this.columnICMP_Inbound_Datagrams;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ICMP_Outbound_DatagramsColumn {
                get {
                    return this.columnICMP_Outbound_Datagrams;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IP_Inbound_DatagramsColumn {
                get {
                    return this.columnIP_Inbound_Datagrams;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IP_Outbound_DatagramsColumn {
                get {
                    return this.columnIP_Outbound_Datagrams;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TCP_Inbound_DatagramsColumn {
                get {
                    return this.columnTCP_Inbound_Datagrams;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TCP_Outbound_DatagramsColumn {
                get {
                    return this.columnTCP_Outbound_Datagrams;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UDP_Inbound_DatagramsColumn {
                get {
                    return this.columnUDP_Inbound_Datagrams;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UDP_Outbound_DatagramsColumn {
                get {
                    return this.columnUDP_Outbound_Datagrams;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Misdirected_IP_BytesColumn {
                get {
                    return this.columnMisdirected_IP_Bytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NonIP_BytesColumn {
                get {
                    return this.columnNonIP_Bytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ARP_Inbound_BytesColumn {
                get {
                    return this.columnARP_Inbound_Bytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ARP_Outbound_BytesColumn {
                get {
                    return this.columnARP_Outbound_Bytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ICMP_Inbound_BytesColumn {
                get {
                    return this.columnICMP_Inbound_Bytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ICMP_Outbound_BytesColumn {
                get {
                    return this.columnICMP_Outbound_Bytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IP_Inbound_BytesColumn {
                get {
                    return this.columnIP_Inbound_Bytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IP_Outbound_BytesColumn {
                get {
                    return this.columnIP_Outbound_Bytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TCP_Inbound_BytesColumn {
                get {
                    return this.columnTCP_Inbound_Bytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TCP_Outbound_BytesColumn {
                get {
                    return this.columnTCP_Outbound_Bytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UDP_Inbound_BytesColumn {
                get {
                    return this.columnUDP_Inbound_Bytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UDP_Outbound_BytesColumn {
                get {
                    return this.columnUDP_Outbound_Bytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Refused_BytesColumn {
                get {
                    return this.columnRefused_Bytes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Refused_DatagramsColumn {
                get {
                    return this.columnRefused_Datagrams;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ForeignIP_AllRow this[int index] {
                get {
                    return ((ForeignIP_AllRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ForeignIP_AllRowChangeEventHandler ForeignIP_AllRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ForeignIP_AllRowChangeEventHandler ForeignIP_AllRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ForeignIP_AllRowChangeEventHandler ForeignIP_AllRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ForeignIP_AllRowChangeEventHandler ForeignIP_AllRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddForeignIP_AllRow(ForeignIP_AllRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ForeignIP_AllRow AddForeignIP_AllRow(
                        System.DateTime Poll_Time, 
                        string IP_Address, 
                        bool Refuse_Flag, 
                        double Misdirected_IP_Datagrams, 
                        double NonIP_Datagrams, 
                        double ARP_Inbound_Datagrams, 
                        double ARP_Outbound_Datagrams, 
                        double ICMP_Inbound_Datagrams, 
                        double ICMP_Outbound_Datagrams, 
                        double IP_Inbound_Datagrams, 
                        double IP_Outbound_Datagrams, 
                        double TCP_Inbound_Datagrams, 
                        double TCP_Outbound_Datagrams, 
                        double UDP_Inbound_Datagrams, 
                        double UDP_Outbound_Datagrams, 
                        double Misdirected_IP_Bytes, 
                        double NonIP_Bytes, 
                        double ARP_Inbound_Bytes, 
                        double ARP_Outbound_Bytes, 
                        double ICMP_Inbound_Bytes, 
                        double ICMP_Outbound_Bytes, 
                        double IP_Inbound_Bytes, 
                        double IP_Outbound_Bytes, 
                        double TCP_Inbound_Bytes, 
                        double TCP_Outbound_Bytes, 
                        double UDP_Inbound_Bytes, 
                        double UDP_Outbound_Bytes, 
                        double Refused_Bytes, 
                        double Refused_Datagrams) {
                ForeignIP_AllRow rowForeignIP_AllRow = ((ForeignIP_AllRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Poll_Time,
                        IP_Address,
                        Refuse_Flag,
                        Misdirected_IP_Datagrams,
                        NonIP_Datagrams,
                        ARP_Inbound_Datagrams,
                        ARP_Outbound_Datagrams,
                        ICMP_Inbound_Datagrams,
                        ICMP_Outbound_Datagrams,
                        IP_Inbound_Datagrams,
                        IP_Outbound_Datagrams,
                        TCP_Inbound_Datagrams,
                        TCP_Outbound_Datagrams,
                        UDP_Inbound_Datagrams,
                        UDP_Outbound_Datagrams,
                        Misdirected_IP_Bytes,
                        NonIP_Bytes,
                        ARP_Inbound_Bytes,
                        ARP_Outbound_Bytes,
                        ICMP_Inbound_Bytes,
                        ICMP_Outbound_Bytes,
                        IP_Inbound_Bytes,
                        IP_Outbound_Bytes,
                        TCP_Inbound_Bytes,
                        TCP_Outbound_Bytes,
                        UDP_Inbound_Bytes,
                        UDP_Outbound_Bytes,
                        Refused_Bytes,
                        Refused_Datagrams};
                rowForeignIP_AllRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowForeignIP_AllRow);
                return rowForeignIP_AllRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ForeignIP_AllRow FindByPoll_TimeIP_Address(System.DateTime Poll_Time, string IP_Address) {
                return ((ForeignIP_AllRow)(this.Rows.Find(new object[] {
                            Poll_Time,
                            IP_Address})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ForeignIP_AllDataTable cln = ((ForeignIP_AllDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ForeignIP_AllDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPoll_Time = base.Columns["Poll_Time"];
                this.columnIP_Address = base.Columns["IP_Address"];
                this.columnRefuse_Flag = base.Columns["Refuse_Flag"];
                this.columnMisdirected_IP_Datagrams = base.Columns["Misdirected_IP_Datagrams"];
                this.columnNonIP_Datagrams = base.Columns["NonIP_Datagrams"];
                this.columnARP_Inbound_Datagrams = base.Columns["ARP_Inbound_Datagrams"];
                this.columnARP_Outbound_Datagrams = base.Columns["ARP_Outbound_Datagrams"];
                this.columnICMP_Inbound_Datagrams = base.Columns["ICMP_Inbound_Datagrams"];
                this.columnICMP_Outbound_Datagrams = base.Columns["ICMP_Outbound_Datagrams"];
                this.columnIP_Inbound_Datagrams = base.Columns["IP_Inbound_Datagrams"];
                this.columnIP_Outbound_Datagrams = base.Columns["IP_Outbound_Datagrams"];
                this.columnTCP_Inbound_Datagrams = base.Columns["TCP_Inbound_Datagrams"];
                this.columnTCP_Outbound_Datagrams = base.Columns["TCP_Outbound_Datagrams"];
                this.columnUDP_Inbound_Datagrams = base.Columns["UDP_Inbound_Datagrams"];
                this.columnUDP_Outbound_Datagrams = base.Columns["UDP_Outbound_Datagrams"];
                this.columnMisdirected_IP_Bytes = base.Columns["Misdirected_IP_Bytes"];
                this.columnNonIP_Bytes = base.Columns["NonIP_Bytes"];
                this.columnARP_Inbound_Bytes = base.Columns["ARP_Inbound_Bytes"];
                this.columnARP_Outbound_Bytes = base.Columns["ARP_Outbound_Bytes"];
                this.columnICMP_Inbound_Bytes = base.Columns["ICMP_Inbound_Bytes"];
                this.columnICMP_Outbound_Bytes = base.Columns["ICMP_Outbound_Bytes"];
                this.columnIP_Inbound_Bytes = base.Columns["IP_Inbound_Bytes"];
                this.columnIP_Outbound_Bytes = base.Columns["IP_Outbound_Bytes"];
                this.columnTCP_Inbound_Bytes = base.Columns["TCP_Inbound_Bytes"];
                this.columnTCP_Outbound_Bytes = base.Columns["TCP_Outbound_Bytes"];
                this.columnUDP_Inbound_Bytes = base.Columns["UDP_Inbound_Bytes"];
                this.columnUDP_Outbound_Bytes = base.Columns["UDP_Outbound_Bytes"];
                this.columnRefused_Bytes = base.Columns["Refused_Bytes"];
                this.columnRefused_Datagrams = base.Columns["Refused_Datagrams"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPoll_Time = new global::System.Data.DataColumn("Poll_Time", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPoll_Time);
                this.columnIP_Address = new global::System.Data.DataColumn("IP_Address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIP_Address);
                this.columnRefuse_Flag = new global::System.Data.DataColumn("Refuse_Flag", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefuse_Flag);
                this.columnMisdirected_IP_Datagrams = new global::System.Data.DataColumn("Misdirected_IP_Datagrams", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMisdirected_IP_Datagrams);
                this.columnNonIP_Datagrams = new global::System.Data.DataColumn("NonIP_Datagrams", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNonIP_Datagrams);
                this.columnARP_Inbound_Datagrams = new global::System.Data.DataColumn("ARP_Inbound_Datagrams", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnARP_Inbound_Datagrams);
                this.columnARP_Outbound_Datagrams = new global::System.Data.DataColumn("ARP_Outbound_Datagrams", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnARP_Outbound_Datagrams);
                this.columnICMP_Inbound_Datagrams = new global::System.Data.DataColumn("ICMP_Inbound_Datagrams", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnICMP_Inbound_Datagrams);
                this.columnICMP_Outbound_Datagrams = new global::System.Data.DataColumn("ICMP_Outbound_Datagrams", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnICMP_Outbound_Datagrams);
                this.columnIP_Inbound_Datagrams = new global::System.Data.DataColumn("IP_Inbound_Datagrams", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIP_Inbound_Datagrams);
                this.columnIP_Outbound_Datagrams = new global::System.Data.DataColumn("IP_Outbound_Datagrams", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIP_Outbound_Datagrams);
                this.columnTCP_Inbound_Datagrams = new global::System.Data.DataColumn("TCP_Inbound_Datagrams", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTCP_Inbound_Datagrams);
                this.columnTCP_Outbound_Datagrams = new global::System.Data.DataColumn("TCP_Outbound_Datagrams", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTCP_Outbound_Datagrams);
                this.columnUDP_Inbound_Datagrams = new global::System.Data.DataColumn("UDP_Inbound_Datagrams", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUDP_Inbound_Datagrams);
                this.columnUDP_Outbound_Datagrams = new global::System.Data.DataColumn("UDP_Outbound_Datagrams", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUDP_Outbound_Datagrams);
                this.columnMisdirected_IP_Bytes = new global::System.Data.DataColumn("Misdirected_IP_Bytes", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMisdirected_IP_Bytes);
                this.columnNonIP_Bytes = new global::System.Data.DataColumn("NonIP_Bytes", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNonIP_Bytes);
                this.columnARP_Inbound_Bytes = new global::System.Data.DataColumn("ARP_Inbound_Bytes", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnARP_Inbound_Bytes);
                this.columnARP_Outbound_Bytes = new global::System.Data.DataColumn("ARP_Outbound_Bytes", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnARP_Outbound_Bytes);
                this.columnICMP_Inbound_Bytes = new global::System.Data.DataColumn("ICMP_Inbound_Bytes", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnICMP_Inbound_Bytes);
                this.columnICMP_Outbound_Bytes = new global::System.Data.DataColumn("ICMP_Outbound_Bytes", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnICMP_Outbound_Bytes);
                this.columnIP_Inbound_Bytes = new global::System.Data.DataColumn("IP_Inbound_Bytes", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIP_Inbound_Bytes);
                this.columnIP_Outbound_Bytes = new global::System.Data.DataColumn("IP_Outbound_Bytes", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIP_Outbound_Bytes);
                this.columnTCP_Inbound_Bytes = new global::System.Data.DataColumn("TCP_Inbound_Bytes", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTCP_Inbound_Bytes);
                this.columnTCP_Outbound_Bytes = new global::System.Data.DataColumn("TCP_Outbound_Bytes", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTCP_Outbound_Bytes);
                this.columnUDP_Inbound_Bytes = new global::System.Data.DataColumn("UDP_Inbound_Bytes", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUDP_Inbound_Bytes);
                this.columnUDP_Outbound_Bytes = new global::System.Data.DataColumn("UDP_Outbound_Bytes", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUDP_Outbound_Bytes);
                this.columnRefused_Bytes = new global::System.Data.DataColumn("Refused_Bytes", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefused_Bytes);
                this.columnRefused_Datagrams = new global::System.Data.DataColumn("Refused_Datagrams", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefused_Datagrams);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPoll_Time,
                                this.columnIP_Address}, true));
                this.columnPoll_Time.AllowDBNull = false;
                this.columnIP_Address.AllowDBNull = false;
                this.columnIP_Address.MaxLength = 15;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ForeignIP_AllRow NewForeignIP_AllRow() {
                return ((ForeignIP_AllRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ForeignIP_AllRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ForeignIP_AllRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ForeignIP_AllRowChanged != null)) {
                    this.ForeignIP_AllRowChanged(this, new ForeignIP_AllRowChangeEvent(((ForeignIP_AllRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ForeignIP_AllRowChanging != null)) {
                    this.ForeignIP_AllRowChanging(this, new ForeignIP_AllRowChangeEvent(((ForeignIP_AllRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ForeignIP_AllRowDeleted != null)) {
                    this.ForeignIP_AllRowDeleted(this, new ForeignIP_AllRowChangeEvent(((ForeignIP_AllRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ForeignIP_AllRowDeleting != null)) {
                    this.ForeignIP_AllRowDeleting(this, new ForeignIP_AllRowChangeEvent(((ForeignIP_AllRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveForeignIP_AllRow(ForeignIP_AllRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                VseDbDataSet ds = new VseDbDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ForeignIP_AllDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Connection_Stats_by_LocalPortDataTable : global::System.Data.TypedTableBase<Connection_Stats_by_LocalPortRow> {
            
            private global::System.Data.DataColumn columnLocal_Port;
            
            private global::System.Data.DataColumn columnExpr1;
            
            private global::System.Data.DataColumn columnExpr2;
            
            private global::System.Data.DataColumn columnExpr3;
            
            private global::System.Data.DataColumn columnExpr4;
            
            private global::System.Data.DataColumn columnExpr5;
            
            private global::System.Data.DataColumn columnExpr6;
            
            private global::System.Data.DataColumn columnExpr7;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Connection_Stats_by_LocalPortDataTable() {
                this.TableName = "Connection_Stats_by_LocalPort";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Connection_Stats_by_LocalPortDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Connection_Stats_by_LocalPortDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Local_PortColumn {
                get {
                    return this.columnLocal_Port;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Expr1Column {
                get {
                    return this.columnExpr1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Expr2Column {
                get {
                    return this.columnExpr2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Expr3Column {
                get {
                    return this.columnExpr3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Expr4Column {
                get {
                    return this.columnExpr4;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Expr5Column {
                get {
                    return this.columnExpr5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Expr6Column {
                get {
                    return this.columnExpr6;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Expr7Column {
                get {
                    return this.columnExpr7;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Connection_Stats_by_LocalPortRow this[int index] {
                get {
                    return ((Connection_Stats_by_LocalPortRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Connection_Stats_by_LocalPortRowChangeEventHandler Connection_Stats_by_LocalPortRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Connection_Stats_by_LocalPortRowChangeEventHandler Connection_Stats_by_LocalPortRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Connection_Stats_by_LocalPortRowChangeEventHandler Connection_Stats_by_LocalPortRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Connection_Stats_by_LocalPortRowChangeEventHandler Connection_Stats_by_LocalPortRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddConnection_Stats_by_LocalPortRow(Connection_Stats_by_LocalPortRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Connection_Stats_by_LocalPortRow AddConnection_Stats_by_LocalPortRow(double Local_Port, double Expr1, double Expr2, double Expr3, double Expr4, double Expr5, double Expr6, double Expr7) {
                Connection_Stats_by_LocalPortRow rowConnection_Stats_by_LocalPortRow = ((Connection_Stats_by_LocalPortRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Local_Port,
                        Expr1,
                        Expr2,
                        Expr3,
                        Expr4,
                        Expr5,
                        Expr6,
                        Expr7};
                rowConnection_Stats_by_LocalPortRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowConnection_Stats_by_LocalPortRow);
                return rowConnection_Stats_by_LocalPortRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Connection_Stats_by_LocalPortRow FindByLocal_Port(double Local_Port) {
                return ((Connection_Stats_by_LocalPortRow)(this.Rows.Find(new object[] {
                            Local_Port})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Connection_Stats_by_LocalPortDataTable cln = ((Connection_Stats_by_LocalPortDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Connection_Stats_by_LocalPortDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnLocal_Port = base.Columns["Local_Port"];
                this.columnExpr1 = base.Columns["Expr1"];
                this.columnExpr2 = base.Columns["Expr2"];
                this.columnExpr3 = base.Columns["Expr3"];
                this.columnExpr4 = base.Columns["Expr4"];
                this.columnExpr5 = base.Columns["Expr5"];
                this.columnExpr6 = base.Columns["Expr6"];
                this.columnExpr7 = base.Columns["Expr7"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnLocal_Port = new global::System.Data.DataColumn("Local_Port", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocal_Port);
                this.columnExpr1 = new global::System.Data.DataColumn("Expr1", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpr1);
                this.columnExpr2 = new global::System.Data.DataColumn("Expr2", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpr2);
                this.columnExpr3 = new global::System.Data.DataColumn("Expr3", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpr3);
                this.columnExpr4 = new global::System.Data.DataColumn("Expr4", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpr4);
                this.columnExpr5 = new global::System.Data.DataColumn("Expr5", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpr5);
                this.columnExpr6 = new global::System.Data.DataColumn("Expr6", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpr6);
                this.columnExpr7 = new global::System.Data.DataColumn("Expr7", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpr7);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnLocal_Port}, true));
                this.columnLocal_Port.AllowDBNull = false;
                this.columnLocal_Port.Unique = true;
                this.columnExpr1.ReadOnly = true;
                this.columnExpr2.ReadOnly = true;
                this.columnExpr3.ReadOnly = true;
                this.columnExpr4.ReadOnly = true;
                this.columnExpr5.ReadOnly = true;
                this.columnExpr6.ReadOnly = true;
                this.columnExpr7.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Connection_Stats_by_LocalPortRow NewConnection_Stats_by_LocalPortRow() {
                return ((Connection_Stats_by_LocalPortRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Connection_Stats_by_LocalPortRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Connection_Stats_by_LocalPortRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Connection_Stats_by_LocalPortRowChanged != null)) {
                    this.Connection_Stats_by_LocalPortRowChanged(this, new Connection_Stats_by_LocalPortRowChangeEvent(((Connection_Stats_by_LocalPortRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Connection_Stats_by_LocalPortRowChanging != null)) {
                    this.Connection_Stats_by_LocalPortRowChanging(this, new Connection_Stats_by_LocalPortRowChangeEvent(((Connection_Stats_by_LocalPortRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Connection_Stats_by_LocalPortRowDeleted != null)) {
                    this.Connection_Stats_by_LocalPortRowDeleted(this, new Connection_Stats_by_LocalPortRowChangeEvent(((Connection_Stats_by_LocalPortRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Connection_Stats_by_LocalPortRowDeleting != null)) {
                    this.Connection_Stats_by_LocalPortRowDeleting(this, new Connection_Stats_by_LocalPortRowChangeEvent(((Connection_Stats_by_LocalPortRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveConnection_Stats_by_LocalPortRow(Connection_Stats_by_LocalPortRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                VseDbDataSet ds = new VseDbDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Connection_Stats_by_LocalPortDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Connection_BSDCRow : global::System.Data.DataRow {
            
            private Connection_BSDCDataTable tableConnection_BSDC;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Connection_BSDCRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableConnection_BSDC = ((Connection_BSDCDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Poll_Time {
                get {
                    return ((global::System.DateTime)(this[this.tableConnection_BSDC.Poll_TimeColumn]));
                }
                set {
                    this[this.tableConnection_BSDC.Poll_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Store_Clock {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableConnection_BSDC.Store_ClockColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Store_Clock\' in table \'Connection_BSDC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_BSDC.Store_ClockColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CCBLOK_ID {
                get {
                    try {
                        return ((double)(this[this.tableConnection_BSDC.CCBLOK_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CCBLOK_ID\' in table \'Connection_BSDC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_BSDC.CCBLOK_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Sock_Descriptor {
                get {
                    try {
                        return ((string)(this[this.tableConnection_BSDC.Sock_DescriptorColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sock_Descriptor\' in table \'Connection_BSDC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_BSDC.Sock_DescriptorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Queue_Depth {
                get {
                    try {
                        return ((double)(this[this.tableConnection_BSDC.Queue_DepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Queue_Depth\' in table \'Connection_BSDC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_BSDC.Queue_DepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Foreign_IP {
                get {
                    try {
                        return ((string)(this[this.tableConnection_BSDC.Foreign_IPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Foreign_IP\' in table \'Connection_BSDC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_BSDC.Foreign_IPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Local_IP {
                get {
                    try {
                        return ((string)(this[this.tableConnection_BSDC.Local_IPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Local_IP\' in table \'Connection_BSDC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_BSDC.Local_IPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Foreign_Port {
                get {
                    try {
                        return ((double)(this[this.tableConnection_BSDC.Foreign_PortColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Foreign_Port\' in table \'Connection_BSDC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_BSDC.Foreign_PortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Local_Port {
                get {
                    try {
                        return ((double)(this[this.tableConnection_BSDC.Local_PortColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Local_Port\' in table \'Connection_BSDC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_BSDC.Local_PortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Base_Sock_Addr {
                get {
                    try {
                        return ((string)(this[this.tableConnection_BSDC.Base_Sock_AddrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Base_Sock_Addr\' in table \'Connection_BSDC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_BSDC.Base_Sock_AddrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CICS_Trans_ID {
                get {
                    try {
                        return ((string)(this[this.tableConnection_BSDC.CICS_Trans_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CICS_Trans_ID\' in table \'Connection_BSDC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_BSDC.CICS_Trans_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CICS_Task {
                get {
                    try {
                        return ((double)(this[this.tableConnection_BSDC.CICS_TaskColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CICS_Task\' in table \'Connection_BSDC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_BSDC.CICS_TaskColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Sock_Number {
                get {
                    return ((double)(this[this.tableConnection_BSDC.Sock_NumberColumn]));
                }
                set {
                    this[this.tableConnection_BSDC.Sock_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Sock_Addr {
                get {
                    return ((string)(this[this.tableConnection_BSDC.Sock_AddrColumn]));
                }
                set {
                    this[this.tableConnection_BSDC.Sock_AddrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Flag_1 {
                get {
                    try {
                        return ((byte)(this[this.tableConnection_BSDC.Flag_1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Flag_1\' in table \'Connection_BSDC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_BSDC.Flag_1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Sock_Options {
                get {
                    try {
                        return ((byte)(this[this.tableConnection_BSDC.Sock_OptionsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sock_Options\' in table \'Connection_BSDC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_BSDC.Sock_OptionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Flag_2 {
                get {
                    try {
                        return ((byte)(this[this.tableConnection_BSDC.Flag_2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Flag_2\' in table \'Connection_BSDC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_BSDC.Flag_2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte Type {
                get {
                    try {
                        return ((byte)(this[this.tableConnection_BSDC.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Type\' in table \'Connection_BSDC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_BSDC.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PID {
                get {
                    try {
                        return ((string)(this[this.tableConnection_BSDC.PIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PID\' in table \'Connection_BSDC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_BSDC.PIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStore_ClockNull() {
                return this.IsNull(this.tableConnection_BSDC.Store_ClockColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStore_ClockNull() {
                this[this.tableConnection_BSDC.Store_ClockColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCCBLOK_IDNull() {
                return this.IsNull(this.tableConnection_BSDC.CCBLOK_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCCBLOK_IDNull() {
                this[this.tableConnection_BSDC.CCBLOK_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSock_DescriptorNull() {
                return this.IsNull(this.tableConnection_BSDC.Sock_DescriptorColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSock_DescriptorNull() {
                this[this.tableConnection_BSDC.Sock_DescriptorColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQueue_DepthNull() {
                return this.IsNull(this.tableConnection_BSDC.Queue_DepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQueue_DepthNull() {
                this[this.tableConnection_BSDC.Queue_DepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsForeign_IPNull() {
                return this.IsNull(this.tableConnection_BSDC.Foreign_IPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetForeign_IPNull() {
                this[this.tableConnection_BSDC.Foreign_IPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLocal_IPNull() {
                return this.IsNull(this.tableConnection_BSDC.Local_IPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLocal_IPNull() {
                this[this.tableConnection_BSDC.Local_IPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsForeign_PortNull() {
                return this.IsNull(this.tableConnection_BSDC.Foreign_PortColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetForeign_PortNull() {
                this[this.tableConnection_BSDC.Foreign_PortColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLocal_PortNull() {
                return this.IsNull(this.tableConnection_BSDC.Local_PortColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLocal_PortNull() {
                this[this.tableConnection_BSDC.Local_PortColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBase_Sock_AddrNull() {
                return this.IsNull(this.tableConnection_BSDC.Base_Sock_AddrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBase_Sock_AddrNull() {
                this[this.tableConnection_BSDC.Base_Sock_AddrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCICS_Trans_IDNull() {
                return this.IsNull(this.tableConnection_BSDC.CICS_Trans_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCICS_Trans_IDNull() {
                this[this.tableConnection_BSDC.CICS_Trans_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCICS_TaskNull() {
                return this.IsNull(this.tableConnection_BSDC.CICS_TaskColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCICS_TaskNull() {
                this[this.tableConnection_BSDC.CICS_TaskColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFlag_1Null() {
                return this.IsNull(this.tableConnection_BSDC.Flag_1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFlag_1Null() {
                this[this.tableConnection_BSDC.Flag_1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSock_OptionsNull() {
                return this.IsNull(this.tableConnection_BSDC.Sock_OptionsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSock_OptionsNull() {
                this[this.tableConnection_BSDC.Sock_OptionsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFlag_2Null() {
                return this.IsNull(this.tableConnection_BSDC.Flag_2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFlag_2Null() {
                this[this.tableConnection_BSDC.Flag_2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypeNull() {
                return this.IsNull(this.tableConnection_BSDC.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypeNull() {
                this[this.tableConnection_BSDC.TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPIDNull() {
                return this.IsNull(this.tableConnection_BSDC.PIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPIDNull() {
                this[this.tableConnection_BSDC.PIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Connection_RecordsRow : global::System.Data.DataRow {
            
            private Connection_RecordsDataTable tableConnection_Records;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Connection_RecordsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableConnection_Records = ((Connection_RecordsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Record_ID {
                get {
                    return ((int)(this[this.tableConnection_Records.Record_IDColumn]));
                }
                set {
                    this[this.tableConnection_Records.Record_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Conn_PID {
                get {
                    try {
                        return ((string)(this[this.tableConnection_Records.Conn_PIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Conn_PID\' in table \'Connection_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Records.Conn_PIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Local_Port {
                get {
                    return ((double)(this[this.tableConnection_Records.Local_PortColumn]));
                }
                set {
                    this[this.tableConnection_Records.Local_PortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Foreign_Port {
                get {
                    return ((double)(this[this.tableConnection_Records.Foreign_PortColumn]));
                }
                set {
                    this[this.tableConnection_Records.Foreign_PortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Foreign_IP {
                get {
                    return ((string)(this[this.tableConnection_Records.Foreign_IPColumn]));
                }
                set {
                    this[this.tableConnection_Records.Foreign_IPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Conn_Start_Time {
                get {
                    return ((global::System.DateTime)(this[this.tableConnection_Records.Conn_Start_TimeColumn]));
                }
                set {
                    this[this.tableConnection_Records.Conn_Start_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Conn_End_Time {
                get {
                    return ((global::System.DateTime)(this[this.tableConnection_Records.Conn_End_TimeColumn]));
                }
                set {
                    this[this.tableConnection_Records.Conn_End_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string INT_EXT {
                get {
                    try {
                        return ((string)(this[this.tableConnection_Records.INT_EXTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INT_EXT\' in table \'Connection_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Records.INT_EXTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Conn_State {
                get {
                    try {
                        return ((string)(this[this.tableConnection_Records.Conn_StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Conn_State\' in table \'Connection_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Records.Conn_StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Conn_Protocol {
                get {
                    try {
                        return ((string)(this[this.tableConnection_Records.Conn_ProtocolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Conn_Protocol\' in table \'Connection_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Records.Conn_ProtocolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Highest_Depth {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Records.Highest_DepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Highest_Depth\' in table \'Connection_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Records.Highest_DepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Max_Send_Window {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Records.Max_Send_WindowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Max_Send_Window\' in table \'Connection_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Records.Max_Send_WindowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Max_Recv_Window {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Records.Max_Recv_WindowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Max_Recv_Window\' in table \'Connection_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Records.Max_Recv_WindowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Recv_Window_Closed {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Records.Recv_Window_ClosedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Recv_Window_Closed\' in table \'Connection_Records\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableConnection_Records.Recv_Window_ClosedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SWS_Count {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Records.SWS_CountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SWS_Count\' in table \'Connection_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Records.SWS_CountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Inbound_Data {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Records.Inbound_DataColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Inbound_Data\' in table \'Connection_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Records.Inbound_DataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Inbound_Bytes {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Records.Inbound_BytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Inbound_Bytes\' in table \'Connection_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Records.Inbound_BytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Inbound_Data_Dup {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Records.Inbound_Data_DupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Inbound_Data_Dup\' in table \'Connection_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Records.Inbound_Data_DupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Inbound_Bytes_Dup {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Records.Inbound_Bytes_DupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Inbound_Bytes_Dup\' in table \'Connection_Records\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableConnection_Records.Inbound_Bytes_DupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Inbound_Eff {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Records.Inbound_EffColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Inbound_Eff\' in table \'Connection_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Records.Inbound_EffColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Outbound_Data {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Records.Outbound_DataColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Outbound_Data\' in table \'Connection_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Records.Outbound_DataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Outbound_Bytes {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Records.Outbound_BytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Outbound_Bytes\' in table \'Connection_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Records.Outbound_BytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Outbound_Data_Retr {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Records.Outbound_Data_RetrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Outbound_Data_Retr\' in table \'Connection_Records\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableConnection_Records.Outbound_Data_RetrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Outbound_Bytes_Retr {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Records.Outbound_Bytes_RetrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Outbound_Bytes_Retr\' in table \'Connection_Records\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableConnection_Records.Outbound_Bytes_RetrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Outbound_Eff {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Records.Outbound_EffColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Outbound_Eff\' in table \'Connection_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Records.Outbound_EffColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Recvs_Issued {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Records.Recvs_IssuedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Recvs_Issued\' in table \'Connection_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Records.Recvs_IssuedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Sends_Issued {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Records.Sends_IssuedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sends_Issued\' in table \'Connection_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Records.Sends_IssuedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Retransmits {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Records.RetransmitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Retransmits\' in table \'Connection_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Records.RetransmitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double In_Retr_Mode {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Records.In_Retr_ModeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'In_Retr_Mode\' in table \'Connection_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Records.In_Retr_ModeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConn_PIDNull() {
                return this.IsNull(this.tableConnection_Records.Conn_PIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConn_PIDNull() {
                this[this.tableConnection_Records.Conn_PIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINT_EXTNull() {
                return this.IsNull(this.tableConnection_Records.INT_EXTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINT_EXTNull() {
                this[this.tableConnection_Records.INT_EXTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConn_StateNull() {
                return this.IsNull(this.tableConnection_Records.Conn_StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConn_StateNull() {
                this[this.tableConnection_Records.Conn_StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConn_ProtocolNull() {
                return this.IsNull(this.tableConnection_Records.Conn_ProtocolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConn_ProtocolNull() {
                this[this.tableConnection_Records.Conn_ProtocolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHighest_DepthNull() {
                return this.IsNull(this.tableConnection_Records.Highest_DepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHighest_DepthNull() {
                this[this.tableConnection_Records.Highest_DepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMax_Send_WindowNull() {
                return this.IsNull(this.tableConnection_Records.Max_Send_WindowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMax_Send_WindowNull() {
                this[this.tableConnection_Records.Max_Send_WindowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMax_Recv_WindowNull() {
                return this.IsNull(this.tableConnection_Records.Max_Recv_WindowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMax_Recv_WindowNull() {
                this[this.tableConnection_Records.Max_Recv_WindowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRecv_Window_ClosedNull() {
                return this.IsNull(this.tableConnection_Records.Recv_Window_ClosedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRecv_Window_ClosedNull() {
                this[this.tableConnection_Records.Recv_Window_ClosedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSWS_CountNull() {
                return this.IsNull(this.tableConnection_Records.SWS_CountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSWS_CountNull() {
                this[this.tableConnection_Records.SWS_CountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInbound_DataNull() {
                return this.IsNull(this.tableConnection_Records.Inbound_DataColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInbound_DataNull() {
                this[this.tableConnection_Records.Inbound_DataColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInbound_BytesNull() {
                return this.IsNull(this.tableConnection_Records.Inbound_BytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInbound_BytesNull() {
                this[this.tableConnection_Records.Inbound_BytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInbound_Data_DupNull() {
                return this.IsNull(this.tableConnection_Records.Inbound_Data_DupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInbound_Data_DupNull() {
                this[this.tableConnection_Records.Inbound_Data_DupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInbound_Bytes_DupNull() {
                return this.IsNull(this.tableConnection_Records.Inbound_Bytes_DupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInbound_Bytes_DupNull() {
                this[this.tableConnection_Records.Inbound_Bytes_DupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInbound_EffNull() {
                return this.IsNull(this.tableConnection_Records.Inbound_EffColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInbound_EffNull() {
                this[this.tableConnection_Records.Inbound_EffColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutbound_DataNull() {
                return this.IsNull(this.tableConnection_Records.Outbound_DataColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOutbound_DataNull() {
                this[this.tableConnection_Records.Outbound_DataColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutbound_BytesNull() {
                return this.IsNull(this.tableConnection_Records.Outbound_BytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOutbound_BytesNull() {
                this[this.tableConnection_Records.Outbound_BytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutbound_Data_RetrNull() {
                return this.IsNull(this.tableConnection_Records.Outbound_Data_RetrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOutbound_Data_RetrNull() {
                this[this.tableConnection_Records.Outbound_Data_RetrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutbound_Bytes_RetrNull() {
                return this.IsNull(this.tableConnection_Records.Outbound_Bytes_RetrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOutbound_Bytes_RetrNull() {
                this[this.tableConnection_Records.Outbound_Bytes_RetrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutbound_EffNull() {
                return this.IsNull(this.tableConnection_Records.Outbound_EffColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOutbound_EffNull() {
                this[this.tableConnection_Records.Outbound_EffColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRecvs_IssuedNull() {
                return this.IsNull(this.tableConnection_Records.Recvs_IssuedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRecvs_IssuedNull() {
                this[this.tableConnection_Records.Recvs_IssuedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSends_IssuedNull() {
                return this.IsNull(this.tableConnection_Records.Sends_IssuedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSends_IssuedNull() {
                this[this.tableConnection_Records.Sends_IssuedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRetransmitsNull() {
                return this.IsNull(this.tableConnection_Records.RetransmitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRetransmitsNull() {
                this[this.tableConnection_Records.RetransmitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIn_Retr_ModeNull() {
                return this.IsNull(this.tableConnection_Records.In_Retr_ModeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIn_Retr_ModeNull() {
                this[this.tableConnection_Records.In_Retr_ModeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Connection_StatsRow : global::System.Data.DataRow {
            
            private Connection_StatsDataTable tableConnection_Stats;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Connection_StatsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableConnection_Stats = ((Connection_StatsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Poll_Time {
                get {
                    return ((global::System.DateTime)(this[this.tableConnection_Stats.Poll_TimeColumn]));
                }
                set {
                    this[this.tableConnection_Stats.Poll_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Conn_PID {
                get {
                    try {
                        return ((string)(this[this.tableConnection_Stats.Conn_PIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Conn_PID\' in table \'Connection_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Stats.Conn_PIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Local_Port {
                get {
                    return ((double)(this[this.tableConnection_Stats.Local_PortColumn]));
                }
                set {
                    this[this.tableConnection_Stats.Local_PortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Foreign_Port {
                get {
                    return ((double)(this[this.tableConnection_Stats.Foreign_PortColumn]));
                }
                set {
                    this[this.tableConnection_Stats.Foreign_PortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Foreign_IP {
                get {
                    return ((string)(this[this.tableConnection_Stats.Foreign_IPColumn]));
                }
                set {
                    this[this.tableConnection_Stats.Foreign_IPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CCIDENT {
                get {
                    return ((double)(this[this.tableConnection_Stats.CCIDENTColumn]));
                }
                set {
                    this[this.tableConnection_Stats.CCIDENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Conn_Start_Time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableConnection_Stats.Conn_Start_TimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Conn_Start_Time\' in table \'Connection_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Stats.Conn_Start_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string INT_EXT {
                get {
                    try {
                        return ((string)(this[this.tableConnection_Stats.INT_EXTColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'INT_EXT\' in table \'Connection_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Stats.INT_EXTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Conn_State {
                get {
                    try {
                        return ((string)(this[this.tableConnection_Stats.Conn_StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Conn_State\' in table \'Connection_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Stats.Conn_StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Conn_Protocol {
                get {
                    try {
                        return ((string)(this[this.tableConnection_Stats.Conn_ProtocolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Conn_Protocol\' in table \'Connection_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Stats.Conn_ProtocolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Highest_Depth {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Stats.Highest_DepthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Highest_Depth\' in table \'Connection_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Stats.Highest_DepthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Max_Send_Window {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Stats.Max_Send_WindowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Max_Send_Window\' in table \'Connection_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Stats.Max_Send_WindowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Max_Recv_Window {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Stats.Max_Recv_WindowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Max_Recv_Window\' in table \'Connection_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Stats.Max_Recv_WindowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Recv_Window_Closed {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Stats.Recv_Window_ClosedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Recv_Window_Closed\' in table \'Connection_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Stats.Recv_Window_ClosedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SWS_Count {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Stats.SWS_CountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SWS_Count\' in table \'Connection_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Stats.SWS_CountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Inbound_Data {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Stats.Inbound_DataColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Inbound_Data\' in table \'Connection_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Stats.Inbound_DataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Inbound_Bytes {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Stats.Inbound_BytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Inbound_Bytes\' in table \'Connection_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Stats.Inbound_BytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Inbound_Data_Dup {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Stats.Inbound_Data_DupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Inbound_Data_Dup\' in table \'Connection_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Stats.Inbound_Data_DupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Inbound_Bytes_Dup {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Stats.Inbound_Bytes_DupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Inbound_Bytes_Dup\' in table \'Connection_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Stats.Inbound_Bytes_DupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Inbound_Eff {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Stats.Inbound_EffColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Inbound_Eff\' in table \'Connection_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Stats.Inbound_EffColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Outbound_Data {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Stats.Outbound_DataColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Outbound_Data\' in table \'Connection_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Stats.Outbound_DataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Outbound_Bytes {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Stats.Outbound_BytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Outbound_Bytes\' in table \'Connection_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Stats.Outbound_BytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Outbound_Data_Retr {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Stats.Outbound_Data_RetrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Outbound_Data_Retr\' in table \'Connection_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Stats.Outbound_Data_RetrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Outbound_Bytes_Retr {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Stats.Outbound_Bytes_RetrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Outbound_Bytes_Retr\' in table \'Connection_Stats\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableConnection_Stats.Outbound_Bytes_RetrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Outbound_Eff {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Stats.Outbound_EffColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Outbound_Eff\' in table \'Connection_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Stats.Outbound_EffColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Recvs_Issued {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Stats.Recvs_IssuedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Recvs_Issued\' in table \'Connection_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Stats.Recvs_IssuedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Sends_Issued {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Stats.Sends_IssuedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sends_Issued\' in table \'Connection_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Stats.Sends_IssuedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Retransmits {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Stats.RetransmitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Retransmits\' in table \'Connection_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Stats.RetransmitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double In_Retr_Mode {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Stats.In_Retr_ModeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'In_Retr_Mode\' in table \'Connection_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Stats.In_Retr_ModeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Conn_Phase {
                get {
                    try {
                        return ((string)(this[this.tableConnection_Stats.Conn_PhaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Conn_Phase\' in table \'Connection_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Stats.Conn_PhaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConn_PIDNull() {
                return this.IsNull(this.tableConnection_Stats.Conn_PIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConn_PIDNull() {
                this[this.tableConnection_Stats.Conn_PIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConn_Start_TimeNull() {
                return this.IsNull(this.tableConnection_Stats.Conn_Start_TimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConn_Start_TimeNull() {
                this[this.tableConnection_Stats.Conn_Start_TimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsINT_EXTNull() {
                return this.IsNull(this.tableConnection_Stats.INT_EXTColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetINT_EXTNull() {
                this[this.tableConnection_Stats.INT_EXTColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConn_StateNull() {
                return this.IsNull(this.tableConnection_Stats.Conn_StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConn_StateNull() {
                this[this.tableConnection_Stats.Conn_StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConn_ProtocolNull() {
                return this.IsNull(this.tableConnection_Stats.Conn_ProtocolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConn_ProtocolNull() {
                this[this.tableConnection_Stats.Conn_ProtocolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHighest_DepthNull() {
                return this.IsNull(this.tableConnection_Stats.Highest_DepthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHighest_DepthNull() {
                this[this.tableConnection_Stats.Highest_DepthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMax_Send_WindowNull() {
                return this.IsNull(this.tableConnection_Stats.Max_Send_WindowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMax_Send_WindowNull() {
                this[this.tableConnection_Stats.Max_Send_WindowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMax_Recv_WindowNull() {
                return this.IsNull(this.tableConnection_Stats.Max_Recv_WindowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMax_Recv_WindowNull() {
                this[this.tableConnection_Stats.Max_Recv_WindowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRecv_Window_ClosedNull() {
                return this.IsNull(this.tableConnection_Stats.Recv_Window_ClosedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRecv_Window_ClosedNull() {
                this[this.tableConnection_Stats.Recv_Window_ClosedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSWS_CountNull() {
                return this.IsNull(this.tableConnection_Stats.SWS_CountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSWS_CountNull() {
                this[this.tableConnection_Stats.SWS_CountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInbound_DataNull() {
                return this.IsNull(this.tableConnection_Stats.Inbound_DataColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInbound_DataNull() {
                this[this.tableConnection_Stats.Inbound_DataColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInbound_BytesNull() {
                return this.IsNull(this.tableConnection_Stats.Inbound_BytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInbound_BytesNull() {
                this[this.tableConnection_Stats.Inbound_BytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInbound_Data_DupNull() {
                return this.IsNull(this.tableConnection_Stats.Inbound_Data_DupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInbound_Data_DupNull() {
                this[this.tableConnection_Stats.Inbound_Data_DupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInbound_Bytes_DupNull() {
                return this.IsNull(this.tableConnection_Stats.Inbound_Bytes_DupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInbound_Bytes_DupNull() {
                this[this.tableConnection_Stats.Inbound_Bytes_DupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInbound_EffNull() {
                return this.IsNull(this.tableConnection_Stats.Inbound_EffColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInbound_EffNull() {
                this[this.tableConnection_Stats.Inbound_EffColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutbound_DataNull() {
                return this.IsNull(this.tableConnection_Stats.Outbound_DataColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOutbound_DataNull() {
                this[this.tableConnection_Stats.Outbound_DataColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutbound_BytesNull() {
                return this.IsNull(this.tableConnection_Stats.Outbound_BytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOutbound_BytesNull() {
                this[this.tableConnection_Stats.Outbound_BytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutbound_Data_RetrNull() {
                return this.IsNull(this.tableConnection_Stats.Outbound_Data_RetrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOutbound_Data_RetrNull() {
                this[this.tableConnection_Stats.Outbound_Data_RetrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutbound_Bytes_RetrNull() {
                return this.IsNull(this.tableConnection_Stats.Outbound_Bytes_RetrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOutbound_Bytes_RetrNull() {
                this[this.tableConnection_Stats.Outbound_Bytes_RetrColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOutbound_EffNull() {
                return this.IsNull(this.tableConnection_Stats.Outbound_EffColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOutbound_EffNull() {
                this[this.tableConnection_Stats.Outbound_EffColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRecvs_IssuedNull() {
                return this.IsNull(this.tableConnection_Stats.Recvs_IssuedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRecvs_IssuedNull() {
                this[this.tableConnection_Stats.Recvs_IssuedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSends_IssuedNull() {
                return this.IsNull(this.tableConnection_Stats.Sends_IssuedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSends_IssuedNull() {
                this[this.tableConnection_Stats.Sends_IssuedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRetransmitsNull() {
                return this.IsNull(this.tableConnection_Stats.RetransmitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRetransmitsNull() {
                this[this.tableConnection_Stats.RetransmitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIn_Retr_ModeNull() {
                return this.IsNull(this.tableConnection_Stats.In_Retr_ModeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIn_Retr_ModeNull() {
                this[this.tableConnection_Stats.In_Retr_ModeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConn_PhaseNull() {
                return this.IsNull(this.tableConnection_Stats.Conn_PhaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConn_PhaseNull() {
                this[this.tableConnection_Stats.Conn_PhaseColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CPU_StatsRow : global::System.Data.DataRow {
            
            private CPU_StatsDataTable tableCPU_Stats;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CPU_StatsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCPU_Stats = ((CPU_StatsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Poll_Time {
                get {
                    return ((global::System.DateTime)(this[this.tableCPU_Stats.Poll_TimeColumn]));
                }
                set {
                    this[this.tableCPU_Stats.Poll_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CPU_ID {
                get {
                    return ((double)(this[this.tableCPU_Stats.CPU_IDColumn]));
                }
                set {
                    this[this.tableCPU_Stats.CPU_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CPU_State {
                get {
                    try {
                        return ((string)(this[this.tableCPU_Stats.CPU_StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CPU_State\' in table \'CPU_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCPU_Stats.CPU_StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Dispatch_Cycles {
                get {
                    try {
                        return ((double)(this[this.tableCPU_Stats.Dispatch_CyclesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dispatch_Cycles\' in table \'CPU_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCPU_Stats.Dispatch_CyclesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double NonVSE_sec {
                get {
                    try {
                        return ((double)(this[this.tableCPU_Stats.NonVSE_secColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NonVSE_sec\' in table \'CPU_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCPU_Stats.NonVSE_secColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Spin_sec {
                get {
                    try {
                        return ((double)(this[this.tableCPU_Stats.Spin_secColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Spin_sec\' in table \'CPU_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCPU_Stats.Spin_secColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Waiting_sec {
                get {
                    try {
                        return ((double)(this[this.tableCPU_Stats.Waiting_secColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Waiting_sec\' in table \'CPU_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCPU_Stats.Waiting_secColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Busy_P_sec {
                get {
                    try {
                        return ((double)(this[this.tableCPU_Stats.Busy_P_secColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Busy_P_sec\' in table \'CPU_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCPU_Stats.Busy_P_secColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Busy_NonP_sec {
                get {
                    try {
                        return ((double)(this[this.tableCPU_Stats.Busy_NonP_secColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Busy_NonP_sec\' in table \'CPU_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCPU_Stats.Busy_NonP_secColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCPU_StateNull() {
                return this.IsNull(this.tableCPU_Stats.CPU_StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCPU_StateNull() {
                this[this.tableCPU_Stats.CPU_StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDispatch_CyclesNull() {
                return this.IsNull(this.tableCPU_Stats.Dispatch_CyclesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDispatch_CyclesNull() {
                this[this.tableCPU_Stats.Dispatch_CyclesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNonVSE_secNull() {
                return this.IsNull(this.tableCPU_Stats.NonVSE_secColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNonVSE_secNull() {
                this[this.tableCPU_Stats.NonVSE_secColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSpin_secNull() {
                return this.IsNull(this.tableCPU_Stats.Spin_secColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSpin_secNull() {
                this[this.tableCPU_Stats.Spin_secColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsWaiting_secNull() {
                return this.IsNull(this.tableCPU_Stats.Waiting_secColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetWaiting_secNull() {
                this[this.tableCPU_Stats.Waiting_secColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBusy_P_secNull() {
                return this.IsNull(this.tableCPU_Stats.Busy_P_secColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBusy_P_secNull() {
                this[this.tableCPU_Stats.Busy_P_secColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBusy_NonP_secNull() {
                return this.IsNull(this.tableCPU_Stats.Busy_NonP_secColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBusy_NonP_secNull() {
                this[this.tableCPU_Stats.Busy_NonP_secColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ForeignIP_StatsRow : global::System.Data.DataRow {
            
            private ForeignIP_StatsDataTable tableForeignIP_Stats;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ForeignIP_StatsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableForeignIP_Stats = ((ForeignIP_StatsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Poll_Time {
                get {
                    return ((global::System.DateTime)(this[this.tableForeignIP_Stats.Poll_TimeColumn]));
                }
                set {
                    this[this.tableForeignIP_Stats.Poll_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IP_Address {
                get {
                    return ((string)(this[this.tableForeignIP_Stats.IP_AddressColumn]));
                }
                set {
                    this[this.tableForeignIP_Stats.IP_AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Refuse_Flag {
                get {
                    try {
                        return ((bool)(this[this.tableForeignIP_Stats.Refuse_FlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Refuse_Flag\' in table \'ForeignIP_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_Stats.Refuse_FlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Misdirected_IP_Datagrams {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_Stats.Misdirected_IP_DatagramsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Misdirected_IP_Datagrams\' in table \'ForeignIP_Stats\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_Stats.Misdirected_IP_DatagramsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double NonIP_Datagrams {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_Stats.NonIP_DatagramsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NonIP_Datagrams\' in table \'ForeignIP_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_Stats.NonIP_DatagramsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ARP_Inbound_Datagrams {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_Stats.ARP_Inbound_DatagramsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ARP_Inbound_Datagrams\' in table \'ForeignIP_Stats\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableForeignIP_Stats.ARP_Inbound_DatagramsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ARP_Outbound_Datagrams {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_Stats.ARP_Outbound_DatagramsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ARP_Outbound_Datagrams\' in table \'ForeignIP_Stats\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_Stats.ARP_Outbound_DatagramsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ICMP_Inbound_Datagrams {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_Stats.ICMP_Inbound_DatagramsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ICMP_Inbound_Datagrams\' in table \'ForeignIP_Stats\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_Stats.ICMP_Inbound_DatagramsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ICMP_Outbound_Datagrams {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_Stats.ICMP_Outbound_DatagramsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ICMP_Outbound_Datagrams\' in table \'ForeignIP_Stats\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_Stats.ICMP_Outbound_DatagramsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double IP_Inbound_Datagrams {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_Stats.IP_Inbound_DatagramsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IP_Inbound_Datagrams\' in table \'ForeignIP_Stats\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableForeignIP_Stats.IP_Inbound_DatagramsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double IP_Outbound_Datagrams {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_Stats.IP_Outbound_DatagramsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IP_Outbound_Datagrams\' in table \'ForeignIP_Stats\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableForeignIP_Stats.IP_Outbound_DatagramsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TCP_Inbound_Datagrams {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_Stats.TCP_Inbound_DatagramsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TCP_Inbound_Datagrams\' in table \'ForeignIP_Stats\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableForeignIP_Stats.TCP_Inbound_DatagramsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TCP_Outbound_Datagrams {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_Stats.TCP_Outbound_DatagramsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TCP_Outbound_Datagrams\' in table \'ForeignIP_Stats\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_Stats.TCP_Outbound_DatagramsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double UDP_Inbound_Datagrams {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_Stats.UDP_Inbound_DatagramsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UDP_Inbound_Datagrams\' in table \'ForeignIP_Stats\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableForeignIP_Stats.UDP_Inbound_DatagramsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double UDP_Outbound_Datagrams {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_Stats.UDP_Outbound_DatagramsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UDP_Outbound_Datagrams\' in table \'ForeignIP_Stats\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_Stats.UDP_Outbound_DatagramsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Misdirected_IP_Bytes {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_Stats.Misdirected_IP_BytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Misdirected_IP_Bytes\' in table \'ForeignIP_Stats\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableForeignIP_Stats.Misdirected_IP_BytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double NonIP_Bytes {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_Stats.NonIP_BytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NonIP_Bytes\' in table \'ForeignIP_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_Stats.NonIP_BytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ARP_Inbound_Bytes {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_Stats.ARP_Inbound_BytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ARP_Inbound_Bytes\' in table \'ForeignIP_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_Stats.ARP_Inbound_BytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ARP_Outbound_Bytes {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_Stats.ARP_Outbound_BytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ARP_Outbound_Bytes\' in table \'ForeignIP_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_Stats.ARP_Outbound_BytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ICMP_Inbound_Bytes {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_Stats.ICMP_Inbound_BytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ICMP_Inbound_Bytes\' in table \'ForeignIP_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_Stats.ICMP_Inbound_BytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ICMP_Outbound_Bytes {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_Stats.ICMP_Outbound_BytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ICMP_Outbound_Bytes\' in table \'ForeignIP_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_Stats.ICMP_Outbound_BytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double IP_Inbound_Bytes {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_Stats.IP_Inbound_BytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IP_Inbound_Bytes\' in table \'ForeignIP_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_Stats.IP_Inbound_BytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double IP_Outbound_Bytes {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_Stats.IP_Outbound_BytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IP_Outbound_Bytes\' in table \'ForeignIP_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_Stats.IP_Outbound_BytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TCP_Inbound_Bytes {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_Stats.TCP_Inbound_BytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TCP_Inbound_Bytes\' in table \'ForeignIP_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_Stats.TCP_Inbound_BytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TCP_Outbound_Bytes {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_Stats.TCP_Outbound_BytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TCP_Outbound_Bytes\' in table \'ForeignIP_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_Stats.TCP_Outbound_BytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double UDP_Inbound_Bytes {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_Stats.UDP_Inbound_BytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UDP_Inbound_Bytes\' in table \'ForeignIP_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_Stats.UDP_Inbound_BytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double UDP_Outbound_Bytes {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_Stats.UDP_Outbound_BytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UDP_Outbound_Bytes\' in table \'ForeignIP_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_Stats.UDP_Outbound_BytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Refused_Bytes {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_Stats.Refused_BytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Refused_Bytes\' in table \'ForeignIP_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_Stats.Refused_BytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Refused_Datagrams {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_Stats.Refused_DatagramsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Refused_Datagrams\' in table \'ForeignIP_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_Stats.Refused_DatagramsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRefuse_FlagNull() {
                return this.IsNull(this.tableForeignIP_Stats.Refuse_FlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRefuse_FlagNull() {
                this[this.tableForeignIP_Stats.Refuse_FlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMisdirected_IP_DatagramsNull() {
                return this.IsNull(this.tableForeignIP_Stats.Misdirected_IP_DatagramsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMisdirected_IP_DatagramsNull() {
                this[this.tableForeignIP_Stats.Misdirected_IP_DatagramsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNonIP_DatagramsNull() {
                return this.IsNull(this.tableForeignIP_Stats.NonIP_DatagramsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNonIP_DatagramsNull() {
                this[this.tableForeignIP_Stats.NonIP_DatagramsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsARP_Inbound_DatagramsNull() {
                return this.IsNull(this.tableForeignIP_Stats.ARP_Inbound_DatagramsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetARP_Inbound_DatagramsNull() {
                this[this.tableForeignIP_Stats.ARP_Inbound_DatagramsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsARP_Outbound_DatagramsNull() {
                return this.IsNull(this.tableForeignIP_Stats.ARP_Outbound_DatagramsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetARP_Outbound_DatagramsNull() {
                this[this.tableForeignIP_Stats.ARP_Outbound_DatagramsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsICMP_Inbound_DatagramsNull() {
                return this.IsNull(this.tableForeignIP_Stats.ICMP_Inbound_DatagramsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetICMP_Inbound_DatagramsNull() {
                this[this.tableForeignIP_Stats.ICMP_Inbound_DatagramsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsICMP_Outbound_DatagramsNull() {
                return this.IsNull(this.tableForeignIP_Stats.ICMP_Outbound_DatagramsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetICMP_Outbound_DatagramsNull() {
                this[this.tableForeignIP_Stats.ICMP_Outbound_DatagramsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIP_Inbound_DatagramsNull() {
                return this.IsNull(this.tableForeignIP_Stats.IP_Inbound_DatagramsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIP_Inbound_DatagramsNull() {
                this[this.tableForeignIP_Stats.IP_Inbound_DatagramsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIP_Outbound_DatagramsNull() {
                return this.IsNull(this.tableForeignIP_Stats.IP_Outbound_DatagramsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIP_Outbound_DatagramsNull() {
                this[this.tableForeignIP_Stats.IP_Outbound_DatagramsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTCP_Inbound_DatagramsNull() {
                return this.IsNull(this.tableForeignIP_Stats.TCP_Inbound_DatagramsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTCP_Inbound_DatagramsNull() {
                this[this.tableForeignIP_Stats.TCP_Inbound_DatagramsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTCP_Outbound_DatagramsNull() {
                return this.IsNull(this.tableForeignIP_Stats.TCP_Outbound_DatagramsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTCP_Outbound_DatagramsNull() {
                this[this.tableForeignIP_Stats.TCP_Outbound_DatagramsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUDP_Inbound_DatagramsNull() {
                return this.IsNull(this.tableForeignIP_Stats.UDP_Inbound_DatagramsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUDP_Inbound_DatagramsNull() {
                this[this.tableForeignIP_Stats.UDP_Inbound_DatagramsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUDP_Outbound_DatagramsNull() {
                return this.IsNull(this.tableForeignIP_Stats.UDP_Outbound_DatagramsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUDP_Outbound_DatagramsNull() {
                this[this.tableForeignIP_Stats.UDP_Outbound_DatagramsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMisdirected_IP_BytesNull() {
                return this.IsNull(this.tableForeignIP_Stats.Misdirected_IP_BytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMisdirected_IP_BytesNull() {
                this[this.tableForeignIP_Stats.Misdirected_IP_BytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNonIP_BytesNull() {
                return this.IsNull(this.tableForeignIP_Stats.NonIP_BytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNonIP_BytesNull() {
                this[this.tableForeignIP_Stats.NonIP_BytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsARP_Inbound_BytesNull() {
                return this.IsNull(this.tableForeignIP_Stats.ARP_Inbound_BytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetARP_Inbound_BytesNull() {
                this[this.tableForeignIP_Stats.ARP_Inbound_BytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsARP_Outbound_BytesNull() {
                return this.IsNull(this.tableForeignIP_Stats.ARP_Outbound_BytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetARP_Outbound_BytesNull() {
                this[this.tableForeignIP_Stats.ARP_Outbound_BytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsICMP_Inbound_BytesNull() {
                return this.IsNull(this.tableForeignIP_Stats.ICMP_Inbound_BytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetICMP_Inbound_BytesNull() {
                this[this.tableForeignIP_Stats.ICMP_Inbound_BytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsICMP_Outbound_BytesNull() {
                return this.IsNull(this.tableForeignIP_Stats.ICMP_Outbound_BytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetICMP_Outbound_BytesNull() {
                this[this.tableForeignIP_Stats.ICMP_Outbound_BytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIP_Inbound_BytesNull() {
                return this.IsNull(this.tableForeignIP_Stats.IP_Inbound_BytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIP_Inbound_BytesNull() {
                this[this.tableForeignIP_Stats.IP_Inbound_BytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIP_Outbound_BytesNull() {
                return this.IsNull(this.tableForeignIP_Stats.IP_Outbound_BytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIP_Outbound_BytesNull() {
                this[this.tableForeignIP_Stats.IP_Outbound_BytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTCP_Inbound_BytesNull() {
                return this.IsNull(this.tableForeignIP_Stats.TCP_Inbound_BytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTCP_Inbound_BytesNull() {
                this[this.tableForeignIP_Stats.TCP_Inbound_BytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTCP_Outbound_BytesNull() {
                return this.IsNull(this.tableForeignIP_Stats.TCP_Outbound_BytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTCP_Outbound_BytesNull() {
                this[this.tableForeignIP_Stats.TCP_Outbound_BytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUDP_Inbound_BytesNull() {
                return this.IsNull(this.tableForeignIP_Stats.UDP_Inbound_BytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUDP_Inbound_BytesNull() {
                this[this.tableForeignIP_Stats.UDP_Inbound_BytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUDP_Outbound_BytesNull() {
                return this.IsNull(this.tableForeignIP_Stats.UDP_Outbound_BytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUDP_Outbound_BytesNull() {
                this[this.tableForeignIP_Stats.UDP_Outbound_BytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRefused_BytesNull() {
                return this.IsNull(this.tableForeignIP_Stats.Refused_BytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRefused_BytesNull() {
                this[this.tableForeignIP_Stats.Refused_BytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRefused_DatagramsNull() {
                return this.IsNull(this.tableForeignIP_Stats.Refused_DatagramsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRefused_DatagramsNull() {
                this[this.tableForeignIP_Stats.Refused_DatagramsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class FTP_RecordsRow : global::System.Data.DataRow {
            
            private FTP_RecordsDataTable tableFTP_Records;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal FTP_RecordsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFTP_Records = ((FTP_RecordsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Record_ID {
                get {
                    return ((int)(this[this.tableFTP_Records.Record_IDColumn]));
                }
                set {
                    this[this.tableFTP_Records.Record_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTP_Node_Name {
                get {
                    try {
                        return ((string)(this[this.tableFTP_Records.FTP_Node_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FTP_Node_Name\' in table \'FTP_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFTP_Records.FTP_Node_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FTP_User_ID {
                get {
                    try {
                        return ((string)(this[this.tableFTP_Records.FTP_User_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FTP_User_ID\' in table \'FTP_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFTP_Records.FTP_User_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Bytes_SentAcked {
                get {
                    try {
                        return ((double)(this[this.tableFTP_Records.Bytes_SentAckedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bytes_SentAcked\' in table \'FTP_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFTP_Records.Bytes_SentAckedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Bytes_Received {
                get {
                    try {
                        return ((double)(this[this.tableFTP_Records.Bytes_ReceivedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bytes_Received\' in table \'FTP_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFTP_Records.Bytes_ReceivedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Start_Time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFTP_Records.Start_TimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Start_Time\' in table \'FTP_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFTP_Records.Start_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime End_Time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFTP_Records.End_TimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'End_Time\' in table \'FTP_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFTP_Records.End_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Files_Received {
                get {
                    try {
                        return ((double)(this[this.tableFTP_Records.Files_ReceivedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Files_Received\' in table \'FTP_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFTP_Records.Files_ReceivedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Files_Sent {
                get {
                    try {
                        return ((double)(this[this.tableFTP_Records.Files_SentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Files_Sent\' in table \'FTP_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFTP_Records.Files_SentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Vse_IP {
                get {
                    try {
                        return ((string)(this[this.tableFTP_Records.Vse_IPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Vse_IP\' in table \'FTP_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFTP_Records.Vse_IPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Client_IP {
                get {
                    try {
                        return ((string)(this[this.tableFTP_Records.Client_IPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Client_IP\' in table \'FTP_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFTP_Records.Client_IPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Vse_Port {
                get {
                    try {
                        return ((int)(this[this.tableFTP_Records.Vse_PortColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Vse_Port\' in table \'FTP_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFTP_Records.Vse_PortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Client_Port {
                get {
                    try {
                        return ((int)(this[this.tableFTP_Records.Client_PortColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Client_Port\' in table \'FTP_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFTP_Records.Client_PortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Vse_Task_ID {
                get {
                    try {
                        return ((int)(this[this.tableFTP_Records.Vse_Task_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Vse_Task_ID\' in table \'FTP_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFTP_Records.Vse_Task_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte SSL_Flag {
                get {
                    try {
                        return ((byte)(this[this.tableFTP_Records.SSL_FlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SSL_Flag\' in table \'FTP_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFTP_Records.SSL_FlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte General_Flag {
                get {
                    try {
                        return ((byte)(this[this.tableFTP_Records.General_FlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'General_Flag\' in table \'FTP_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFTP_Records.General_FlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Foreign_Data_IP {
                get {
                    try {
                        return ((string)(this[this.tableFTP_Records.Foreign_Data_IPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Foreign_Data_IP\' in table \'FTP_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFTP_Records.Foreign_Data_IPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTP_Node_NameNull() {
                return this.IsNull(this.tableFTP_Records.FTP_Node_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTP_Node_NameNull() {
                this[this.tableFTP_Records.FTP_Node_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTP_User_IDNull() {
                return this.IsNull(this.tableFTP_Records.FTP_User_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTP_User_IDNull() {
                this[this.tableFTP_Records.FTP_User_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBytes_SentAckedNull() {
                return this.IsNull(this.tableFTP_Records.Bytes_SentAckedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBytes_SentAckedNull() {
                this[this.tableFTP_Records.Bytes_SentAckedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBytes_ReceivedNull() {
                return this.IsNull(this.tableFTP_Records.Bytes_ReceivedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBytes_ReceivedNull() {
                this[this.tableFTP_Records.Bytes_ReceivedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStart_TimeNull() {
                return this.IsNull(this.tableFTP_Records.Start_TimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStart_TimeNull() {
                this[this.tableFTP_Records.Start_TimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEnd_TimeNull() {
                return this.IsNull(this.tableFTP_Records.End_TimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEnd_TimeNull() {
                this[this.tableFTP_Records.End_TimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFiles_ReceivedNull() {
                return this.IsNull(this.tableFTP_Records.Files_ReceivedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFiles_ReceivedNull() {
                this[this.tableFTP_Records.Files_ReceivedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFiles_SentNull() {
                return this.IsNull(this.tableFTP_Records.Files_SentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFiles_SentNull() {
                this[this.tableFTP_Records.Files_SentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVse_IPNull() {
                return this.IsNull(this.tableFTP_Records.Vse_IPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVse_IPNull() {
                this[this.tableFTP_Records.Vse_IPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClient_IPNull() {
                return this.IsNull(this.tableFTP_Records.Client_IPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClient_IPNull() {
                this[this.tableFTP_Records.Client_IPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVse_PortNull() {
                return this.IsNull(this.tableFTP_Records.Vse_PortColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVse_PortNull() {
                this[this.tableFTP_Records.Vse_PortColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClient_PortNull() {
                return this.IsNull(this.tableFTP_Records.Client_PortColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClient_PortNull() {
                this[this.tableFTP_Records.Client_PortColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVse_Task_IDNull() {
                return this.IsNull(this.tableFTP_Records.Vse_Task_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVse_Task_IDNull() {
                this[this.tableFTP_Records.Vse_Task_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSSL_FlagNull() {
                return this.IsNull(this.tableFTP_Records.SSL_FlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSSL_FlagNull() {
                this[this.tableFTP_Records.SSL_FlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGeneral_FlagNull() {
                return this.IsNull(this.tableFTP_Records.General_FlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGeneral_FlagNull() {
                this[this.tableFTP_Records.General_FlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsForeign_Data_IPNull() {
                return this.IsNull(this.tableFTP_Records.Foreign_Data_IPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetForeign_Data_IPNull() {
                this[this.tableFTP_Records.Foreign_Data_IPColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class JobStep_RecordsRow : global::System.Data.DataRow {
            
            private JobStep_RecordsDataTable tableJobStep_Records;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal JobStep_RecordsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableJobStep_Records = ((JobStep_RecordsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Record_ID {
                get {
                    return ((int)(this[this.tableJobStep_Records.Record_IDColumn]));
                }
                set {
                    this[this.tableJobStep_Records.Record_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PID {
                get {
                    try {
                        return ((string)(this[this.tableJobStep_Records.PIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PID\' in table \'JobStep_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJobStep_Records.PIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Job_Name {
                get {
                    return ((string)(this[this.tableJobStep_Records.Job_NameColumn]));
                }
                set {
                    this[this.tableJobStep_Records.Job_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Step_Name {
                get {
                    return ((string)(this[this.tableJobStep_Records.Step_NameColumn]));
                }
                set {
                    this[this.tableJobStep_Records.Step_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Step_Start_Time {
                get {
                    return ((global::System.DateTime)(this[this.tableJobStep_Records.Step_Start_TimeColumn]));
                }
                set {
                    this[this.tableJobStep_Records.Step_Start_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Step_End_Time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableJobStep_Records.Step_End_TimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Step_End_Time\' in table \'JobStep_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJobStep_Records.Step_End_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Duration_Sec {
                get {
                    try {
                        return ((double)(this[this.tableJobStep_Records.Duration_SecColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Duration_Sec\' in table \'JobStep_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJobStep_Records.Duration_SecColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Cpu_Time_Sec {
                get {
                    try {
                        return ((double)(this[this.tableJobStep_Records.Cpu_Time_SecColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cpu_Time_Sec\' in table \'JobStep_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJobStep_Records.Cpu_Time_SecColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double LocalPOr {
                get {
                    try {
                        return ((double)(this[this.tableJobStep_Records.LocalPOrColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocalPOr\' in table \'JobStep_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableJobStep_Records.LocalPOrColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPIDNull() {
                return this.IsNull(this.tableJobStep_Records.PIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPIDNull() {
                this[this.tableJobStep_Records.PIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStep_End_TimeNull() {
                return this.IsNull(this.tableJobStep_Records.Step_End_TimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStep_End_TimeNull() {
                this[this.tableJobStep_Records.Step_End_TimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDuration_SecNull() {
                return this.IsNull(this.tableJobStep_Records.Duration_SecColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDuration_SecNull() {
                this[this.tableJobStep_Records.Duration_SecColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCpu_Time_SecNull() {
                return this.IsNull(this.tableJobStep_Records.Cpu_Time_SecColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCpu_Time_SecNull() {
                this[this.tableJobStep_Records.Cpu_Time_SecColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLocalPOrNull() {
                return this.IsNull(this.tableJobStep_Records.LocalPOrColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLocalPOrNull() {
                this[this.tableJobStep_Records.LocalPOrColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Link_AdapterRow : global::System.Data.DataRow {
            
            private Link_AdapterDataTable tableLink_Adapter;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Link_AdapterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLink_Adapter = ((Link_AdapterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Poll_Time {
                get {
                    return ((global::System.DateTime)(this[this.tableLink_Adapter.Poll_TimeColumn]));
                }
                set {
                    this[this.tableLink_Adapter.Poll_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Type {
                get {
                    try {
                        return ((string)(this[this.tableLink_Adapter.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Type\' in table \'Link_Adapter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLink_Adapter.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Link_ID {
                get {
                    return ((string)(this[this.tableLink_Adapter.Link_IDColumn]));
                }
                set {
                    this[this.tableLink_Adapter.Link_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Define_Type {
                get {
                    return ((string)(this[this.tableLink_Adapter.Define_TypeColumn]));
                }
                set {
                    this[this.tableLink_Adapter.Define_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MTU {
                get {
                    try {
                        return ((double)(this[this.tableLink_Adapter.MTUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MTU\' in table \'Link_Adapter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLink_Adapter.MTUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CUU_Name {
                get {
                    try {
                        return ((string)(this[this.tableLink_Adapter.CUU_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUU_Name\' in table \'Link_Adapter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLink_Adapter.CUU_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Alternate_CUU {
                get {
                    try {
                        return ((string)(this[this.tableLink_Adapter.Alternate_CUUColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Alternate_CUU\' in table \'Link_Adapter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLink_Adapter.Alternate_CUUColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IP_Address {
                get {
                    try {
                        return ((string)(this[this.tableLink_Adapter.IP_AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IP_Address\' in table \'Link_Adapter\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableLink_Adapter.IP_AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypeNull() {
                return this.IsNull(this.tableLink_Adapter.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypeNull() {
                this[this.tableLink_Adapter.TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMTUNull() {
                return this.IsNull(this.tableLink_Adapter.MTUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMTUNull() {
                this[this.tableLink_Adapter.MTUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCUU_NameNull() {
                return this.IsNull(this.tableLink_Adapter.CUU_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCUU_NameNull() {
                this[this.tableLink_Adapter.CUU_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAlternate_CUUNull() {
                return this.IsNull(this.tableLink_Adapter.Alternate_CUUColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAlternate_CUUNull() {
                this[this.tableLink_Adapter.Alternate_CUUColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIP_AddressNull() {
                return this.IsNull(this.tableLink_Adapter.IP_AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIP_AddressNull() {
                this[this.tableLink_Adapter.IP_AddressColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Partition_Job_StepRow : global::System.Data.DataRow {
            
            private Partition_Job_StepDataTable tablePartition_Job_Step;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Partition_Job_StepRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePartition_Job_Step = ((Partition_Job_StepDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Poll_Time {
                get {
                    return ((global::System.DateTime)(this[this.tablePartition_Job_Step.Poll_TimeColumn]));
                }
                set {
                    this[this.tablePartition_Job_Step.Poll_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Partition_ID {
                get {
                    return ((string)(this[this.tablePartition_Job_Step.Partition_IDColumn]));
                }
                set {
                    this[this.tablePartition_Job_Step.Partition_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Power_Job_Name {
                get {
                    return ((string)(this[this.tablePartition_Job_Step.Power_Job_NameColumn]));
                }
                set {
                    this[this.tablePartition_Job_Step.Power_Job_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VSE_Job_Name {
                get {
                    return ((string)(this[this.tablePartition_Job_Step.VSE_Job_NameColumn]));
                }
                set {
                    this[this.tablePartition_Job_Step.VSE_Job_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VSE_Step_Name {
                get {
                    return ((string)(this[this.tablePartition_Job_Step.VSE_Step_NameColumn]));
                }
                set {
                    this[this.tablePartition_Job_Step.VSE_Step_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Job_Start_Time {
                get {
                    return ((global::System.DateTime)(this[this.tablePartition_Job_Step.Job_Start_TimeColumn]));
                }
                set {
                    this[this.tablePartition_Job_Step.Job_Start_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Step_Start_Time {
                get {
                    return ((global::System.DateTime)(this[this.tablePartition_Job_Step.Step_Start_TimeColumn]));
                }
                set {
                    this[this.tablePartition_Job_Step.Step_Start_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double CPU_Time_sec {
                get {
                    try {
                        return ((double)(this[this.tablePartition_Job_Step.CPU_Time_secColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CPU_Time_sec\' in table \'Partition_Job_Step\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePartition_Job_Step.CPU_Time_secColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SIO_Count {
                get {
                    try {
                        return ((double)(this[this.tablePartition_Job_Step.SIO_CountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SIO_Count\' in table \'Partition_Job_Step\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePartition_Job_Step.SIO_CountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Priority {
                get {
                    try {
                        return ((double)(this[this.tablePartition_Job_Step.PriorityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Priority\' in table \'Partition_Job_Step\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePartition_Job_Step.PriorityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCPU_Time_secNull() {
                return this.IsNull(this.tablePartition_Job_Step.CPU_Time_secColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCPU_Time_secNull() {
                this[this.tablePartition_Job_Step.CPU_Time_secColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSIO_CountNull() {
                return this.IsNull(this.tablePartition_Job_Step.SIO_CountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSIO_CountNull() {
                this[this.tablePartition_Job_Step.SIO_CountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPriorityNull() {
                return this.IsNull(this.tablePartition_Job_Step.PriorityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPriorityNull() {
                this[this.tablePartition_Job_Step.PriorityColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SeeServer_SummaryRow : global::System.Data.DataRow {
            
            private SeeServer_SummaryDataTable tableSeeServer_Summary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SeeServer_SummaryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSeeServer_Summary = ((SeeServer_SummaryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Poll_Time {
                get {
                    return ((global::System.DateTime)(this[this.tableSeeServer_Summary.Poll_TimeColumn]));
                }
                set {
                    this[this.tableSeeServer_Summary.Poll_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime SeeServer_Start_Time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSeeServer_Summary.SeeServer_Start_TimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SeeServer_Start_Time\' in table \'SeeServer_Summary\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSeeServer_Summary.SeeServer_Start_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PID {
                get {
                    try {
                        return ((string)(this[this.tableSeeServer_Summary.PIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PID\' in table \'SeeServer_Summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSeeServer_Summary.PIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Job_Name {
                get {
                    try {
                        return ((string)(this[this.tableSeeServer_Summary.Job_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Job_Name\' in table \'SeeServer_Summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSeeServer_Summary.Job_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Release {
                get {
                    try {
                        return ((string)(this[this.tableSeeServer_Summary.ReleaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Release\' in table \'SeeServer_Summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableSeeServer_Summary.ReleaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSeeServer_Start_TimeNull() {
                return this.IsNull(this.tableSeeServer_Summary.SeeServer_Start_TimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSeeServer_Start_TimeNull() {
                this[this.tableSeeServer_Summary.SeeServer_Start_TimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPIDNull() {
                return this.IsNull(this.tableSeeServer_Summary.PIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPIDNull() {
                this[this.tableSeeServer_Summary.PIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJob_NameNull() {
                return this.IsNull(this.tableSeeServer_Summary.Job_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJob_NameNull() {
                this[this.tableSeeServer_Summary.Job_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReleaseNull() {
                return this.IsNull(this.tableSeeServer_Summary.ReleaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReleaseNull() {
                this[this.tableSeeServer_Summary.ReleaseColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Startup_RecordsRow : global::System.Data.DataRow {
            
            private Startup_RecordsDataTable tableStartup_Records;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Startup_RecordsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStartup_Records = ((Startup_RecordsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Record_ID {
                get {
                    return ((int)(this[this.tableStartup_Records.Record_IDColumn]));
                }
                set {
                    this[this.tableStartup_Records.Record_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Start_Time {
                get {
                    return ((global::System.DateTime)(this[this.tableStartup_Records.Start_TimeColumn]));
                }
                set {
                    this[this.tableStartup_Records.Start_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Cpu_ID {
                get {
                    try {
                        return ((string)(this[this.tableStartup_Records.Cpu_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cpu_ID\' in table \'Startup_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStartup_Records.Cpu_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Program_ID {
                get {
                    return ((string)(this[this.tableStartup_Records.Program_IDColumn]));
                }
                set {
                    this[this.tableStartup_Records.Program_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Program_Version {
                get {
                    try {
                        return ((string)(this[this.tableStartup_Records.Program_VersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Program_Version\' in table \'Startup_Records\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStartup_Records.Program_VersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCpu_IDNull() {
                return this.IsNull(this.tableStartup_Records.Cpu_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCpu_IDNull() {
                this[this.tableStartup_Records.Cpu_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProgram_VersionNull() {
                return this.IsNull(this.tableStartup_Records.Program_VersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProgram_VersionNull() {
                this[this.tableStartup_Records.Program_VersionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TCPIP_ClientsRow : global::System.Data.DataRow {
            
            private TCPIP_ClientsDataTable tableTCPIP_Clients;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TCPIP_ClientsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTCPIP_Clients = ((TCPIP_ClientsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Poll_Time {
                get {
                    return ((global::System.DateTime)(this[this.tableTCPIP_Clients.Poll_TimeColumn]));
                }
                set {
                    this[this.tableTCPIP_Clients.Poll_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double FTP_Clients {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Clients.FTP_ClientsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FTP_Clients\' in table \'TCPIP_Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Clients.FTP_ClientsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Telnet_Clients {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Clients.Telnet_ClientsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Telnet_Clients\' in table \'TCPIP_Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Clients.Telnet_ClientsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double LPR_Clients {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Clients.LPR_ClientsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LPR_Clients\' in table \'TCPIP_Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Clients.LPR_ClientsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HTTP_Clients {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Clients.HTTP_ClientsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HTTP_Clients\' in table \'TCPIP_Clients\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Clients.HTTP_ClientsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTP_ClientsNull() {
                return this.IsNull(this.tableTCPIP_Clients.FTP_ClientsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTP_ClientsNull() {
                this[this.tableTCPIP_Clients.FTP_ClientsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTelnet_ClientsNull() {
                return this.IsNull(this.tableTCPIP_Clients.Telnet_ClientsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTelnet_ClientsNull() {
                this[this.tableTCPIP_Clients.Telnet_ClientsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLPR_ClientsNull() {
                return this.IsNull(this.tableTCPIP_Clients.LPR_ClientsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLPR_ClientsNull() {
                this[this.tableTCPIP_Clients.LPR_ClientsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHTTP_ClientsNull() {
                return this.IsNull(this.tableTCPIP_Clients.HTTP_ClientsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHTTP_ClientsNull() {
                this[this.tableTCPIP_Clients.HTTP_ClientsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TCPIP_DaemonsRow : global::System.Data.DataRow {
            
            private TCPIP_DaemonsDataTable tableTCPIP_Daemons;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TCPIP_DaemonsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTCPIP_Daemons = ((TCPIP_DaemonsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Poll_Time {
                get {
                    return ((global::System.DateTime)(this[this.tableTCPIP_Daemons.Poll_TimeColumn]));
                }
                set {
                    this[this.tableTCPIP_Daemons.Poll_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double FTP_Daemons {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Daemons.FTP_DaemonsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FTP_Daemons\' in table \'TCPIP_Daemons\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Daemons.FTP_DaemonsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Active_FTP_Daemons {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Daemons.Active_FTP_DaemonsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Active_FTP_Daemons\' in table \'TCPIP_Daemons\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Daemons.Active_FTP_DaemonsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Max_FTP_Daemons {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Daemons.Max_FTP_DaemonsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Max_FTP_Daemons\' in table \'TCPIP_Daemons\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Daemons.Max_FTP_DaemonsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Telnet_Daemons {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Daemons.Telnet_DaemonsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Telnet_Daemons\' in table \'TCPIP_Daemons\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Daemons.Telnet_DaemonsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Active_Telnet_Daemons {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Daemons.Active_Telnet_DaemonsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Active_Telnet_Daemons\' in table \'TCPIP_Daemons\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Daemons.Active_Telnet_DaemonsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Max_Telnet_Daemons {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Daemons.Max_Telnet_DaemonsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Max_Telnet_Daemons\' in table \'TCPIP_Daemons\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Daemons.Max_Telnet_DaemonsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Active_Telnet_Buffers {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Daemons.Active_Telnet_BuffersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Active_Telnet_Buffers\' in table \'TCPIP_Daemons\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Daemons.Active_Telnet_BuffersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Max_Telnet_Buffers {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Daemons.Max_Telnet_BuffersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Max_Telnet_Buffers\' in table \'TCPIP_Daemons\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Daemons.Max_Telnet_BuffersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double LP_Daemons {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Daemons.LP_DaemonsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LP_Daemons\' in table \'TCPIP_Daemons\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Daemons.LP_DaemonsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double HTTP_Daemons {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Daemons.HTTP_DaemonsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HTTP_Daemons\' in table \'TCPIP_Daemons\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Daemons.HTTP_DaemonsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double SMTP_Daemons {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Daemons.SMTP_DaemonsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SMTP_Daemons\' in table \'TCPIP_Daemons\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Daemons.SMTP_DaemonsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double POP3_Daemons {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Daemons.POP3_DaemonsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'POP3_Daemons\' in table \'TCPIP_Daemons\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Daemons.POP3_DaemonsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFTP_DaemonsNull() {
                return this.IsNull(this.tableTCPIP_Daemons.FTP_DaemonsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFTP_DaemonsNull() {
                this[this.tableTCPIP_Daemons.FTP_DaemonsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActive_FTP_DaemonsNull() {
                return this.IsNull(this.tableTCPIP_Daemons.Active_FTP_DaemonsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActive_FTP_DaemonsNull() {
                this[this.tableTCPIP_Daemons.Active_FTP_DaemonsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMax_FTP_DaemonsNull() {
                return this.IsNull(this.tableTCPIP_Daemons.Max_FTP_DaemonsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMax_FTP_DaemonsNull() {
                this[this.tableTCPIP_Daemons.Max_FTP_DaemonsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTelnet_DaemonsNull() {
                return this.IsNull(this.tableTCPIP_Daemons.Telnet_DaemonsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTelnet_DaemonsNull() {
                this[this.tableTCPIP_Daemons.Telnet_DaemonsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActive_Telnet_DaemonsNull() {
                return this.IsNull(this.tableTCPIP_Daemons.Active_Telnet_DaemonsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActive_Telnet_DaemonsNull() {
                this[this.tableTCPIP_Daemons.Active_Telnet_DaemonsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMax_Telnet_DaemonsNull() {
                return this.IsNull(this.tableTCPIP_Daemons.Max_Telnet_DaemonsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMax_Telnet_DaemonsNull() {
                this[this.tableTCPIP_Daemons.Max_Telnet_DaemonsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActive_Telnet_BuffersNull() {
                return this.IsNull(this.tableTCPIP_Daemons.Active_Telnet_BuffersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActive_Telnet_BuffersNull() {
                this[this.tableTCPIP_Daemons.Active_Telnet_BuffersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMax_Telnet_BuffersNull() {
                return this.IsNull(this.tableTCPIP_Daemons.Max_Telnet_BuffersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMax_Telnet_BuffersNull() {
                this[this.tableTCPIP_Daemons.Max_Telnet_BuffersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLP_DaemonsNull() {
                return this.IsNull(this.tableTCPIP_Daemons.LP_DaemonsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLP_DaemonsNull() {
                this[this.tableTCPIP_Daemons.LP_DaemonsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHTTP_DaemonsNull() {
                return this.IsNull(this.tableTCPIP_Daemons.HTTP_DaemonsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHTTP_DaemonsNull() {
                this[this.tableTCPIP_Daemons.HTTP_DaemonsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSMTP_DaemonsNull() {
                return this.IsNull(this.tableTCPIP_Daemons.SMTP_DaemonsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSMTP_DaemonsNull() {
                this[this.tableTCPIP_Daemons.SMTP_DaemonsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPOP3_DaemonsNull() {
                return this.IsNull(this.tableTCPIP_Daemons.POP3_DaemonsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPOP3_DaemonsNull() {
                this[this.tableTCPIP_Daemons.POP3_DaemonsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TCPIP_DispatcherRow : global::System.Data.DataRow {
            
            private TCPIP_DispatcherDataTable tableTCPIP_Dispatcher;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TCPIP_DispatcherRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTCPIP_Dispatcher = ((TCPIP_DispatcherDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Poll_Time {
                get {
                    return ((global::System.DateTime)(this[this.tableTCPIP_Dispatcher.Poll_TimeColumn]));
                }
                set {
                    this[this.tableTCPIP_Dispatcher.Poll_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Total_Dispatches {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Dispatcher.Total_DispatchesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total_Dispatches\' in table \'TCPIP_Dispatcher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Dispatcher.Total_DispatchesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Active_Dispatches {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Dispatcher.Active_DispatchesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Active_Dispatches\' in table \'TCPIP_Dispatcher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Dispatcher.Active_DispatchesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Fixed_Dispatches {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Dispatcher.Fixed_DispatchesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fixed_Dispatches\' in table \'TCPIP_Dispatcher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Dispatcher.Fixed_DispatchesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Quick_Dispatches {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Dispatcher.Quick_DispatchesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Quick_Dispatches\' in table \'TCPIP_Dispatcher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Dispatcher.Quick_DispatchesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Persistent_Dispatches {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Dispatcher.Persistent_DispatchesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Persistent_Dispatches\' in table \'TCPIP_Dispatcher\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Dispatcher.Persistent_DispatchesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Complete_Dispatches {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Dispatcher.Complete_DispatchesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Complete_Dispatches\' in table \'TCPIP_Dispatcher\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Dispatcher.Complete_DispatchesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Passed_Dispatches {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Dispatcher.Passed_DispatchesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Passed_Dispatches\' in table \'TCPIP_Dispatcher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Dispatcher.Passed_DispatchesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Total_Dispatcher_Time {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Dispatcher.Total_Dispatcher_TimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total_Dispatcher_Time\' in table \'TCPIP_Dispatcher\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Dispatcher.Total_Dispatcher_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Dispatcher_Waits {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Dispatcher.Dispatcher_WaitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dispatcher_Waits\' in table \'TCPIP_Dispatcher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Dispatcher.Dispatcher_WaitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Storage_Releases {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Dispatcher.Storage_ReleasesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Storage_Releases\' in table \'TCPIP_Dispatcher\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Dispatcher.Storage_ReleasesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotal_DispatchesNull() {
                return this.IsNull(this.tableTCPIP_Dispatcher.Total_DispatchesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotal_DispatchesNull() {
                this[this.tableTCPIP_Dispatcher.Total_DispatchesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsActive_DispatchesNull() {
                return this.IsNull(this.tableTCPIP_Dispatcher.Active_DispatchesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetActive_DispatchesNull() {
                this[this.tableTCPIP_Dispatcher.Active_DispatchesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFixed_DispatchesNull() {
                return this.IsNull(this.tableTCPIP_Dispatcher.Fixed_DispatchesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFixed_DispatchesNull() {
                this[this.tableTCPIP_Dispatcher.Fixed_DispatchesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsQuick_DispatchesNull() {
                return this.IsNull(this.tableTCPIP_Dispatcher.Quick_DispatchesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetQuick_DispatchesNull() {
                this[this.tableTCPIP_Dispatcher.Quick_DispatchesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPersistent_DispatchesNull() {
                return this.IsNull(this.tableTCPIP_Dispatcher.Persistent_DispatchesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPersistent_DispatchesNull() {
                this[this.tableTCPIP_Dispatcher.Persistent_DispatchesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsComplete_DispatchesNull() {
                return this.IsNull(this.tableTCPIP_Dispatcher.Complete_DispatchesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetComplete_DispatchesNull() {
                this[this.tableTCPIP_Dispatcher.Complete_DispatchesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPassed_DispatchesNull() {
                return this.IsNull(this.tableTCPIP_Dispatcher.Passed_DispatchesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPassed_DispatchesNull() {
                this[this.tableTCPIP_Dispatcher.Passed_DispatchesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotal_Dispatcher_TimeNull() {
                return this.IsNull(this.tableTCPIP_Dispatcher.Total_Dispatcher_TimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotal_Dispatcher_TimeNull() {
                this[this.tableTCPIP_Dispatcher.Total_Dispatcher_TimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDispatcher_WaitsNull() {
                return this.IsNull(this.tableTCPIP_Dispatcher.Dispatcher_WaitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDispatcher_WaitsNull() {
                this[this.tableTCPIP_Dispatcher.Dispatcher_WaitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStorage_ReleasesNull() {
                return this.IsNull(this.tableTCPIP_Dispatcher.Storage_ReleasesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStorage_ReleasesNull() {
                this[this.tableTCPIP_Dispatcher.Storage_ReleasesColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TCPIP_ErrorsRow : global::System.Data.DataRow {
            
            private TCPIP_ErrorsDataTable tableTCPIP_Errors;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TCPIP_ErrorsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTCPIP_Errors = ((TCPIP_ErrorsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Poll_Time {
                get {
                    return ((global::System.DateTime)(this[this.tableTCPIP_Errors.Poll_TimeColumn]));
                }
                set {
                    this[this.tableTCPIP_Errors.Poll_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TCP_Checksum_Errors {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Errors.TCP_Checksum_ErrorsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TCP_Checksum_Errors\' in table \'TCPIP_Errors\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Errors.TCP_Checksum_ErrorsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double IP_Checksum_Errors {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Errors.IP_Checksum_ErrorsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IP_Checksum_Errors\' in table \'TCPIP_Errors\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Errors.IP_Checksum_ErrorsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double UDP_Checksum_Errors {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Errors.UDP_Checksum_ErrorsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UDP_Checksum_Errors\' in table \'TCPIP_Errors\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Errors.UDP_Checksum_ErrorsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ICMP_Checksum_Errors {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Errors.ICMP_Checksum_ErrorsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ICMP_Checksum_Errors\' in table \'TCPIP_Errors\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Errors.ICMP_Checksum_ErrorsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Datagram_Length_Errors {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Errors.Datagram_Length_ErrorsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Datagram_Length_Errors\' in table \'TCPIP_Errors\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Errors.Datagram_Length_ErrorsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTCP_Checksum_ErrorsNull() {
                return this.IsNull(this.tableTCPIP_Errors.TCP_Checksum_ErrorsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTCP_Checksum_ErrorsNull() {
                this[this.tableTCPIP_Errors.TCP_Checksum_ErrorsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIP_Checksum_ErrorsNull() {
                return this.IsNull(this.tableTCPIP_Errors.IP_Checksum_ErrorsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIP_Checksum_ErrorsNull() {
                this[this.tableTCPIP_Errors.IP_Checksum_ErrorsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUDP_Checksum_ErrorsNull() {
                return this.IsNull(this.tableTCPIP_Errors.UDP_Checksum_ErrorsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUDP_Checksum_ErrorsNull() {
                this[this.tableTCPIP_Errors.UDP_Checksum_ErrorsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsICMP_Checksum_ErrorsNull() {
                return this.IsNull(this.tableTCPIP_Errors.ICMP_Checksum_ErrorsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetICMP_Checksum_ErrorsNull() {
                this[this.tableTCPIP_Errors.ICMP_Checksum_ErrorsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDatagram_Length_ErrorsNull() {
                return this.IsNull(this.tableTCPIP_Errors.Datagram_Length_ErrorsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDatagram_Length_ErrorsNull() {
                this[this.tableTCPIP_Errors.Datagram_Length_ErrorsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TCPIP_MessagesRow : global::System.Data.DataRow {
            
            private TCPIP_MessagesDataTable tableTCPIP_Messages;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TCPIP_MessagesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTCPIP_Messages = ((TCPIP_MessagesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Message_ID {
                get {
                    return ((int)(this[this.tableTCPIP_Messages.Message_IDColumn]));
                }
                set {
                    this[this.tableTCPIP_Messages.Message_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Time_Stamp {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTCPIP_Messages.Time_StampColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Time_Stamp\' in table \'TCPIP_Messages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Messages.Time_StampColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Message_Text {
                get {
                    try {
                        return ((string)(this[this.tableTCPIP_Messages.Message_TextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Message_Text\' in table \'TCPIP_Messages\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Messages.Message_TextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTime_StampNull() {
                return this.IsNull(this.tableTCPIP_Messages.Time_StampColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTime_StampNull() {
                this[this.tableTCPIP_Messages.Time_StampColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMessage_TextNull() {
                return this.IsNull(this.tableTCPIP_Messages.Message_TextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMessage_TextNull() {
                this[this.tableTCPIP_Messages.Message_TextColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TCPIP_OtherRow : global::System.Data.DataRow {
            
            private TCPIP_OtherDataTable tableTCPIP_Other;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TCPIP_OtherRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTCPIP_Other = ((TCPIP_OtherDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Poll_Time {
                get {
                    return ((global::System.DateTime)(this[this.tableTCPIP_Other.Poll_TimeColumn]));
                }
                set {
                    this[this.tableTCPIP_Other.Poll_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Non_IP {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Other.Non_IPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Non_IP\' in table \'TCPIP_Other\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Other.Non_IPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Miss_Routed_IP {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Other.Miss_Routed_IPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Miss_Routed_IP\' in table \'TCPIP_Other\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Other.Miss_Routed_IPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Discarded_UDP {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Other.Discarded_UDPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Discarded_UDP\' in table \'TCPIP_Other\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Other.Discarded_UDPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Unsupported_ICMP {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Other.Unsupported_ICMPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unsupported_ICMP\' in table \'TCPIP_Other\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Other.Unsupported_ICMPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Unsupported_IGMP {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Other.Unsupported_IGMPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unsupported_IGMP\' in table \'TCPIP_Other\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Other.Unsupported_IGMPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Unsupported_Protocol {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Other.Unsupported_ProtocolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unsupported_Protocol\' in table \'TCPIP_Other\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Other.Unsupported_ProtocolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Connect_Rejections {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Other.Connect_RejectionsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Connect_Rejections\' in table \'TCPIP_Other\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Other.Connect_RejectionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Inbound_TCP_Rejections {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Other.Inbound_TCP_RejectionsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Inbound_TCP_Rejections\' in table \'TCPIP_Other\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Other.Inbound_TCP_RejectionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNon_IPNull() {
                return this.IsNull(this.tableTCPIP_Other.Non_IPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNon_IPNull() {
                this[this.tableTCPIP_Other.Non_IPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMiss_Routed_IPNull() {
                return this.IsNull(this.tableTCPIP_Other.Miss_Routed_IPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMiss_Routed_IPNull() {
                this[this.tableTCPIP_Other.Miss_Routed_IPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDiscarded_UDPNull() {
                return this.IsNull(this.tableTCPIP_Other.Discarded_UDPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDiscarded_UDPNull() {
                this[this.tableTCPIP_Other.Discarded_UDPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnsupported_ICMPNull() {
                return this.IsNull(this.tableTCPIP_Other.Unsupported_ICMPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnsupported_ICMPNull() {
                this[this.tableTCPIP_Other.Unsupported_ICMPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnsupported_IGMPNull() {
                return this.IsNull(this.tableTCPIP_Other.Unsupported_IGMPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnsupported_IGMPNull() {
                this[this.tableTCPIP_Other.Unsupported_IGMPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUnsupported_ProtocolNull() {
                return this.IsNull(this.tableTCPIP_Other.Unsupported_ProtocolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUnsupported_ProtocolNull() {
                this[this.tableTCPIP_Other.Unsupported_ProtocolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConnect_RejectionsNull() {
                return this.IsNull(this.tableTCPIP_Other.Connect_RejectionsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConnect_RejectionsNull() {
                this[this.tableTCPIP_Other.Connect_RejectionsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInbound_TCP_RejectionsNull() {
                return this.IsNull(this.tableTCPIP_Other.Inbound_TCP_RejectionsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInbound_TCP_RejectionsNull() {
                this[this.tableTCPIP_Other.Inbound_TCP_RejectionsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TCPIP_SummaryRow : global::System.Data.DataRow {
            
            private TCPIP_SummaryDataTable tableTCPIP_Summary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TCPIP_SummaryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTCPIP_Summary = ((TCPIP_SummaryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Poll_Time {
                get {
                    return ((global::System.DateTime)(this[this.tableTCPIP_Summary.Poll_TimeColumn]));
                }
                set {
                    this[this.tableTCPIP_Summary.Poll_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime TCPIP_Start_Time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableTCPIP_Summary.TCPIP_Start_TimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TCPIP_Start_Time\' in table \'TCPIP_Summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Summary.TCPIP_Start_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Sys_ID {
                get {
                    try {
                        return ((string)(this[this.tableTCPIP_Summary.Sys_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sys_ID\' in table \'TCPIP_Summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Summary.Sys_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PID {
                get {
                    try {
                        return ((string)(this[this.tableTCPIP_Summary.PIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PID\' in table \'TCPIP_Summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Summary.PIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Job_Name {
                get {
                    try {
                        return ((string)(this[this.tableTCPIP_Summary.Job_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Job_Name\' in table \'TCPIP_Summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Summary.Job_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Release {
                get {
                    try {
                        return ((string)(this[this.tableTCPIP_Summary.ReleaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Release\' in table \'TCPIP_Summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Summary.ReleaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string License {
                get {
                    try {
                        return ((string)(this[this.tableTCPIP_Summary.LicenseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'License\' in table \'TCPIP_Summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Summary.LicenseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IP_Address {
                get {
                    try {
                        return ((string)(this[this.tableTCPIP_Summary.IP_AddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IP_Address\' in table \'TCPIP_Summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Summary.IP_AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Console_Port {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Summary.Console_PortColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Console_Port\' in table \'TCPIP_Summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Summary.Console_PortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Nof_TCPIP_Connections {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Summary.Nof_TCPIP_ConnectionsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nof_TCPIP_Connections\' in table \'TCPIP_Summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Summary.Nof_TCPIP_ConnectionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Nof_TCPIP_PseudoTasks {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Summary.Nof_TCPIP_PseudoTasksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nof_TCPIP_PseudoTasks\' in table \'TCPIP_Summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Summary.Nof_TCPIP_PseudoTasksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTCPIP_Start_TimeNull() {
                return this.IsNull(this.tableTCPIP_Summary.TCPIP_Start_TimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTCPIP_Start_TimeNull() {
                this[this.tableTCPIP_Summary.TCPIP_Start_TimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSys_IDNull() {
                return this.IsNull(this.tableTCPIP_Summary.Sys_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSys_IDNull() {
                this[this.tableTCPIP_Summary.Sys_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPIDNull() {
                return this.IsNull(this.tableTCPIP_Summary.PIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPIDNull() {
                this[this.tableTCPIP_Summary.PIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJob_NameNull() {
                return this.IsNull(this.tableTCPIP_Summary.Job_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJob_NameNull() {
                this[this.tableTCPIP_Summary.Job_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReleaseNull() {
                return this.IsNull(this.tableTCPIP_Summary.ReleaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReleaseNull() {
                this[this.tableTCPIP_Summary.ReleaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLicenseNull() {
                return this.IsNull(this.tableTCPIP_Summary.LicenseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLicenseNull() {
                this[this.tableTCPIP_Summary.LicenseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIP_AddressNull() {
                return this.IsNull(this.tableTCPIP_Summary.IP_AddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIP_AddressNull() {
                this[this.tableTCPIP_Summary.IP_AddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsConsole_PortNull() {
                return this.IsNull(this.tableTCPIP_Summary.Console_PortColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetConsole_PortNull() {
                this[this.tableTCPIP_Summary.Console_PortColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNof_TCPIP_ConnectionsNull() {
                return this.IsNull(this.tableTCPIP_Summary.Nof_TCPIP_ConnectionsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNof_TCPIP_ConnectionsNull() {
                this[this.tableTCPIP_Summary.Nof_TCPIP_ConnectionsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNof_TCPIP_PseudoTasksNull() {
                return this.IsNull(this.tableTCPIP_Summary.Nof_TCPIP_PseudoTasksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNof_TCPIP_PseudoTasksNull() {
                this[this.tableTCPIP_Summary.Nof_TCPIP_PseudoTasksColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TCPIP_TrafficRow : global::System.Data.DataRow {
            
            private TCPIP_TrafficDataTable tableTCPIP_Traffic;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TCPIP_TrafficRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTCPIP_Traffic = ((TCPIP_TrafficDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Poll_Time {
                get {
                    return ((global::System.DateTime)(this[this.tableTCPIP_Traffic.Poll_TimeColumn]));
                }
                set {
                    this[this.tableTCPIP_Traffic.Poll_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Int_FTP_Files_Sent {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Traffic.Int_FTP_Files_SentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Int_FTP_Files_Sent\' in table \'TCPIP_Traffic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Traffic.Int_FTP_Files_SentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Int_FTP_Files_Received {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Traffic.Int_FTP_Files_ReceivedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Int_FTP_Files_Received\' in table \'TCPIP_Traffic\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Traffic.Int_FTP_Files_ReceivedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Int_FTP_Bytes_Sent {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Traffic.Int_FTP_Bytes_SentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Int_FTP_Bytes_Sent\' in table \'TCPIP_Traffic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Traffic.Int_FTP_Bytes_SentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Int_FTP_Bytes_Received {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Traffic.Int_FTP_Bytes_ReceivedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Int_FTP_Bytes_Received\' in table \'TCPIP_Traffic\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Traffic.Int_FTP_Bytes_ReceivedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Telnet_Bytes_Sent {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Traffic.Telnet_Bytes_SentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Telnet_Bytes_Sent\' in table \'TCPIP_Traffic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Traffic.Telnet_Bytes_SentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Telnet_Bytes_Received {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Traffic.Telnet_Bytes_ReceivedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Telnet_Bytes_Received\' in table \'TCPIP_Traffic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Traffic.Telnet_Bytes_ReceivedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TCP_Bytes_Sent {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Traffic.TCP_Bytes_SentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TCP_Bytes_Sent\' in table \'TCPIP_Traffic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Traffic.TCP_Bytes_SentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TCP_Bytes_Received {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Traffic.TCP_Bytes_ReceivedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TCP_Bytes_Received\' in table \'TCPIP_Traffic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Traffic.TCP_Bytes_ReceivedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double UDP_Bytes_Sent {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Traffic.UDP_Bytes_SentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UDP_Bytes_Sent\' in table \'TCPIP_Traffic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Traffic.UDP_Bytes_SentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double UDP_Bytes_Received {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Traffic.UDP_Bytes_ReceivedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UDP_Bytes_Received\' in table \'TCPIP_Traffic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Traffic.UDP_Bytes_ReceivedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double IP_Bytes_Sent {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Traffic.IP_Bytes_SentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IP_Bytes_Sent\' in table \'TCPIP_Traffic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Traffic.IP_Bytes_SentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double IP_Bytes_Received {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Traffic.IP_Bytes_ReceivedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IP_Bytes_Received\' in table \'TCPIP_Traffic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Traffic.IP_Bytes_ReceivedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Arps_In {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Traffic.Arps_InColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Arps_In\' in table \'TCPIP_Traffic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Traffic.Arps_InColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Arp_Requests_Inbound {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Traffic.Arp_Requests_InboundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Arp_Requests_Inbound\' in table \'TCPIP_Traffic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Traffic.Arp_Requests_InboundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Arp_Requests_Outbound {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Traffic.Arp_Requests_OutboundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Arp_Requests_Outbound\' in table \'TCPIP_Traffic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Traffic.Arp_Requests_OutboundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Arp_Replies_Outbound {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Traffic.Arp_Replies_OutboundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Arp_Replies_Outbound\' in table \'TCPIP_Traffic\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Traffic.Arp_Replies_OutboundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double IPNL3172_Blocks_Received {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Traffic.IPNL3172_Blocks_ReceivedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IPNL3172_Blocks_Received\' in table \'TCPIP_Traffic\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Traffic.IPNL3172_Blocks_ReceivedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double IPNL3172_Blocks_Transmitted {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Traffic.IPNL3172_Blocks_TransmittedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IPNL3172_Blocks_Transmitted\' in table \'TCPIP_Traffic\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Traffic.IPNL3172_Blocks_TransmittedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double IPNL3172_Datagrams_Inbound {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Traffic.IPNL3172_Datagrams_InboundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IPNL3172_Datagrams_Inbound\' in table \'TCPIP_Traffic\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Traffic.IPNL3172_Datagrams_InboundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double IPNL3172_Datagrams_Outbound {
                get {
                    try {
                        return ((double)(this[this.tableTCPIP_Traffic.IPNL3172_Datagrams_OutboundColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IPNL3172_Datagrams_Outbound\' in table \'TCPIP_Traffic\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableTCPIP_Traffic.IPNL3172_Datagrams_OutboundColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInt_FTP_Files_SentNull() {
                return this.IsNull(this.tableTCPIP_Traffic.Int_FTP_Files_SentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInt_FTP_Files_SentNull() {
                this[this.tableTCPIP_Traffic.Int_FTP_Files_SentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInt_FTP_Files_ReceivedNull() {
                return this.IsNull(this.tableTCPIP_Traffic.Int_FTP_Files_ReceivedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInt_FTP_Files_ReceivedNull() {
                this[this.tableTCPIP_Traffic.Int_FTP_Files_ReceivedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInt_FTP_Bytes_SentNull() {
                return this.IsNull(this.tableTCPIP_Traffic.Int_FTP_Bytes_SentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInt_FTP_Bytes_SentNull() {
                this[this.tableTCPIP_Traffic.Int_FTP_Bytes_SentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInt_FTP_Bytes_ReceivedNull() {
                return this.IsNull(this.tableTCPIP_Traffic.Int_FTP_Bytes_ReceivedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInt_FTP_Bytes_ReceivedNull() {
                this[this.tableTCPIP_Traffic.Int_FTP_Bytes_ReceivedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTelnet_Bytes_SentNull() {
                return this.IsNull(this.tableTCPIP_Traffic.Telnet_Bytes_SentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTelnet_Bytes_SentNull() {
                this[this.tableTCPIP_Traffic.Telnet_Bytes_SentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTelnet_Bytes_ReceivedNull() {
                return this.IsNull(this.tableTCPIP_Traffic.Telnet_Bytes_ReceivedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTelnet_Bytes_ReceivedNull() {
                this[this.tableTCPIP_Traffic.Telnet_Bytes_ReceivedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTCP_Bytes_SentNull() {
                return this.IsNull(this.tableTCPIP_Traffic.TCP_Bytes_SentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTCP_Bytes_SentNull() {
                this[this.tableTCPIP_Traffic.TCP_Bytes_SentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTCP_Bytes_ReceivedNull() {
                return this.IsNull(this.tableTCPIP_Traffic.TCP_Bytes_ReceivedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTCP_Bytes_ReceivedNull() {
                this[this.tableTCPIP_Traffic.TCP_Bytes_ReceivedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUDP_Bytes_SentNull() {
                return this.IsNull(this.tableTCPIP_Traffic.UDP_Bytes_SentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUDP_Bytes_SentNull() {
                this[this.tableTCPIP_Traffic.UDP_Bytes_SentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUDP_Bytes_ReceivedNull() {
                return this.IsNull(this.tableTCPIP_Traffic.UDP_Bytes_ReceivedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUDP_Bytes_ReceivedNull() {
                this[this.tableTCPIP_Traffic.UDP_Bytes_ReceivedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIP_Bytes_SentNull() {
                return this.IsNull(this.tableTCPIP_Traffic.IP_Bytes_SentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIP_Bytes_SentNull() {
                this[this.tableTCPIP_Traffic.IP_Bytes_SentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIP_Bytes_ReceivedNull() {
                return this.IsNull(this.tableTCPIP_Traffic.IP_Bytes_ReceivedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIP_Bytes_ReceivedNull() {
                this[this.tableTCPIP_Traffic.IP_Bytes_ReceivedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArps_InNull() {
                return this.IsNull(this.tableTCPIP_Traffic.Arps_InColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArps_InNull() {
                this[this.tableTCPIP_Traffic.Arps_InColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArp_Requests_InboundNull() {
                return this.IsNull(this.tableTCPIP_Traffic.Arp_Requests_InboundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArp_Requests_InboundNull() {
                this[this.tableTCPIP_Traffic.Arp_Requests_InboundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArp_Requests_OutboundNull() {
                return this.IsNull(this.tableTCPIP_Traffic.Arp_Requests_OutboundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArp_Requests_OutboundNull() {
                this[this.tableTCPIP_Traffic.Arp_Requests_OutboundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsArp_Replies_OutboundNull() {
                return this.IsNull(this.tableTCPIP_Traffic.Arp_Replies_OutboundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetArp_Replies_OutboundNull() {
                this[this.tableTCPIP_Traffic.Arp_Replies_OutboundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIPNL3172_Blocks_ReceivedNull() {
                return this.IsNull(this.tableTCPIP_Traffic.IPNL3172_Blocks_ReceivedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIPNL3172_Blocks_ReceivedNull() {
                this[this.tableTCPIP_Traffic.IPNL3172_Blocks_ReceivedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIPNL3172_Blocks_TransmittedNull() {
                return this.IsNull(this.tableTCPIP_Traffic.IPNL3172_Blocks_TransmittedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIPNL3172_Blocks_TransmittedNull() {
                this[this.tableTCPIP_Traffic.IPNL3172_Blocks_TransmittedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIPNL3172_Datagrams_InboundNull() {
                return this.IsNull(this.tableTCPIP_Traffic.IPNL3172_Datagrams_InboundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIPNL3172_Datagrams_InboundNull() {
                this[this.tableTCPIP_Traffic.IPNL3172_Datagrams_InboundColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIPNL3172_Datagrams_OutboundNull() {
                return this.IsNull(this.tableTCPIP_Traffic.IPNL3172_Datagrams_OutboundColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIPNL3172_Datagrams_OutboundNull() {
                this[this.tableTCPIP_Traffic.IPNL3172_Datagrams_OutboundColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class VSE_StatsRow : global::System.Data.DataRow {
            
            private VSE_StatsDataTable tableVSE_Stats;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal VSE_StatsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVSE_Stats = ((VSE_StatsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Poll_Time {
                get {
                    return ((global::System.DateTime)(this[this.tableVSE_Stats.Poll_TimeColumn]));
                }
                set {
                    this[this.tableVSE_Stats.Poll_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Program_Checks {
                get {
                    try {
                        return ((double)(this[this.tableVSE_Stats.Program_ChecksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Program_Checks\' in table \'VSE_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVSE_Stats.Program_ChecksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Phase_Loads {
                get {
                    try {
                        return ((double)(this[this.tableVSE_Stats.Phase_LoadsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phase_Loads\' in table \'VSE_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVSE_Stats.Phase_LoadsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Subchannel_Starts {
                get {
                    try {
                        return ((double)(this[this.tableVSE_Stats.Subchannel_StartsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Subchannel_Starts\' in table \'VSE_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVSE_Stats.Subchannel_StartsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Supervisor_Interrupts {
                get {
                    try {
                        return ((double)(this[this.tableVSE_Stats.Supervisor_InterruptsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Supervisor_Interrupts\' in table \'VSE_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVSE_Stats.Supervisor_InterruptsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double IO_Interrupts {
                get {
                    try {
                        return ((double)(this[this.tableVSE_Stats.IO_InterruptsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IO_Interrupts\' in table \'VSE_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVSE_Stats.IO_InterruptsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double External_Interrupts {
                get {
                    try {
                        return ((double)(this[this.tableVSE_Stats.External_InterruptsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'External_Interrupts\' in table \'VSE_Stats\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVSE_Stats.External_InterruptsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProgram_ChecksNull() {
                return this.IsNull(this.tableVSE_Stats.Program_ChecksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProgram_ChecksNull() {
                this[this.tableVSE_Stats.Program_ChecksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhase_LoadsNull() {
                return this.IsNull(this.tableVSE_Stats.Phase_LoadsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhase_LoadsNull() {
                this[this.tableVSE_Stats.Phase_LoadsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSubchannel_StartsNull() {
                return this.IsNull(this.tableVSE_Stats.Subchannel_StartsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSubchannel_StartsNull() {
                this[this.tableVSE_Stats.Subchannel_StartsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSupervisor_InterruptsNull() {
                return this.IsNull(this.tableVSE_Stats.Supervisor_InterruptsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSupervisor_InterruptsNull() {
                this[this.tableVSE_Stats.Supervisor_InterruptsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIO_InterruptsNull() {
                return this.IsNull(this.tableVSE_Stats.IO_InterruptsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIO_InterruptsNull() {
                this[this.tableVSE_Stats.IO_InterruptsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExternal_InterruptsNull() {
                return this.IsNull(this.tableVSE_Stats.External_InterruptsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExternal_InterruptsNull() {
                this[this.tableVSE_Stats.External_InterruptsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class VSE_SummaryRow : global::System.Data.DataRow {
            
            private VSE_SummaryDataTable tableVSE_Summary;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal VSE_SummaryRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVSE_Summary = ((VSE_SummaryDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Poll_Time {
                get {
                    return ((global::System.DateTime)(this[this.tableVSE_Summary.Poll_TimeColumn]));
                }
                set {
                    this[this.tableVSE_Summary.Poll_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Last_IPL_Time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableVSE_Summary.Last_IPL_TimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Last_IPL_Time\' in table \'VSE_Summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVSE_Summary.Last_IPL_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Last_CpuReset_Time {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableVSE_Summary.Last_CpuReset_TimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Last_CpuReset_Time\' in table \'VSE_Summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVSE_Summary.Last_CpuReset_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Sec_since_IPL {
                get {
                    try {
                        return ((double)(this[this.tableVSE_Summary.Sec_since_IPLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sec_since_IPL\' in table \'VSE_Summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVSE_Summary.Sec_since_IPLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Sec_since_CpuReset {
                get {
                    try {
                        return ((double)(this[this.tableVSE_Summary.Sec_since_CpuResetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sec_since_CpuReset\' in table \'VSE_Summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVSE_Summary.Sec_since_CpuResetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Cpu_ID {
                get {
                    try {
                        return ((string)(this[this.tableVSE_Summary.Cpu_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Cpu_ID\' in table \'VSE_Summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVSE_Summary.Cpu_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Release {
                get {
                    try {
                        return ((string)(this[this.tableVSE_Summary.ReleaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Release\' in table \'VSE_Summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVSE_Summary.ReleaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Power_Sys_ID {
                get {
                    try {
                        return ((string)(this[this.tableVSE_Summary.Power_Sys_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Power_Sys_ID\' in table \'VSE_Summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVSE_Summary.Power_Sys_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Power_Node {
                get {
                    try {
                        return ((string)(this[this.tableVSE_Summary.Power_NodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Power_Node\' in table \'VSE_Summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVSE_Summary.Power_NodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool European_Dates {
                get {
                    try {
                        return ((bool)(this[this.tableVSE_Summary.European_DatesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'European_Dates\' in table \'VSE_Summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVSE_Summary.European_DatesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Time_Zone_Offset {
                get {
                    try {
                        return ((double)(this[this.tableVSE_Summary.Time_Zone_OffsetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Time_Zone_Offset\' in table \'VSE_Summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVSE_Summary.Time_Zone_OffsetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Nof_Cpus {
                get {
                    try {
                        return ((double)(this[this.tableVSE_Summary.Nof_CpusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nof_Cpus\' in table \'VSE_Summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVSE_Summary.Nof_CpusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Nof_Active_Cpus {
                get {
                    try {
                        return ((double)(this[this.tableVSE_Summary.Nof_Active_CpusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nof_Active_Cpus\' in table \'VSE_Summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVSE_Summary.Nof_Active_CpusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Nof_Quiesced_Cpus {
                get {
                    try {
                        return ((double)(this[this.tableVSE_Summary.Nof_Quiesced_CpusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nof_Quiesced_Cpus\' in table \'VSE_Summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVSE_Summary.Nof_Quiesced_CpusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MaxNof_Tasks {
                get {
                    try {
                        return ((double)(this[this.tableVSE_Summary.MaxNof_TasksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxNof_Tasks\' in table \'VSE_Summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVSE_Summary.MaxNof_TasksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Nof_Active_Tasks {
                get {
                    try {
                        return ((double)(this[this.tableVSE_Summary.Nof_Active_TasksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nof_Active_Tasks\' in table \'VSE_Summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVSE_Summary.Nof_Active_TasksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double MaxNof_Partitions {
                get {
                    try {
                        return ((double)(this[this.tableVSE_Summary.MaxNof_PartitionsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MaxNof_Partitions\' in table \'VSE_Summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVSE_Summary.MaxNof_PartitionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Nof_Allocated_Partitions {
                get {
                    try {
                        return ((double)(this[this.tableVSE_Summary.Nof_Allocated_PartitionsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nof_Allocated_Partitions\' in table \'VSE_Summary\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableVSE_Summary.Nof_Allocated_PartitionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Nof_TCPIP_Stacks {
                get {
                    try {
                        return ((double)(this[this.tableVSE_Summary.Nof_TCPIP_StacksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nof_TCPIP_Stacks\' in table \'VSE_Summary\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableVSE_Summary.Nof_TCPIP_StacksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLast_IPL_TimeNull() {
                return this.IsNull(this.tableVSE_Summary.Last_IPL_TimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLast_IPL_TimeNull() {
                this[this.tableVSE_Summary.Last_IPL_TimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLast_CpuReset_TimeNull() {
                return this.IsNull(this.tableVSE_Summary.Last_CpuReset_TimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLast_CpuReset_TimeNull() {
                this[this.tableVSE_Summary.Last_CpuReset_TimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSec_since_IPLNull() {
                return this.IsNull(this.tableVSE_Summary.Sec_since_IPLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSec_since_IPLNull() {
                this[this.tableVSE_Summary.Sec_since_IPLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSec_since_CpuResetNull() {
                return this.IsNull(this.tableVSE_Summary.Sec_since_CpuResetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSec_since_CpuResetNull() {
                this[this.tableVSE_Summary.Sec_since_CpuResetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCpu_IDNull() {
                return this.IsNull(this.tableVSE_Summary.Cpu_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCpu_IDNull() {
                this[this.tableVSE_Summary.Cpu_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReleaseNull() {
                return this.IsNull(this.tableVSE_Summary.ReleaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReleaseNull() {
                this[this.tableVSE_Summary.ReleaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPower_Sys_IDNull() {
                return this.IsNull(this.tableVSE_Summary.Power_Sys_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPower_Sys_IDNull() {
                this[this.tableVSE_Summary.Power_Sys_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPower_NodeNull() {
                return this.IsNull(this.tableVSE_Summary.Power_NodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPower_NodeNull() {
                this[this.tableVSE_Summary.Power_NodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEuropean_DatesNull() {
                return this.IsNull(this.tableVSE_Summary.European_DatesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEuropean_DatesNull() {
                this[this.tableVSE_Summary.European_DatesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTime_Zone_OffsetNull() {
                return this.IsNull(this.tableVSE_Summary.Time_Zone_OffsetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTime_Zone_OffsetNull() {
                this[this.tableVSE_Summary.Time_Zone_OffsetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNof_CpusNull() {
                return this.IsNull(this.tableVSE_Summary.Nof_CpusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNof_CpusNull() {
                this[this.tableVSE_Summary.Nof_CpusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNof_Active_CpusNull() {
                return this.IsNull(this.tableVSE_Summary.Nof_Active_CpusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNof_Active_CpusNull() {
                this[this.tableVSE_Summary.Nof_Active_CpusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNof_Quiesced_CpusNull() {
                return this.IsNull(this.tableVSE_Summary.Nof_Quiesced_CpusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNof_Quiesced_CpusNull() {
                this[this.tableVSE_Summary.Nof_Quiesced_CpusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxNof_TasksNull() {
                return this.IsNull(this.tableVSE_Summary.MaxNof_TasksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxNof_TasksNull() {
                this[this.tableVSE_Summary.MaxNof_TasksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNof_Active_TasksNull() {
                return this.IsNull(this.tableVSE_Summary.Nof_Active_TasksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNof_Active_TasksNull() {
                this[this.tableVSE_Summary.Nof_Active_TasksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxNof_PartitionsNull() {
                return this.IsNull(this.tableVSE_Summary.MaxNof_PartitionsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxNof_PartitionsNull() {
                this[this.tableVSE_Summary.MaxNof_PartitionsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNof_Allocated_PartitionsNull() {
                return this.IsNull(this.tableVSE_Summary.Nof_Allocated_PartitionsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNof_Allocated_PartitionsNull() {
                this[this.tableVSE_Summary.Nof_Allocated_PartitionsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNof_TCPIP_StacksNull() {
                return this.IsNull(this.tableVSE_Summary.Nof_TCPIP_StacksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNof_TCPIP_StacksNull() {
                this[this.tableVSE_Summary.Nof_TCPIP_StacksColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ForeignIP_AllRow : global::System.Data.DataRow {
            
            private ForeignIP_AllDataTable tableForeignIP_All;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ForeignIP_AllRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableForeignIP_All = ((ForeignIP_AllDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Poll_Time {
                get {
                    return ((global::System.DateTime)(this[this.tableForeignIP_All.Poll_TimeColumn]));
                }
                set {
                    this[this.tableForeignIP_All.Poll_TimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string IP_Address {
                get {
                    return ((string)(this[this.tableForeignIP_All.IP_AddressColumn]));
                }
                set {
                    this[this.tableForeignIP_All.IP_AddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Refuse_Flag {
                get {
                    try {
                        return ((bool)(this[this.tableForeignIP_All.Refuse_FlagColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Refuse_Flag\' in table \'ForeignIP_All\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_All.Refuse_FlagColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Misdirected_IP_Datagrams {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_All.Misdirected_IP_DatagramsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Misdirected_IP_Datagrams\' in table \'ForeignIP_All\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_All.Misdirected_IP_DatagramsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double NonIP_Datagrams {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_All.NonIP_DatagramsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NonIP_Datagrams\' in table \'ForeignIP_All\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_All.NonIP_DatagramsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ARP_Inbound_Datagrams {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_All.ARP_Inbound_DatagramsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ARP_Inbound_Datagrams\' in table \'ForeignIP_All\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_All.ARP_Inbound_DatagramsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ARP_Outbound_Datagrams {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_All.ARP_Outbound_DatagramsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ARP_Outbound_Datagrams\' in table \'ForeignIP_All\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableForeignIP_All.ARP_Outbound_DatagramsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ICMP_Inbound_Datagrams {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_All.ICMP_Inbound_DatagramsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ICMP_Inbound_Datagrams\' in table \'ForeignIP_All\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableForeignIP_All.ICMP_Inbound_DatagramsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ICMP_Outbound_Datagrams {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_All.ICMP_Outbound_DatagramsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ICMP_Outbound_Datagrams\' in table \'ForeignIP_All\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableForeignIP_All.ICMP_Outbound_DatagramsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double IP_Inbound_Datagrams {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_All.IP_Inbound_DatagramsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IP_Inbound_Datagrams\' in table \'ForeignIP_All\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_All.IP_Inbound_DatagramsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double IP_Outbound_Datagrams {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_All.IP_Outbound_DatagramsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IP_Outbound_Datagrams\' in table \'ForeignIP_All\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_All.IP_Outbound_DatagramsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TCP_Inbound_Datagrams {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_All.TCP_Inbound_DatagramsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TCP_Inbound_Datagrams\' in table \'ForeignIP_All\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_All.TCP_Inbound_DatagramsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TCP_Outbound_Datagrams {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_All.TCP_Outbound_DatagramsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TCP_Outbound_Datagrams\' in table \'ForeignIP_All\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableForeignIP_All.TCP_Outbound_DatagramsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double UDP_Inbound_Datagrams {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_All.UDP_Inbound_DatagramsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UDP_Inbound_Datagrams\' in table \'ForeignIP_All\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_All.UDP_Inbound_DatagramsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double UDP_Outbound_Datagrams {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_All.UDP_Outbound_DatagramsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UDP_Outbound_Datagrams\' in table \'ForeignIP_All\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableForeignIP_All.UDP_Outbound_DatagramsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Misdirected_IP_Bytes {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_All.Misdirected_IP_BytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Misdirected_IP_Bytes\' in table \'ForeignIP_All\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_All.Misdirected_IP_BytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double NonIP_Bytes {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_All.NonIP_BytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NonIP_Bytes\' in table \'ForeignIP_All\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_All.NonIP_BytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ARP_Inbound_Bytes {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_All.ARP_Inbound_BytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ARP_Inbound_Bytes\' in table \'ForeignIP_All\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_All.ARP_Inbound_BytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ARP_Outbound_Bytes {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_All.ARP_Outbound_BytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ARP_Outbound_Bytes\' in table \'ForeignIP_All\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_All.ARP_Outbound_BytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ICMP_Inbound_Bytes {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_All.ICMP_Inbound_BytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ICMP_Inbound_Bytes\' in table \'ForeignIP_All\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_All.ICMP_Inbound_BytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double ICMP_Outbound_Bytes {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_All.ICMP_Outbound_BytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ICMP_Outbound_Bytes\' in table \'ForeignIP_All\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_All.ICMP_Outbound_BytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double IP_Inbound_Bytes {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_All.IP_Inbound_BytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IP_Inbound_Bytes\' in table \'ForeignIP_All\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_All.IP_Inbound_BytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double IP_Outbound_Bytes {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_All.IP_Outbound_BytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IP_Outbound_Bytes\' in table \'ForeignIP_All\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_All.IP_Outbound_BytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TCP_Inbound_Bytes {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_All.TCP_Inbound_BytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TCP_Inbound_Bytes\' in table \'ForeignIP_All\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_All.TCP_Inbound_BytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double TCP_Outbound_Bytes {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_All.TCP_Outbound_BytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TCP_Outbound_Bytes\' in table \'ForeignIP_All\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_All.TCP_Outbound_BytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double UDP_Inbound_Bytes {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_All.UDP_Inbound_BytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UDP_Inbound_Bytes\' in table \'ForeignIP_All\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_All.UDP_Inbound_BytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double UDP_Outbound_Bytes {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_All.UDP_Outbound_BytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'UDP_Outbound_Bytes\' in table \'ForeignIP_All\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_All.UDP_Outbound_BytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Refused_Bytes {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_All.Refused_BytesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Refused_Bytes\' in table \'ForeignIP_All\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_All.Refused_BytesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Refused_Datagrams {
                get {
                    try {
                        return ((double)(this[this.tableForeignIP_All.Refused_DatagramsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Refused_Datagrams\' in table \'ForeignIP_All\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableForeignIP_All.Refused_DatagramsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRefuse_FlagNull() {
                return this.IsNull(this.tableForeignIP_All.Refuse_FlagColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRefuse_FlagNull() {
                this[this.tableForeignIP_All.Refuse_FlagColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMisdirected_IP_DatagramsNull() {
                return this.IsNull(this.tableForeignIP_All.Misdirected_IP_DatagramsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMisdirected_IP_DatagramsNull() {
                this[this.tableForeignIP_All.Misdirected_IP_DatagramsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNonIP_DatagramsNull() {
                return this.IsNull(this.tableForeignIP_All.NonIP_DatagramsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNonIP_DatagramsNull() {
                this[this.tableForeignIP_All.NonIP_DatagramsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsARP_Inbound_DatagramsNull() {
                return this.IsNull(this.tableForeignIP_All.ARP_Inbound_DatagramsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetARP_Inbound_DatagramsNull() {
                this[this.tableForeignIP_All.ARP_Inbound_DatagramsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsARP_Outbound_DatagramsNull() {
                return this.IsNull(this.tableForeignIP_All.ARP_Outbound_DatagramsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetARP_Outbound_DatagramsNull() {
                this[this.tableForeignIP_All.ARP_Outbound_DatagramsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsICMP_Inbound_DatagramsNull() {
                return this.IsNull(this.tableForeignIP_All.ICMP_Inbound_DatagramsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetICMP_Inbound_DatagramsNull() {
                this[this.tableForeignIP_All.ICMP_Inbound_DatagramsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsICMP_Outbound_DatagramsNull() {
                return this.IsNull(this.tableForeignIP_All.ICMP_Outbound_DatagramsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetICMP_Outbound_DatagramsNull() {
                this[this.tableForeignIP_All.ICMP_Outbound_DatagramsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIP_Inbound_DatagramsNull() {
                return this.IsNull(this.tableForeignIP_All.IP_Inbound_DatagramsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIP_Inbound_DatagramsNull() {
                this[this.tableForeignIP_All.IP_Inbound_DatagramsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIP_Outbound_DatagramsNull() {
                return this.IsNull(this.tableForeignIP_All.IP_Outbound_DatagramsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIP_Outbound_DatagramsNull() {
                this[this.tableForeignIP_All.IP_Outbound_DatagramsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTCP_Inbound_DatagramsNull() {
                return this.IsNull(this.tableForeignIP_All.TCP_Inbound_DatagramsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTCP_Inbound_DatagramsNull() {
                this[this.tableForeignIP_All.TCP_Inbound_DatagramsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTCP_Outbound_DatagramsNull() {
                return this.IsNull(this.tableForeignIP_All.TCP_Outbound_DatagramsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTCP_Outbound_DatagramsNull() {
                this[this.tableForeignIP_All.TCP_Outbound_DatagramsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUDP_Inbound_DatagramsNull() {
                return this.IsNull(this.tableForeignIP_All.UDP_Inbound_DatagramsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUDP_Inbound_DatagramsNull() {
                this[this.tableForeignIP_All.UDP_Inbound_DatagramsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUDP_Outbound_DatagramsNull() {
                return this.IsNull(this.tableForeignIP_All.UDP_Outbound_DatagramsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUDP_Outbound_DatagramsNull() {
                this[this.tableForeignIP_All.UDP_Outbound_DatagramsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMisdirected_IP_BytesNull() {
                return this.IsNull(this.tableForeignIP_All.Misdirected_IP_BytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMisdirected_IP_BytesNull() {
                this[this.tableForeignIP_All.Misdirected_IP_BytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNonIP_BytesNull() {
                return this.IsNull(this.tableForeignIP_All.NonIP_BytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNonIP_BytesNull() {
                this[this.tableForeignIP_All.NonIP_BytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsARP_Inbound_BytesNull() {
                return this.IsNull(this.tableForeignIP_All.ARP_Inbound_BytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetARP_Inbound_BytesNull() {
                this[this.tableForeignIP_All.ARP_Inbound_BytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsARP_Outbound_BytesNull() {
                return this.IsNull(this.tableForeignIP_All.ARP_Outbound_BytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetARP_Outbound_BytesNull() {
                this[this.tableForeignIP_All.ARP_Outbound_BytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsICMP_Inbound_BytesNull() {
                return this.IsNull(this.tableForeignIP_All.ICMP_Inbound_BytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetICMP_Inbound_BytesNull() {
                this[this.tableForeignIP_All.ICMP_Inbound_BytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsICMP_Outbound_BytesNull() {
                return this.IsNull(this.tableForeignIP_All.ICMP_Outbound_BytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetICMP_Outbound_BytesNull() {
                this[this.tableForeignIP_All.ICMP_Outbound_BytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIP_Inbound_BytesNull() {
                return this.IsNull(this.tableForeignIP_All.IP_Inbound_BytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIP_Inbound_BytesNull() {
                this[this.tableForeignIP_All.IP_Inbound_BytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIP_Outbound_BytesNull() {
                return this.IsNull(this.tableForeignIP_All.IP_Outbound_BytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIP_Outbound_BytesNull() {
                this[this.tableForeignIP_All.IP_Outbound_BytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTCP_Inbound_BytesNull() {
                return this.IsNull(this.tableForeignIP_All.TCP_Inbound_BytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTCP_Inbound_BytesNull() {
                this[this.tableForeignIP_All.TCP_Inbound_BytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTCP_Outbound_BytesNull() {
                return this.IsNull(this.tableForeignIP_All.TCP_Outbound_BytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTCP_Outbound_BytesNull() {
                this[this.tableForeignIP_All.TCP_Outbound_BytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUDP_Inbound_BytesNull() {
                return this.IsNull(this.tableForeignIP_All.UDP_Inbound_BytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUDP_Inbound_BytesNull() {
                this[this.tableForeignIP_All.UDP_Inbound_BytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUDP_Outbound_BytesNull() {
                return this.IsNull(this.tableForeignIP_All.UDP_Outbound_BytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUDP_Outbound_BytesNull() {
                this[this.tableForeignIP_All.UDP_Outbound_BytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRefused_BytesNull() {
                return this.IsNull(this.tableForeignIP_All.Refused_BytesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRefused_BytesNull() {
                this[this.tableForeignIP_All.Refused_BytesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRefused_DatagramsNull() {
                return this.IsNull(this.tableForeignIP_All.Refused_DatagramsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRefused_DatagramsNull() {
                this[this.tableForeignIP_All.Refused_DatagramsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Connection_Stats_by_LocalPortRow : global::System.Data.DataRow {
            
            private Connection_Stats_by_LocalPortDataTable tableConnection_Stats_by_LocalPort;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Connection_Stats_by_LocalPortRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableConnection_Stats_by_LocalPort = ((Connection_Stats_by_LocalPortDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Local_Port {
                get {
                    return ((double)(this[this.tableConnection_Stats_by_LocalPort.Local_PortColumn]));
                }
                set {
                    this[this.tableConnection_Stats_by_LocalPort.Local_PortColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Expr1 {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Stats_by_LocalPort.Expr1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expr1\' in table \'Connection_Stats_by_LocalPort\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Stats_by_LocalPort.Expr1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Expr2 {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Stats_by_LocalPort.Expr2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expr2\' in table \'Connection_Stats_by_LocalPort\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Stats_by_LocalPort.Expr2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Expr3 {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Stats_by_LocalPort.Expr3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expr3\' in table \'Connection_Stats_by_LocalPort\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Stats_by_LocalPort.Expr3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Expr4 {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Stats_by_LocalPort.Expr4Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expr4\' in table \'Connection_Stats_by_LocalPort\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Stats_by_LocalPort.Expr4Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Expr5 {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Stats_by_LocalPort.Expr5Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expr5\' in table \'Connection_Stats_by_LocalPort\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Stats_by_LocalPort.Expr5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Expr6 {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Stats_by_LocalPort.Expr6Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expr6\' in table \'Connection_Stats_by_LocalPort\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Stats_by_LocalPort.Expr6Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double Expr7 {
                get {
                    try {
                        return ((double)(this[this.tableConnection_Stats_by_LocalPort.Expr7Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Expr7\' in table \'Connection_Stats_by_LocalPort\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableConnection_Stats_by_LocalPort.Expr7Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExpr1Null() {
                return this.IsNull(this.tableConnection_Stats_by_LocalPort.Expr1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExpr1Null() {
                this[this.tableConnection_Stats_by_LocalPort.Expr1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExpr2Null() {
                return this.IsNull(this.tableConnection_Stats_by_LocalPort.Expr2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExpr2Null() {
                this[this.tableConnection_Stats_by_LocalPort.Expr2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExpr3Null() {
                return this.IsNull(this.tableConnection_Stats_by_LocalPort.Expr3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExpr3Null() {
                this[this.tableConnection_Stats_by_LocalPort.Expr3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExpr4Null() {
                return this.IsNull(this.tableConnection_Stats_by_LocalPort.Expr4Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExpr4Null() {
                this[this.tableConnection_Stats_by_LocalPort.Expr4Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExpr5Null() {
                return this.IsNull(this.tableConnection_Stats_by_LocalPort.Expr5Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExpr5Null() {
                this[this.tableConnection_Stats_by_LocalPort.Expr5Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExpr6Null() {
                return this.IsNull(this.tableConnection_Stats_by_LocalPort.Expr6Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExpr6Null() {
                this[this.tableConnection_Stats_by_LocalPort.Expr6Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExpr7Null() {
                return this.IsNull(this.tableConnection_Stats_by_LocalPort.Expr7Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExpr7Null() {
                this[this.tableConnection_Stats_by_LocalPort.Expr7Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Connection_BSDCRowChangeEvent : global::System.EventArgs {
            
            private Connection_BSDCRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Connection_BSDCRowChangeEvent(Connection_BSDCRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Connection_BSDCRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Connection_RecordsRowChangeEvent : global::System.EventArgs {
            
            private Connection_RecordsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Connection_RecordsRowChangeEvent(Connection_RecordsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Connection_RecordsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Connection_StatsRowChangeEvent : global::System.EventArgs {
            
            private Connection_StatsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Connection_StatsRowChangeEvent(Connection_StatsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Connection_StatsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class CPU_StatsRowChangeEvent : global::System.EventArgs {
            
            private CPU_StatsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CPU_StatsRowChangeEvent(CPU_StatsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CPU_StatsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ForeignIP_StatsRowChangeEvent : global::System.EventArgs {
            
            private ForeignIP_StatsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ForeignIP_StatsRowChangeEvent(ForeignIP_StatsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ForeignIP_StatsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class FTP_RecordsRowChangeEvent : global::System.EventArgs {
            
            private FTP_RecordsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FTP_RecordsRowChangeEvent(FTP_RecordsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public FTP_RecordsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class JobStep_RecordsRowChangeEvent : global::System.EventArgs {
            
            private JobStep_RecordsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JobStep_RecordsRowChangeEvent(JobStep_RecordsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public JobStep_RecordsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Link_AdapterRowChangeEvent : global::System.EventArgs {
            
            private Link_AdapterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Link_AdapterRowChangeEvent(Link_AdapterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Link_AdapterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Partition_Job_StepRowChangeEvent : global::System.EventArgs {
            
            private Partition_Job_StepRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Partition_Job_StepRowChangeEvent(Partition_Job_StepRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Partition_Job_StepRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SeeServer_SummaryRowChangeEvent : global::System.EventArgs {
            
            private SeeServer_SummaryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SeeServer_SummaryRowChangeEvent(SeeServer_SummaryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SeeServer_SummaryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Startup_RecordsRowChangeEvent : global::System.EventArgs {
            
            private Startup_RecordsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Startup_RecordsRowChangeEvent(Startup_RecordsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Startup_RecordsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TCPIP_ClientsRowChangeEvent : global::System.EventArgs {
            
            private TCPIP_ClientsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_ClientsRowChangeEvent(TCPIP_ClientsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_ClientsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TCPIP_DaemonsRowChangeEvent : global::System.EventArgs {
            
            private TCPIP_DaemonsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_DaemonsRowChangeEvent(TCPIP_DaemonsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_DaemonsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TCPIP_DispatcherRowChangeEvent : global::System.EventArgs {
            
            private TCPIP_DispatcherRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_DispatcherRowChangeEvent(TCPIP_DispatcherRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_DispatcherRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TCPIP_ErrorsRowChangeEvent : global::System.EventArgs {
            
            private TCPIP_ErrorsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_ErrorsRowChangeEvent(TCPIP_ErrorsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_ErrorsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TCPIP_MessagesRowChangeEvent : global::System.EventArgs {
            
            private TCPIP_MessagesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_MessagesRowChangeEvent(TCPIP_MessagesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_MessagesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TCPIP_OtherRowChangeEvent : global::System.EventArgs {
            
            private TCPIP_OtherRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_OtherRowChangeEvent(TCPIP_OtherRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_OtherRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TCPIP_SummaryRowChangeEvent : global::System.EventArgs {
            
            private TCPIP_SummaryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_SummaryRowChangeEvent(TCPIP_SummaryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_SummaryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TCPIP_TrafficRowChangeEvent : global::System.EventArgs {
            
            private TCPIP_TrafficRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_TrafficRowChangeEvent(TCPIP_TrafficRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TCPIP_TrafficRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class VSE_StatsRowChangeEvent : global::System.EventArgs {
            
            private VSE_StatsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VSE_StatsRowChangeEvent(VSE_StatsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VSE_StatsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class VSE_SummaryRowChangeEvent : global::System.EventArgs {
            
            private VSE_SummaryRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VSE_SummaryRowChangeEvent(VSE_SummaryRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VSE_SummaryRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ForeignIP_AllRowChangeEvent : global::System.EventArgs {
            
            private ForeignIP_AllRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ForeignIP_AllRowChangeEvent(ForeignIP_AllRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ForeignIP_AllRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Connection_Stats_by_LocalPortRowChangeEvent : global::System.EventArgs {
            
            private Connection_Stats_by_LocalPortRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Connection_Stats_by_LocalPortRowChangeEvent(Connection_Stats_by_LocalPortRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Connection_Stats_by_LocalPortRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace csi.see.classlib1.DataSets.VseDbDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Connection_BSDCTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Connection_BSDCTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Connection_BSDC";
            tableMapping.ColumnMappings.Add("Poll_Time", "Poll_Time");
            tableMapping.ColumnMappings.Add("Store_Clock", "Store_Clock");
            tableMapping.ColumnMappings.Add("CCBLOK_ID", "CCBLOK_ID");
            tableMapping.ColumnMappings.Add("Sock_Descriptor", "Sock_Descriptor");
            tableMapping.ColumnMappings.Add("Queue_Depth", "Queue_Depth");
            tableMapping.ColumnMappings.Add("Foreign_IP", "Foreign_IP");
            tableMapping.ColumnMappings.Add("Local_IP", "Local_IP");
            tableMapping.ColumnMappings.Add("Foreign_Port", "Foreign_Port");
            tableMapping.ColumnMappings.Add("Local_Port", "Local_Port");
            tableMapping.ColumnMappings.Add("Base_Sock_Addr", "Base_Sock_Addr");
            tableMapping.ColumnMappings.Add("CICS_Trans_ID", "CICS_Trans_ID");
            tableMapping.ColumnMappings.Add("CICS_Task", "CICS_Task");
            tableMapping.ColumnMappings.Add("Sock_Number", "Sock_Number");
            tableMapping.ColumnMappings.Add("Sock_Addr", "Sock_Addr");
            tableMapping.ColumnMappings.Add("Flag_1", "Flag_1");
            tableMapping.ColumnMappings.Add("Sock_Options", "Sock_Options");
            tableMapping.ColumnMappings.Add("Flag_2", "Flag_2");
            tableMapping.ColumnMappings.Add("Type", "Type");
            tableMapping.ColumnMappings.Add("PID", "PID");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Connection_BSDC] WHERE (([Poll_Time] = @Original_Poll_Time) AN" +
                "D ((@IsNull_Store_Clock = 1 AND [Store_Clock] IS NULL) OR ([Store_Clock] = @Orig" +
                "inal_Store_Clock)) AND ((@IsNull_CCBLOK_ID = 1 AND [CCBLOK_ID] IS NULL) OR ([CCB" +
                "LOK_ID] = @Original_CCBLOK_ID)) AND ((@IsNull_Sock_Descriptor = 1 AND [Sock_Desc" +
                "riptor] IS NULL) OR ([Sock_Descriptor] = @Original_Sock_Descriptor)) AND ((@IsNu" +
                "ll_Queue_Depth = 1 AND [Queue_Depth] IS NULL) OR ([Queue_Depth] = @Original_Queu" +
                "e_Depth)) AND ((@IsNull_Foreign_IP = 1 AND [Foreign_IP] IS NULL) OR ([Foreign_IP" +
                "] = @Original_Foreign_IP)) AND ((@IsNull_Local_IP = 1 AND [Local_IP] IS NULL) OR" +
                " ([Local_IP] = @Original_Local_IP)) AND ((@IsNull_Foreign_Port = 1 AND [Foreign_" +
                "Port] IS NULL) OR ([Foreign_Port] = @Original_Foreign_Port)) AND ((@IsNull_Local" +
                "_Port = 1 AND [Local_Port] IS NULL) OR ([Local_Port] = @Original_Local_Port)) AN" +
                "D ((@IsNull_Base_Sock_Addr = 1 AND [Base_Sock_Addr] IS NULL) OR ([Base_Sock_Addr" +
                "] = @Original_Base_Sock_Addr)) AND ((@IsNull_CICS_Trans_ID = 1 AND [CICS_Trans_I" +
                "D] IS NULL) OR ([CICS_Trans_ID] = @Original_CICS_Trans_ID)) AND ((@IsNull_CICS_T" +
                "ask = 1 AND [CICS_Task] IS NULL) OR ([CICS_Task] = @Original_CICS_Task)) AND ([S" +
                "ock_Number] = @Original_Sock_Number) AND ([Sock_Addr] = @Original_Sock_Addr) AND" +
                " ((@IsNull_Flag_1 = 1 AND [Flag_1] IS NULL) OR ([Flag_1] = @Original_Flag_1)) AN" +
                "D ((@IsNull_Sock_Options = 1 AND [Sock_Options] IS NULL) OR ([Sock_Options] = @O" +
                "riginal_Sock_Options)) AND ((@IsNull_Flag_2 = 1 AND [Flag_2] IS NULL) OR ([Flag_" +
                "2] = @Original_Flag_2)) AND ((@IsNull_Type = 1 AND [Type] IS NULL) OR ([Type] = " +
                "@Original_Type)) AND ((@IsNull_PID = 1 AND [PID] IS NULL) OR ([PID] = @Original_" +
                "PID)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Store_Clock", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Store_Clock", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Store_Clock", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Store_Clock", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CCBLOK_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CCBLOK_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CCBLOK_ID", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CCBLOK_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Sock_Descriptor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sock_Descriptor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sock_Descriptor", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sock_Descriptor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Queue_Depth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Queue_Depth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Queue_Depth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Queue_Depth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Foreign_IP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Foreign_IP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Foreign_IP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Foreign_IP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Local_IP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Local_IP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Local_IP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Local_IP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Foreign_Port", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Foreign_Port", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Foreign_Port", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Foreign_Port", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Local_Port", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Local_Port", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Local_Port", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Local_Port", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Base_Sock_Addr", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Base_Sock_Addr", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Base_Sock_Addr", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Base_Sock_Addr", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CICS_Trans_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CICS_Trans_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CICS_Trans_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CICS_Trans_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CICS_Task", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CICS_Task", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CICS_Task", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CICS_Task", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sock_Number", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sock_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sock_Addr", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sock_Addr", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Flag_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Flag_1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Flag_1", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Flag_1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Sock_Options", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sock_Options", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sock_Options", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sock_Options", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Flag_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Flag_2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Flag_2", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Flag_2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Type", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Connection_BSDC] ([Poll_Time], [Store_Clock], [CCBLOK_ID], [Sock_Descriptor], [Queue_Depth], [Foreign_IP], [Local_IP], [Foreign_Port], [Local_Port], [Base_Sock_Addr], [CICS_Trans_ID], [CICS_Task], [Sock_Number], [Sock_Addr], [Flag_1], [Sock_Options], [Flag_2], [Type], [PID]) VALUES (@Poll_Time, @Store_Clock, @CCBLOK_ID, @Sock_Descriptor, @Queue_Depth, @Foreign_IP, @Local_IP, @Foreign_Port, @Local_Port, @Base_Sock_Addr, @CICS_Trans_ID, @CICS_Task, @Sock_Number, @Sock_Addr, @Flag_1, @Sock_Options, @Flag_2, @Type, @PID);
SELECT Poll_Time, Store_Clock, CCBLOK_ID, Sock_Descriptor, Queue_Depth, Foreign_IP, Local_IP, Foreign_Port, Local_Port, Base_Sock_Addr, CICS_Trans_ID, CICS_Task, Sock_Number, Sock_Addr, Flag_1, Sock_Options, Flag_2, Type, PID FROM Connection_BSDC WHERE (Poll_Time = @Poll_Time) AND (Sock_Addr = @Sock_Addr) AND (Sock_Number = @Sock_Number)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Store_Clock", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Store_Clock", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CCBLOK_ID", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CCBLOK_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sock_Descriptor", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sock_Descriptor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Queue_Depth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Queue_Depth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Foreign_IP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Foreign_IP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Local_IP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Local_IP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Foreign_Port", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Foreign_Port", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Local_Port", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Local_Port", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Base_Sock_Addr", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Base_Sock_Addr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CICS_Trans_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CICS_Trans_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CICS_Task", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CICS_Task", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sock_Number", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sock_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sock_Addr", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sock_Addr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Flag_1", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Flag_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sock_Options", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sock_Options", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Flag_2", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Flag_2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Type", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Connection_BSDC] SET [Poll_Time] = @Poll_Time, [Store_Clock] = @Sto" +
                "re_Clock, [CCBLOK_ID] = @CCBLOK_ID, [Sock_Descriptor] = @Sock_Descriptor, [Queue" +
                "_Depth] = @Queue_Depth, [Foreign_IP] = @Foreign_IP, [Local_IP] = @Local_IP, [For" +
                "eign_Port] = @Foreign_Port, [Local_Port] = @Local_Port, [Base_Sock_Addr] = @Base" +
                "_Sock_Addr, [CICS_Trans_ID] = @CICS_Trans_ID, [CICS_Task] = @CICS_Task, [Sock_Nu" +
                "mber] = @Sock_Number, [Sock_Addr] = @Sock_Addr, [Flag_1] = @Flag_1, [Sock_Option" +
                "s] = @Sock_Options, [Flag_2] = @Flag_2, [Type] = @Type, [PID] = @PID WHERE (([Po" +
                "ll_Time] = @Original_Poll_Time) AND ((@IsNull_Store_Clock = 1 AND [Store_Clock] " +
                "IS NULL) OR ([Store_Clock] = @Original_Store_Clock)) AND ((@IsNull_CCBLOK_ID = 1" +
                " AND [CCBLOK_ID] IS NULL) OR ([CCBLOK_ID] = @Original_CCBLOK_ID)) AND ((@IsNull_" +
                "Sock_Descriptor = 1 AND [Sock_Descriptor] IS NULL) OR ([Sock_Descriptor] = @Orig" +
                "inal_Sock_Descriptor)) AND ((@IsNull_Queue_Depth = 1 AND [Queue_Depth] IS NULL) " +
                "OR ([Queue_Depth] = @Original_Queue_Depth)) AND ((@IsNull_Foreign_IP = 1 AND [Fo" +
                "reign_IP] IS NULL) OR ([Foreign_IP] = @Original_Foreign_IP)) AND ((@IsNull_Local" +
                "_IP = 1 AND [Local_IP] IS NULL) OR ([Local_IP] = @Original_Local_IP)) AND ((@IsN" +
                "ull_Foreign_Port = 1 AND [Foreign_Port] IS NULL) OR ([Foreign_Port] = @Original_" +
                "Foreign_Port)) AND ((@IsNull_Local_Port = 1 AND [Local_Port] IS NULL) OR ([Local" +
                "_Port] = @Original_Local_Port)) AND ((@IsNull_Base_Sock_Addr = 1 AND [Base_Sock_" +
                "Addr] IS NULL) OR ([Base_Sock_Addr] = @Original_Base_Sock_Addr)) AND ((@IsNull_C" +
                "ICS_Trans_ID = 1 AND [CICS_Trans_ID] IS NULL) OR ([CICS_Trans_ID] = @Original_CI" +
                "CS_Trans_ID)) AND ((@IsNull_CICS_Task = 1 AND [CICS_Task] IS NULL) OR ([CICS_Tas" +
                "k] = @Original_CICS_Task)) AND ([Sock_Number] = @Original_Sock_Number) AND ([Soc" +
                "k_Addr] = @Original_Sock_Addr) AND ((@IsNull_Flag_1 = 1 AND [Flag_1] IS NULL) OR" +
                " ([Flag_1] = @Original_Flag_1)) AND ((@IsNull_Sock_Options = 1 AND [Sock_Options" +
                "] IS NULL) OR ([Sock_Options] = @Original_Sock_Options)) AND ((@IsNull_Flag_2 = " +
                "1 AND [Flag_2] IS NULL) OR ([Flag_2] = @Original_Flag_2)) AND ((@IsNull_Type = 1" +
                " AND [Type] IS NULL) OR ([Type] = @Original_Type)) AND ((@IsNull_PID = 1 AND [PI" +
                "D] IS NULL) OR ([PID] = @Original_PID)));\r\nSELECT Poll_Time, Store_Clock, CCBLOK" +
                "_ID, Sock_Descriptor, Queue_Depth, Foreign_IP, Local_IP, Foreign_Port, Local_Por" +
                "t, Base_Sock_Addr, CICS_Trans_ID, CICS_Task, Sock_Number, Sock_Addr, Flag_1, Soc" +
                "k_Options, Flag_2, Type, PID FROM Connection_BSDC WHERE (Poll_Time = @Poll_Time)" +
                " AND (Sock_Addr = @Sock_Addr) AND (Sock_Number = @Sock_Number)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Store_Clock", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Store_Clock", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CCBLOK_ID", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CCBLOK_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sock_Descriptor", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sock_Descriptor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Queue_Depth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Queue_Depth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Foreign_IP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Foreign_IP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Local_IP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Local_IP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Foreign_Port", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Foreign_Port", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Local_Port", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Local_Port", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Base_Sock_Addr", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Base_Sock_Addr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CICS_Trans_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CICS_Trans_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CICS_Task", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CICS_Task", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sock_Number", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sock_Number", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sock_Addr", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sock_Addr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Flag_1", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Flag_1", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sock_Options", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sock_Options", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Flag_2", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Flag_2", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Type", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Store_Clock", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Store_Clock", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Store_Clock", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Store_Clock", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CCBLOK_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CCBLOK_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CCBLOK_ID", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CCBLOK_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Sock_Descriptor", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sock_Descriptor", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sock_Descriptor", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sock_Descriptor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Queue_Depth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Queue_Depth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Queue_Depth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Queue_Depth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Foreign_IP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Foreign_IP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Foreign_IP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Foreign_IP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Local_IP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Local_IP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Local_IP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Local_IP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Foreign_Port", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Foreign_Port", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Foreign_Port", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Foreign_Port", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Local_Port", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Local_Port", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Local_Port", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Local_Port", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Base_Sock_Addr", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Base_Sock_Addr", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Base_Sock_Addr", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Base_Sock_Addr", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CICS_Trans_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CICS_Trans_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CICS_Trans_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CICS_Trans_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CICS_Task", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CICS_Task", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CICS_Task", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CICS_Task", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sock_Number", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sock_Number", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sock_Addr", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sock_Addr", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Flag_1", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Flag_1", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Flag_1", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Flag_1", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Sock_Options", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sock_Options", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sock_Options", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sock_Options", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Flag_2", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Flag_2", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Flag_2", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Flag_2", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Type", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=DANSDELL\\SQLEXPRESS;Initial Catalog=VseDb;Integrated Security=True";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Poll_Time, Store_Clock, CCBLOK_ID, Sock_Descriptor, Queue_Depth, Foreign_I" +
                "P, Local_IP, Foreign_Port, Local_Port, Base_Sock_Addr, CICS_Trans_ID, CICS_Task," +
                " Sock_Number, Sock_Addr, Flag_1, Sock_Options, Flag_2, Type, PID FROM dbo.Connec" +
                "tion_BSDC";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT     Poll_Time, Store_Clock, CCBLOK_ID, Sock_Descriptor, Queue_Depth, Foreign_IP, Local_IP, Foreign_Port, Local_Port, Base_Sock_Addr, 
                      CICS_Trans_ID, CICS_Task, Sock_Number, Sock_Addr, Flag_1, Sock_Options, Flag_2, Type, PID
FROM         Connection_BSDC
WHERE     (Poll_Time = @pollTime)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pollTime", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(VseDbDataSet.Connection_BSDCDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual VseDbDataSet.Connection_BSDCDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            VseDbDataSet.Connection_BSDCDataTable dataTable = new VseDbDataSet.Connection_BSDCDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(VseDbDataSet.Connection_BSDCDataTable dataTable, System.DateTime pollTime) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(pollTime));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual VseDbDataSet.Connection_BSDCDataTable GetDataBy(System.DateTime pollTime) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(pollTime));
            VseDbDataSet.Connection_BSDCDataTable dataTable = new VseDbDataSet.Connection_BSDCDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet.Connection_BSDCDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Connection_BSDC");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    System.DateTime Original_Poll_Time, 
                    global::System.Nullable<global::System.DateTime> Original_Store_Clock, 
                    global::System.Nullable<double> Original_CCBLOK_ID, 
                    string Original_Sock_Descriptor, 
                    global::System.Nullable<double> Original_Queue_Depth, 
                    string Original_Foreign_IP, 
                    string Original_Local_IP, 
                    global::System.Nullable<double> Original_Foreign_Port, 
                    global::System.Nullable<double> Original_Local_Port, 
                    string Original_Base_Sock_Addr, 
                    string Original_CICS_Trans_ID, 
                    global::System.Nullable<double> Original_CICS_Task, 
                    double Original_Sock_Number, 
                    string Original_Sock_Addr, 
                    global::System.Nullable<byte> Original_Flag_1, 
                    global::System.Nullable<byte> Original_Sock_Options, 
                    global::System.Nullable<byte> Original_Flag_2, 
                    global::System.Nullable<byte> Original_Type, 
                    string Original_PID) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.DateTime)(Original_Poll_Time));
            if ((Original_Store_Clock.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_Store_Clock.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_CCBLOK_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((double)(Original_CCBLOK_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_Sock_Descriptor == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Sock_Descriptor));
            }
            if ((Original_Queue_Depth.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((double)(Original_Queue_Depth.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_Foreign_IP == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Foreign_IP));
            }
            if ((Original_Local_IP == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Local_IP));
            }
            if ((Original_Foreign_Port.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((double)(Original_Foreign_Port.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_Local_Port.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((double)(Original_Local_Port.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_Base_Sock_Addr == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_Base_Sock_Addr));
            }
            if ((Original_CICS_Trans_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_CICS_Trans_ID));
            }
            if ((Original_CICS_Task.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((double)(Original_CICS_Task.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[23].Value = ((double)(Original_Sock_Number));
            if ((Original_Sock_Addr == null)) {
                throw new global::System.ArgumentNullException("Original_Sock_Addr");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((string)(Original_Sock_Addr));
            }
            if ((Original_Flag_1.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((byte)(Original_Flag_1.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_Sock_Options.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((byte)(Original_Sock_Options.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_Flag_2.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((byte)(Original_Flag_2.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_Type.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((byte)(Original_Type.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_PID == null)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((string)(Original_PID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    System.DateTime Poll_Time, 
                    global::System.Nullable<global::System.DateTime> Store_Clock, 
                    global::System.Nullable<double> CCBLOK_ID, 
                    string Sock_Descriptor, 
                    global::System.Nullable<double> Queue_Depth, 
                    string Foreign_IP, 
                    string Local_IP, 
                    global::System.Nullable<double> Foreign_Port, 
                    global::System.Nullable<double> Local_Port, 
                    string Base_Sock_Addr, 
                    string CICS_Trans_ID, 
                    global::System.Nullable<double> CICS_Task, 
                    double Sock_Number, 
                    string Sock_Addr, 
                    global::System.Nullable<byte> Flag_1, 
                    global::System.Nullable<byte> Sock_Options, 
                    global::System.Nullable<byte> Flag_2, 
                    global::System.Nullable<byte> Type, 
                    string PID) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(Poll_Time));
            if ((Store_Clock.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(Store_Clock.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((CCBLOK_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((double)(CCBLOK_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Sock_Descriptor == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Sock_Descriptor));
            }
            if ((Queue_Depth.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(Queue_Depth.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Foreign_IP == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Foreign_IP));
            }
            if ((Local_IP == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Local_IP));
            }
            if ((Foreign_Port.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(Foreign_Port.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Local_Port.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(Local_Port.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Base_Sock_Addr == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Base_Sock_Addr));
            }
            if ((CICS_Trans_ID == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(CICS_Trans_ID));
            }
            if ((CICS_Task.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((double)(CICS_Task.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[12].Value = ((double)(Sock_Number));
            if ((Sock_Addr == null)) {
                throw new global::System.ArgumentNullException("Sock_Addr");
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(Sock_Addr));
            }
            if ((Flag_1.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((byte)(Flag_1.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Sock_Options.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((byte)(Sock_Options.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Flag_2.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((byte)(Flag_2.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Type.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((byte)(Type.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((PID == null)) {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = ((string)(PID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime Poll_Time, 
                    global::System.Nullable<global::System.DateTime> Store_Clock, 
                    global::System.Nullable<double> CCBLOK_ID, 
                    string Sock_Descriptor, 
                    global::System.Nullable<double> Queue_Depth, 
                    string Foreign_IP, 
                    string Local_IP, 
                    global::System.Nullable<double> Foreign_Port, 
                    global::System.Nullable<double> Local_Port, 
                    string Base_Sock_Addr, 
                    string CICS_Trans_ID, 
                    global::System.Nullable<double> CICS_Task, 
                    double Sock_Number, 
                    string Sock_Addr, 
                    global::System.Nullable<byte> Flag_1, 
                    global::System.Nullable<byte> Sock_Options, 
                    global::System.Nullable<byte> Flag_2, 
                    global::System.Nullable<byte> Type, 
                    string PID, 
                    System.DateTime Original_Poll_Time, 
                    global::System.Nullable<global::System.DateTime> Original_Store_Clock, 
                    global::System.Nullable<double> Original_CCBLOK_ID, 
                    string Original_Sock_Descriptor, 
                    global::System.Nullable<double> Original_Queue_Depth, 
                    string Original_Foreign_IP, 
                    string Original_Local_IP, 
                    global::System.Nullable<double> Original_Foreign_Port, 
                    global::System.Nullable<double> Original_Local_Port, 
                    string Original_Base_Sock_Addr, 
                    string Original_CICS_Trans_ID, 
                    global::System.Nullable<double> Original_CICS_Task, 
                    double Original_Sock_Number, 
                    string Original_Sock_Addr, 
                    global::System.Nullable<byte> Original_Flag_1, 
                    global::System.Nullable<byte> Original_Sock_Options, 
                    global::System.Nullable<byte> Original_Flag_2, 
                    global::System.Nullable<byte> Original_Type, 
                    string Original_PID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(Poll_Time));
            if ((Store_Clock.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(Store_Clock.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((CCBLOK_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(CCBLOK_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Sock_Descriptor == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Sock_Descriptor));
            }
            if ((Queue_Depth.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(Queue_Depth.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Foreign_IP == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Foreign_IP));
            }
            if ((Local_IP == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Local_IP));
            }
            if ((Foreign_Port.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(Foreign_Port.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Local_Port.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(Local_Port.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Base_Sock_Addr == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Base_Sock_Addr));
            }
            if ((CICS_Trans_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(CICS_Trans_ID));
            }
            if ((CICS_Task.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((double)(CICS_Task.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((double)(Sock_Number));
            if ((Sock_Addr == null)) {
                throw new global::System.ArgumentNullException("Sock_Addr");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Sock_Addr));
            }
            if ((Flag_1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((byte)(Flag_1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Sock_Options.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((byte)(Sock_Options.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Flag_2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((byte)(Flag_2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((byte)(Type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((PID == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(PID));
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(Original_Poll_Time));
            if ((Original_Store_Clock.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(Original_Store_Clock.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_CCBLOK_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((double)(Original_CCBLOK_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_Sock_Descriptor == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_Sock_Descriptor));
            }
            if ((Original_Queue_Depth.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((double)(Original_Queue_Depth.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_Foreign_IP == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_Foreign_IP));
            }
            if ((Original_Local_IP == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_Local_IP));
            }
            if ((Original_Foreign_Port.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((double)(Original_Foreign_Port.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Original_Local_Port.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((double)(Original_Local_Port.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_Base_Sock_Addr == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_Base_Sock_Addr));
            }
            if ((Original_CICS_Trans_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_CICS_Trans_ID));
            }
            if ((Original_CICS_Task.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((double)(Original_CICS_Task.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[42].Value = ((double)(Original_Sock_Number));
            if ((Original_Sock_Addr == null)) {
                throw new global::System.ArgumentNullException("Original_Sock_Addr");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((string)(Original_Sock_Addr));
            }
            if ((Original_Flag_1.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((byte)(Original_Flag_1.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_Sock_Options.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((byte)(Original_Sock_Options.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Original_Flag_2.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((byte)(Original_Flag_2.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_Type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((byte)(Original_Type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Original_PID == null)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((string)(Original_PID));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<global::System.DateTime> Store_Clock, 
                    global::System.Nullable<double> CCBLOK_ID, 
                    string Sock_Descriptor, 
                    global::System.Nullable<double> Queue_Depth, 
                    string Foreign_IP, 
                    string Local_IP, 
                    global::System.Nullable<double> Foreign_Port, 
                    global::System.Nullable<double> Local_Port, 
                    string Base_Sock_Addr, 
                    string CICS_Trans_ID, 
                    global::System.Nullable<double> CICS_Task, 
                    global::System.Nullable<byte> Flag_1, 
                    global::System.Nullable<byte> Sock_Options, 
                    global::System.Nullable<byte> Flag_2, 
                    global::System.Nullable<byte> Type, 
                    string PID, 
                    System.DateTime Original_Poll_Time, 
                    global::System.Nullable<global::System.DateTime> Original_Store_Clock, 
                    global::System.Nullable<double> Original_CCBLOK_ID, 
                    string Original_Sock_Descriptor, 
                    global::System.Nullable<double> Original_Queue_Depth, 
                    string Original_Foreign_IP, 
                    string Original_Local_IP, 
                    global::System.Nullable<double> Original_Foreign_Port, 
                    global::System.Nullable<double> Original_Local_Port, 
                    string Original_Base_Sock_Addr, 
                    string Original_CICS_Trans_ID, 
                    global::System.Nullable<double> Original_CICS_Task, 
                    double Original_Sock_Number, 
                    string Original_Sock_Addr, 
                    global::System.Nullable<byte> Original_Flag_1, 
                    global::System.Nullable<byte> Original_Sock_Options, 
                    global::System.Nullable<byte> Original_Flag_2, 
                    global::System.Nullable<byte> Original_Type, 
                    string Original_PID) {
            return this.Update(Original_Poll_Time, Store_Clock, CCBLOK_ID, Sock_Descriptor, Queue_Depth, Foreign_IP, Local_IP, Foreign_Port, Local_Port, Base_Sock_Addr, CICS_Trans_ID, CICS_Task, Original_Sock_Number, Original_Sock_Addr, Flag_1, Sock_Options, Flag_2, Type, PID, Original_Poll_Time, Original_Store_Clock, Original_CCBLOK_ID, Original_Sock_Descriptor, Original_Queue_Depth, Original_Foreign_IP, Original_Local_IP, Original_Foreign_Port, Original_Local_Port, Original_Base_Sock_Addr, Original_CICS_Trans_ID, Original_CICS_Task, Original_Sock_Number, Original_Sock_Addr, Original_Flag_1, Original_Sock_Options, Original_Flag_2, Original_Type, Original_PID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Connection_RecordsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Connection_RecordsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Connection_Records";
            tableMapping.ColumnMappings.Add("Record_ID", "Record_ID");
            tableMapping.ColumnMappings.Add("Conn_PID", "Conn_PID");
            tableMapping.ColumnMappings.Add("Local_Port", "Local_Port");
            tableMapping.ColumnMappings.Add("Foreign_Port", "Foreign_Port");
            tableMapping.ColumnMappings.Add("Foreign_IP", "Foreign_IP");
            tableMapping.ColumnMappings.Add("Conn_Start_Time", "Conn_Start_Time");
            tableMapping.ColumnMappings.Add("Conn_End_Time", "Conn_End_Time");
            tableMapping.ColumnMappings.Add("INT_EXT", "INT_EXT");
            tableMapping.ColumnMappings.Add("Conn_State", "Conn_State");
            tableMapping.ColumnMappings.Add("Conn_Protocol", "Conn_Protocol");
            tableMapping.ColumnMappings.Add("Highest_Depth", "Highest_Depth");
            tableMapping.ColumnMappings.Add("Max_Send_Window", "Max_Send_Window");
            tableMapping.ColumnMappings.Add("Max_Recv_Window", "Max_Recv_Window");
            tableMapping.ColumnMappings.Add("Recv_Window_Closed", "Recv_Window_Closed");
            tableMapping.ColumnMappings.Add("SWS_Count", "SWS_Count");
            tableMapping.ColumnMappings.Add("Inbound_Data", "Inbound_Data");
            tableMapping.ColumnMappings.Add("Inbound_Bytes", "Inbound_Bytes");
            tableMapping.ColumnMappings.Add("Inbound_Data_Dup", "Inbound_Data_Dup");
            tableMapping.ColumnMappings.Add("Inbound_Bytes_Dup", "Inbound_Bytes_Dup");
            tableMapping.ColumnMappings.Add("Inbound_Eff", "Inbound_Eff");
            tableMapping.ColumnMappings.Add("Outbound_Data", "Outbound_Data");
            tableMapping.ColumnMappings.Add("Outbound_Bytes", "Outbound_Bytes");
            tableMapping.ColumnMappings.Add("Outbound_Data_Retr", "Outbound_Data_Retr");
            tableMapping.ColumnMappings.Add("Outbound_Bytes_Retr", "Outbound_Bytes_Retr");
            tableMapping.ColumnMappings.Add("Outbound_Eff", "Outbound_Eff");
            tableMapping.ColumnMappings.Add("Recvs_Issued", "Recvs_Issued");
            tableMapping.ColumnMappings.Add("Sends_Issued", "Sends_Issued");
            tableMapping.ColumnMappings.Add("Retransmits", "Retransmits");
            tableMapping.ColumnMappings.Add("In_Retr_Mode", "In_Retr_Mode");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Connection_Records] WHERE (([Record_ID] = @Original_Record_ID)" +
                " AND ((@IsNull_Conn_PID = 1 AND [Conn_PID] IS NULL) OR ([Conn_PID] = @Original_C" +
                "onn_PID)) AND ([Local_Port] = @Original_Local_Port) AND ([Foreign_Port] = @Origi" +
                "nal_Foreign_Port) AND ([Foreign_IP] = @Original_Foreign_IP) AND ([Conn_Start_Tim" +
                "e] = @Original_Conn_Start_Time) AND ([Conn_End_Time] = @Original_Conn_End_Time) " +
                "AND ((@IsNull_INT_EXT = 1 AND [INT_EXT] IS NULL) OR ([INT_EXT] = @Original_INT_E" +
                "XT)) AND ((@IsNull_Conn_State = 1 AND [Conn_State] IS NULL) OR ([Conn_State] = @" +
                "Original_Conn_State)) AND ((@IsNull_Conn_Protocol = 1 AND [Conn_Protocol] IS NUL" +
                "L) OR ([Conn_Protocol] = @Original_Conn_Protocol)) AND ((@IsNull_Highest_Depth =" +
                " 1 AND [Highest_Depth] IS NULL) OR ([Highest_Depth] = @Original_Highest_Depth)) " +
                "AND ((@IsNull_Max_Send_Window = 1 AND [Max_Send_Window] IS NULL) OR ([Max_Send_W" +
                "indow] = @Original_Max_Send_Window)) AND ((@IsNull_Max_Recv_Window = 1 AND [Max_" +
                "Recv_Window] IS NULL) OR ([Max_Recv_Window] = @Original_Max_Recv_Window)) AND ((" +
                "@IsNull_Recv_Window_Closed = 1 AND [Recv_Window_Closed] IS NULL) OR ([Recv_Windo" +
                "w_Closed] = @Original_Recv_Window_Closed)) AND ((@IsNull_SWS_Count = 1 AND [SWS_" +
                "Count] IS NULL) OR ([SWS_Count] = @Original_SWS_Count)) AND ((@IsNull_Inbound_Da" +
                "ta = 1 AND [Inbound_Data] IS NULL) OR ([Inbound_Data] = @Original_Inbound_Data))" +
                " AND ((@IsNull_Inbound_Bytes = 1 AND [Inbound_Bytes] IS NULL) OR ([Inbound_Bytes" +
                "] = @Original_Inbound_Bytes)) AND ((@IsNull_Inbound_Data_Dup = 1 AND [Inbound_Da" +
                "ta_Dup] IS NULL) OR ([Inbound_Data_Dup] = @Original_Inbound_Data_Dup)) AND ((@Is" +
                "Null_Inbound_Bytes_Dup = 1 AND [Inbound_Bytes_Dup] IS NULL) OR ([Inbound_Bytes_D" +
                "up] = @Original_Inbound_Bytes_Dup)) AND ((@IsNull_Inbound_Eff = 1 AND [Inbound_E" +
                "ff] IS NULL) OR ([Inbound_Eff] = @Original_Inbound_Eff)) AND ((@IsNull_Outbound_" +
                "Data = 1 AND [Outbound_Data] IS NULL) OR ([Outbound_Data] = @Original_Outbound_D" +
                "ata)) AND ((@IsNull_Outbound_Bytes = 1 AND [Outbound_Bytes] IS NULL) OR ([Outbou" +
                "nd_Bytes] = @Original_Outbound_Bytes)) AND ((@IsNull_Outbound_Data_Retr = 1 AND " +
                "[Outbound_Data_Retr] IS NULL) OR ([Outbound_Data_Retr] = @Original_Outbound_Data" +
                "_Retr)) AND ((@IsNull_Outbound_Bytes_Retr = 1 AND [Outbound_Bytes_Retr] IS NULL)" +
                " OR ([Outbound_Bytes_Retr] = @Original_Outbound_Bytes_Retr)) AND ((@IsNull_Outbo" +
                "und_Eff = 1 AND [Outbound_Eff] IS NULL) OR ([Outbound_Eff] = @Original_Outbound_" +
                "Eff)) AND ((@IsNull_Recvs_Issued = 1 AND [Recvs_Issued] IS NULL) OR ([Recvs_Issu" +
                "ed] = @Original_Recvs_Issued)) AND ((@IsNull_Sends_Issued = 1 AND [Sends_Issued]" +
                " IS NULL) OR ([Sends_Issued] = @Original_Sends_Issued)) AND ((@IsNull_Retransmit" +
                "s = 1 AND [Retransmits] IS NULL) OR ([Retransmits] = @Original_Retransmits)) AND" +
                " ((@IsNull_In_Retr_Mode = 1 AND [In_Retr_Mode] IS NULL) OR ([In_Retr_Mode] = @Or" +
                "iginal_In_Retr_Mode)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Record_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Record_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Conn_PID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_PID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Conn_PID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_PID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Local_Port", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Local_Port", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Foreign_Port", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Foreign_Port", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Foreign_IP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Foreign_IP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Conn_Start_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_Start_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Conn_End_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_End_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_INT_EXT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INT_EXT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INT_EXT", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INT_EXT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Conn_State", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_State", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Conn_State", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_State", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Conn_Protocol", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_Protocol", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Conn_Protocol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_Protocol", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Highest_Depth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Highest_Depth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Highest_Depth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Highest_Depth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Max_Send_Window", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Send_Window", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Max_Send_Window", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Send_Window", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Max_Recv_Window", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Recv_Window", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Max_Recv_Window", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Recv_Window", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Recv_Window_Closed", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recv_Window_Closed", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Recv_Window_Closed", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recv_Window_Closed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SWS_Count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SWS_Count", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SWS_Count", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SWS_Count", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Inbound_Data", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Data", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Inbound_Data", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Data", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Inbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Inbound_Data_Dup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Data_Dup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Inbound_Data_Dup", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Data_Dup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Inbound_Bytes_Dup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Bytes_Dup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Inbound_Bytes_Dup", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Bytes_Dup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Inbound_Eff", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Eff", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Inbound_Eff", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Eff", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Outbound_Data", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Data", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Outbound_Data", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Data", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Outbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Outbound_Data_Retr", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Data_Retr", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Outbound_Data_Retr", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Data_Retr", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Outbound_Bytes_Retr", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Bytes_Retr", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Outbound_Bytes_Retr", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Bytes_Retr", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Outbound_Eff", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Eff", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Outbound_Eff", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Eff", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Recvs_Issued", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recvs_Issued", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Recvs_Issued", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recvs_Issued", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Sends_Issued", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sends_Issued", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sends_Issued", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sends_Issued", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Retransmits", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Retransmits", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Retransmits", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Retransmits", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_In_Retr_Mode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "In_Retr_Mode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_In_Retr_Mode", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "In_Retr_Mode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Connection_Records] ([Conn_PID], [Local_Port], [Foreign_Port]," +
                " [Foreign_IP], [Conn_Start_Time], [Conn_End_Time], [INT_EXT], [Conn_State], [Con" +
                "n_Protocol], [Highest_Depth], [Max_Send_Window], [Max_Recv_Window], [Recv_Window" +
                "_Closed], [SWS_Count], [Inbound_Data], [Inbound_Bytes], [Inbound_Data_Dup], [Inb" +
                "ound_Bytes_Dup], [Inbound_Eff], [Outbound_Data], [Outbound_Bytes], [Outbound_Dat" +
                "a_Retr], [Outbound_Bytes_Retr], [Outbound_Eff], [Recvs_Issued], [Sends_Issued], " +
                "[Retransmits], [In_Retr_Mode]) VALUES (@Conn_PID, @Local_Port, @Foreign_Port, @F" +
                "oreign_IP, @Conn_Start_Time, @Conn_End_Time, @INT_EXT, @Conn_State, @Conn_Protoc" +
                "ol, @Highest_Depth, @Max_Send_Window, @Max_Recv_Window, @Recv_Window_Closed, @SW" +
                "S_Count, @Inbound_Data, @Inbound_Bytes, @Inbound_Data_Dup, @Inbound_Bytes_Dup, @" +
                "Inbound_Eff, @Outbound_Data, @Outbound_Bytes, @Outbound_Data_Retr, @Outbound_Byt" +
                "es_Retr, @Outbound_Eff, @Recvs_Issued, @Sends_Issued, @Retransmits, @In_Retr_Mod" +
                "e);\r\nSELECT Record_ID, Conn_PID, Local_Port, Foreign_Port, Foreign_IP, Conn_Star" +
                "t_Time, Conn_End_Time, INT_EXT, Conn_State, Conn_Protocol, Highest_Depth, Max_Se" +
                "nd_Window, Max_Recv_Window, Recv_Window_Closed, SWS_Count, Inbound_Data, Inbound" +
                "_Bytes, Inbound_Data_Dup, Inbound_Bytes_Dup, Inbound_Eff, Outbound_Data, Outboun" +
                "d_Bytes, Outbound_Data_Retr, Outbound_Bytes_Retr, Outbound_Eff, Recvs_Issued, Se" +
                "nds_Issued, Retransmits, In_Retr_Mode FROM Connection_Records WHERE (Conn_End_Ti" +
                "me = @Conn_End_Time) AND (Conn_Start_Time = @Conn_Start_Time) AND (Foreign_IP = " +
                "@Foreign_IP) AND (Foreign_Port = @Foreign_Port) AND (Local_Port = @Local_Port) A" +
                "ND (Record_ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Conn_PID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_PID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Local_Port", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Local_Port", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Foreign_Port", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Foreign_Port", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Foreign_IP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Foreign_IP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Conn_Start_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_Start_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Conn_End_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_End_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INT_EXT", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INT_EXT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Conn_State", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_State", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Conn_Protocol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_Protocol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Highest_Depth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Highest_Depth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Max_Send_Window", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Send_Window", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Max_Recv_Window", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Recv_Window", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Recv_Window_Closed", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recv_Window_Closed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SWS_Count", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SWS_Count", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inbound_Data", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Data", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inbound_Data_Dup", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Data_Dup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inbound_Bytes_Dup", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Bytes_Dup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inbound_Eff", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Eff", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Outbound_Data", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Data", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Outbound_Data_Retr", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Data_Retr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Outbound_Bytes_Retr", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Bytes_Retr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Outbound_Eff", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Eff", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Recvs_Issued", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recvs_Issued", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sends_Issued", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sends_Issued", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Retransmits", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Retransmits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@In_Retr_Mode", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "In_Retr_Mode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Connection_Records] SET [Conn_PID] = @Conn_PID, [Local_Port] = @Loc" +
                "al_Port, [Foreign_Port] = @Foreign_Port, [Foreign_IP] = @Foreign_IP, [Conn_Start" +
                "_Time] = @Conn_Start_Time, [Conn_End_Time] = @Conn_End_Time, [INT_EXT] = @INT_EX" +
                "T, [Conn_State] = @Conn_State, [Conn_Protocol] = @Conn_Protocol, [Highest_Depth]" +
                " = @Highest_Depth, [Max_Send_Window] = @Max_Send_Window, [Max_Recv_Window] = @Ma" +
                "x_Recv_Window, [Recv_Window_Closed] = @Recv_Window_Closed, [SWS_Count] = @SWS_Co" +
                "unt, [Inbound_Data] = @Inbound_Data, [Inbound_Bytes] = @Inbound_Bytes, [Inbound_" +
                "Data_Dup] = @Inbound_Data_Dup, [Inbound_Bytes_Dup] = @Inbound_Bytes_Dup, [Inboun" +
                "d_Eff] = @Inbound_Eff, [Outbound_Data] = @Outbound_Data, [Outbound_Bytes] = @Out" +
                "bound_Bytes, [Outbound_Data_Retr] = @Outbound_Data_Retr, [Outbound_Bytes_Retr] =" +
                " @Outbound_Bytes_Retr, [Outbound_Eff] = @Outbound_Eff, [Recvs_Issued] = @Recvs_I" +
                "ssued, [Sends_Issued] = @Sends_Issued, [Retransmits] = @Retransmits, [In_Retr_Mo" +
                "de] = @In_Retr_Mode WHERE (([Record_ID] = @Original_Record_ID) AND ((@IsNull_Con" +
                "n_PID = 1 AND [Conn_PID] IS NULL) OR ([Conn_PID] = @Original_Conn_PID)) AND ([Lo" +
                "cal_Port] = @Original_Local_Port) AND ([Foreign_Port] = @Original_Foreign_Port) " +
                "AND ([Foreign_IP] = @Original_Foreign_IP) AND ([Conn_Start_Time] = @Original_Con" +
                "n_Start_Time) AND ([Conn_End_Time] = @Original_Conn_End_Time) AND ((@IsNull_INT_" +
                "EXT = 1 AND [INT_EXT] IS NULL) OR ([INT_EXT] = @Original_INT_EXT)) AND ((@IsNull" +
                "_Conn_State = 1 AND [Conn_State] IS NULL) OR ([Conn_State] = @Original_Conn_Stat" +
                "e)) AND ((@IsNull_Conn_Protocol = 1 AND [Conn_Protocol] IS NULL) OR ([Conn_Proto" +
                "col] = @Original_Conn_Protocol)) AND ((@IsNull_Highest_Depth = 1 AND [Highest_De" +
                "pth] IS NULL) OR ([Highest_Depth] = @Original_Highest_Depth)) AND ((@IsNull_Max_" +
                "Send_Window = 1 AND [Max_Send_Window] IS NULL) OR ([Max_Send_Window] = @Original" +
                "_Max_Send_Window)) AND ((@IsNull_Max_Recv_Window = 1 AND [Max_Recv_Window] IS NU" +
                "LL) OR ([Max_Recv_Window] = @Original_Max_Recv_Window)) AND ((@IsNull_Recv_Windo" +
                "w_Closed = 1 AND [Recv_Window_Closed] IS NULL) OR ([Recv_Window_Closed] = @Origi" +
                "nal_Recv_Window_Closed)) AND ((@IsNull_SWS_Count = 1 AND [SWS_Count] IS NULL) OR" +
                " ([SWS_Count] = @Original_SWS_Count)) AND ((@IsNull_Inbound_Data = 1 AND [Inboun" +
                "d_Data] IS NULL) OR ([Inbound_Data] = @Original_Inbound_Data)) AND ((@IsNull_Inb" +
                "ound_Bytes = 1 AND [Inbound_Bytes] IS NULL) OR ([Inbound_Bytes] = @Original_Inbo" +
                "und_Bytes)) AND ((@IsNull_Inbound_Data_Dup = 1 AND [Inbound_Data_Dup] IS NULL) O" +
                "R ([Inbound_Data_Dup] = @Original_Inbound_Data_Dup)) AND ((@IsNull_Inbound_Bytes" +
                "_Dup = 1 AND [Inbound_Bytes_Dup] IS NULL) OR ([Inbound_Bytes_Dup] = @Original_In" +
                "bound_Bytes_Dup)) AND ((@IsNull_Inbound_Eff = 1 AND [Inbound_Eff] IS NULL) OR ([" +
                "Inbound_Eff] = @Original_Inbound_Eff)) AND ((@IsNull_Outbound_Data = 1 AND [Outb" +
                "ound_Data] IS NULL) OR ([Outbound_Data] = @Original_Outbound_Data)) AND ((@IsNul" +
                "l_Outbound_Bytes = 1 AND [Outbound_Bytes] IS NULL) OR ([Outbound_Bytes] = @Origi" +
                "nal_Outbound_Bytes)) AND ((@IsNull_Outbound_Data_Retr = 1 AND [Outbound_Data_Ret" +
                "r] IS NULL) OR ([Outbound_Data_Retr] = @Original_Outbound_Data_Retr)) AND ((@IsN" +
                "ull_Outbound_Bytes_Retr = 1 AND [Outbound_Bytes_Retr] IS NULL) OR ([Outbound_Byt" +
                "es_Retr] = @Original_Outbound_Bytes_Retr)) AND ((@IsNull_Outbound_Eff = 1 AND [O" +
                "utbound_Eff] IS NULL) OR ([Outbound_Eff] = @Original_Outbound_Eff)) AND ((@IsNul" +
                "l_Recvs_Issued = 1 AND [Recvs_Issued] IS NULL) OR ([Recvs_Issued] = @Original_Re" +
                "cvs_Issued)) AND ((@IsNull_Sends_Issued = 1 AND [Sends_Issued] IS NULL) OR ([Sen" +
                "ds_Issued] = @Original_Sends_Issued)) AND ((@IsNull_Retransmits = 1 AND [Retrans" +
                "mits] IS NULL) OR ([Retransmits] = @Original_Retransmits)) AND ((@IsNull_In_Retr" +
                "_Mode = 1 AND [In_Retr_Mode] IS NULL) OR ([In_Retr_Mode] = @Original_In_Retr_Mod" +
                "e)));\r\nSELECT Record_ID, Conn_PID, Local_Port, Foreign_Port, Foreign_IP, Conn_St" +
                "art_Time, Conn_End_Time, INT_EXT, Conn_State, Conn_Protocol, Highest_Depth, Max_" +
                "Send_Window, Max_Recv_Window, Recv_Window_Closed, SWS_Count, Inbound_Data, Inbou" +
                "nd_Bytes, Inbound_Data_Dup, Inbound_Bytes_Dup, Inbound_Eff, Outbound_Data, Outbo" +
                "und_Bytes, Outbound_Data_Retr, Outbound_Bytes_Retr, Outbound_Eff, Recvs_Issued, " +
                "Sends_Issued, Retransmits, In_Retr_Mode FROM Connection_Records WHERE (Conn_End_" +
                "Time = @Conn_End_Time) AND (Conn_Start_Time = @Conn_Start_Time) AND (Foreign_IP " +
                "= @Foreign_IP) AND (Foreign_Port = @Foreign_Port) AND (Local_Port = @Local_Port)" +
                " AND (Record_ID = @Record_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Conn_PID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_PID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Local_Port", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Local_Port", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Foreign_Port", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Foreign_Port", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Foreign_IP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Foreign_IP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Conn_Start_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_Start_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Conn_End_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_End_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INT_EXT", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INT_EXT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Conn_State", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_State", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Conn_Protocol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_Protocol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Highest_Depth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Highest_Depth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Max_Send_Window", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Send_Window", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Max_Recv_Window", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Recv_Window", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Recv_Window_Closed", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recv_Window_Closed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SWS_Count", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SWS_Count", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inbound_Data", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Data", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inbound_Data_Dup", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Data_Dup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inbound_Bytes_Dup", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Bytes_Dup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inbound_Eff", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Eff", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Outbound_Data", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Data", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Outbound_Data_Retr", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Data_Retr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Outbound_Bytes_Retr", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Bytes_Retr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Outbound_Eff", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Eff", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Recvs_Issued", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recvs_Issued", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sends_Issued", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sends_Issued", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Retransmits", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Retransmits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@In_Retr_Mode", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "In_Retr_Mode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Record_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Record_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Conn_PID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_PID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Conn_PID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_PID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Local_Port", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Local_Port", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Foreign_Port", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Foreign_Port", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Foreign_IP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Foreign_IP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Conn_Start_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_Start_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Conn_End_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_End_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_INT_EXT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INT_EXT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INT_EXT", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INT_EXT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Conn_State", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_State", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Conn_State", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_State", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Conn_Protocol", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_Protocol", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Conn_Protocol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_Protocol", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Highest_Depth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Highest_Depth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Highest_Depth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Highest_Depth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Max_Send_Window", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Send_Window", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Max_Send_Window", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Send_Window", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Max_Recv_Window", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Recv_Window", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Max_Recv_Window", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Recv_Window", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Recv_Window_Closed", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recv_Window_Closed", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Recv_Window_Closed", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recv_Window_Closed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SWS_Count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SWS_Count", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SWS_Count", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SWS_Count", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Inbound_Data", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Data", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Inbound_Data", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Data", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Inbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Inbound_Data_Dup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Data_Dup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Inbound_Data_Dup", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Data_Dup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Inbound_Bytes_Dup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Bytes_Dup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Inbound_Bytes_Dup", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Bytes_Dup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Inbound_Eff", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Eff", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Inbound_Eff", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Eff", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Outbound_Data", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Data", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Outbound_Data", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Data", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Outbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Outbound_Data_Retr", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Data_Retr", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Outbound_Data_Retr", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Data_Retr", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Outbound_Bytes_Retr", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Bytes_Retr", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Outbound_Bytes_Retr", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Bytes_Retr", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Outbound_Eff", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Eff", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Outbound_Eff", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Eff", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Recvs_Issued", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recvs_Issued", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Recvs_Issued", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recvs_Issued", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Sends_Issued", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sends_Issued", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sends_Issued", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sends_Issued", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Retransmits", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Retransmits", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Retransmits", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Retransmits", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_In_Retr_Mode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "In_Retr_Mode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_In_Retr_Mode", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "In_Retr_Mode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Record_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Record_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=DANSDELL\\SQLEXPRESS;Initial Catalog=VseDb;Integrated Security=True";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Record_ID, Conn_PID, Local_Port, Foreign_Port, Foreign_IP, Conn_Start_Time, Conn_End_Time, INT_EXT, Conn_State, Conn_Protocol, Highest_Depth, Max_Send_Window, Max_Recv_Window, Recv_Window_Closed, SWS_Count, Inbound_Data, Inbound_Bytes, Inbound_Data_Dup, Inbound_Bytes_Dup, Inbound_Eff, Outbound_Data, Outbound_Bytes, Outbound_Data_Retr, Outbound_Bytes_Retr, Outbound_Eff, Recvs_Issued, Sends_Issued, Retransmits, In_Retr_Mode FROM dbo.Connection_Records";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(VseDbDataSet.Connection_RecordsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual VseDbDataSet.Connection_RecordsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            VseDbDataSet.Connection_RecordsDataTable dataTable = new VseDbDataSet.Connection_RecordsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet.Connection_RecordsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Connection_Records");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_Record_ID, 
                    string Original_Conn_PID, 
                    double Original_Local_Port, 
                    double Original_Foreign_Port, 
                    string Original_Foreign_IP, 
                    System.DateTime Original_Conn_Start_Time, 
                    System.DateTime Original_Conn_End_Time, 
                    string Original_INT_EXT, 
                    string Original_Conn_State, 
                    string Original_Conn_Protocol, 
                    global::System.Nullable<double> Original_Highest_Depth, 
                    global::System.Nullable<double> Original_Max_Send_Window, 
                    global::System.Nullable<double> Original_Max_Recv_Window, 
                    global::System.Nullable<double> Original_Recv_Window_Closed, 
                    global::System.Nullable<double> Original_SWS_Count, 
                    global::System.Nullable<double> Original_Inbound_Data, 
                    global::System.Nullable<double> Original_Inbound_Bytes, 
                    global::System.Nullable<double> Original_Inbound_Data_Dup, 
                    global::System.Nullable<double> Original_Inbound_Bytes_Dup, 
                    global::System.Nullable<double> Original_Inbound_Eff, 
                    global::System.Nullable<double> Original_Outbound_Data, 
                    global::System.Nullable<double> Original_Outbound_Bytes, 
                    global::System.Nullable<double> Original_Outbound_Data_Retr, 
                    global::System.Nullable<double> Original_Outbound_Bytes_Retr, 
                    global::System.Nullable<double> Original_Outbound_Eff, 
                    global::System.Nullable<double> Original_Recvs_Issued, 
                    global::System.Nullable<double> Original_Sends_Issued, 
                    global::System.Nullable<double> Original_Retransmits, 
                    global::System.Nullable<double> Original_In_Retr_Mode) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Record_ID));
            if ((Original_Conn_PID == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Conn_PID));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((double)(Original_Local_Port));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((double)(Original_Foreign_Port));
            if ((Original_Foreign_IP == null)) {
                throw new global::System.ArgumentNullException("Original_Foreign_IP");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_Foreign_IP));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_Conn_Start_Time));
            this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_Conn_End_Time));
            if ((Original_INT_EXT == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_INT_EXT));
            }
            if ((Original_Conn_State == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_Conn_State));
            }
            if ((Original_Conn_Protocol == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_Conn_Protocol));
            }
            if ((Original_Highest_Depth.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((double)(Original_Highest_Depth.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_Max_Send_Window.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((double)(Original_Max_Send_Window.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_Max_Recv_Window.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((double)(Original_Max_Recv_Window.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_Recv_Window_Closed.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((double)(Original_Recv_Window_Closed.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_SWS_Count.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((double)(Original_SWS_Count.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_Inbound_Data.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((double)(Original_Inbound_Data.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_Inbound_Bytes.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((double)(Original_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_Inbound_Data_Dup.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((double)(Original_Inbound_Data_Dup.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_Inbound_Bytes_Dup.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((double)(Original_Inbound_Bytes_Dup.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_Inbound_Eff.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((double)(Original_Inbound_Eff.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Original_Outbound_Data.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((double)(Original_Outbound_Data.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_Outbound_Bytes.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[37].Value = ((double)(Original_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Original_Outbound_Data_Retr.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[39].Value = ((double)(Original_Outbound_Data_Retr.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Original_Outbound_Bytes_Retr.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[41].Value = ((double)(Original_Outbound_Bytes_Retr.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_Outbound_Eff.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[43].Value = ((double)(Original_Outbound_Eff.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_Recvs_Issued.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[45].Value = ((double)(Original_Recvs_Issued.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_Sends_Issued.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[47].Value = ((double)(Original_Sends_Issued.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Original_Retransmits.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[49].Value = ((double)(Original_Retransmits.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_In_Retr_Mode.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[51].Value = ((double)(Original_In_Retr_Mode.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string Conn_PID, 
                    double Local_Port, 
                    double Foreign_Port, 
                    string Foreign_IP, 
                    System.DateTime Conn_Start_Time, 
                    System.DateTime Conn_End_Time, 
                    string INT_EXT, 
                    string Conn_State, 
                    string Conn_Protocol, 
                    global::System.Nullable<double> Highest_Depth, 
                    global::System.Nullable<double> Max_Send_Window, 
                    global::System.Nullable<double> Max_Recv_Window, 
                    global::System.Nullable<double> Recv_Window_Closed, 
                    global::System.Nullable<double> SWS_Count, 
                    global::System.Nullable<double> Inbound_Data, 
                    global::System.Nullable<double> Inbound_Bytes, 
                    global::System.Nullable<double> Inbound_Data_Dup, 
                    global::System.Nullable<double> Inbound_Bytes_Dup, 
                    global::System.Nullable<double> Inbound_Eff, 
                    global::System.Nullable<double> Outbound_Data, 
                    global::System.Nullable<double> Outbound_Bytes, 
                    global::System.Nullable<double> Outbound_Data_Retr, 
                    global::System.Nullable<double> Outbound_Bytes_Retr, 
                    global::System.Nullable<double> Outbound_Eff, 
                    global::System.Nullable<double> Recvs_Issued, 
                    global::System.Nullable<double> Sends_Issued, 
                    global::System.Nullable<double> Retransmits, 
                    global::System.Nullable<double> In_Retr_Mode) {
            if ((Conn_PID == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Conn_PID));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((double)(Local_Port));
            this.Adapter.InsertCommand.Parameters[2].Value = ((double)(Foreign_Port));
            if ((Foreign_IP == null)) {
                throw new global::System.ArgumentNullException("Foreign_IP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Foreign_IP));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(Conn_Start_Time));
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(Conn_End_Time));
            if ((INT_EXT == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(INT_EXT));
            }
            if ((Conn_State == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Conn_State));
            }
            if ((Conn_Protocol == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Conn_Protocol));
            }
            if ((Highest_Depth.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((double)(Highest_Depth.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Max_Send_Window.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((double)(Max_Send_Window.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Max_Recv_Window.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((double)(Max_Recv_Window.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Recv_Window_Closed.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((double)(Recv_Window_Closed.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((SWS_Count.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((double)(SWS_Count.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Inbound_Data.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((double)(Inbound_Data.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Inbound_Bytes.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((double)(Inbound_Bytes.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Inbound_Data_Dup.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((double)(Inbound_Data_Dup.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Inbound_Bytes_Dup.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((double)(Inbound_Bytes_Dup.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Inbound_Eff.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((double)(Inbound_Eff.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Outbound_Data.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((double)(Outbound_Data.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Outbound_Bytes.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((double)(Outbound_Bytes.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Outbound_Data_Retr.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((double)(Outbound_Data_Retr.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Outbound_Bytes_Retr.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((double)(Outbound_Bytes_Retr.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Outbound_Eff.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((double)(Outbound_Eff.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Recvs_Issued.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((double)(Recvs_Issued.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Sends_Issued.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((double)(Sends_Issued.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Retransmits.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((double)(Retransmits.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((In_Retr_Mode.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((double)(In_Retr_Mode.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Conn_PID, 
                    double Local_Port, 
                    double Foreign_Port, 
                    string Foreign_IP, 
                    System.DateTime Conn_Start_Time, 
                    System.DateTime Conn_End_Time, 
                    string INT_EXT, 
                    string Conn_State, 
                    string Conn_Protocol, 
                    global::System.Nullable<double> Highest_Depth, 
                    global::System.Nullable<double> Max_Send_Window, 
                    global::System.Nullable<double> Max_Recv_Window, 
                    global::System.Nullable<double> Recv_Window_Closed, 
                    global::System.Nullable<double> SWS_Count, 
                    global::System.Nullable<double> Inbound_Data, 
                    global::System.Nullable<double> Inbound_Bytes, 
                    global::System.Nullable<double> Inbound_Data_Dup, 
                    global::System.Nullable<double> Inbound_Bytes_Dup, 
                    global::System.Nullable<double> Inbound_Eff, 
                    global::System.Nullable<double> Outbound_Data, 
                    global::System.Nullable<double> Outbound_Bytes, 
                    global::System.Nullable<double> Outbound_Data_Retr, 
                    global::System.Nullable<double> Outbound_Bytes_Retr, 
                    global::System.Nullable<double> Outbound_Eff, 
                    global::System.Nullable<double> Recvs_Issued, 
                    global::System.Nullable<double> Sends_Issued, 
                    global::System.Nullable<double> Retransmits, 
                    global::System.Nullable<double> In_Retr_Mode, 
                    int Original_Record_ID, 
                    string Original_Conn_PID, 
                    double Original_Local_Port, 
                    double Original_Foreign_Port, 
                    string Original_Foreign_IP, 
                    System.DateTime Original_Conn_Start_Time, 
                    System.DateTime Original_Conn_End_Time, 
                    string Original_INT_EXT, 
                    string Original_Conn_State, 
                    string Original_Conn_Protocol, 
                    global::System.Nullable<double> Original_Highest_Depth, 
                    global::System.Nullable<double> Original_Max_Send_Window, 
                    global::System.Nullable<double> Original_Max_Recv_Window, 
                    global::System.Nullable<double> Original_Recv_Window_Closed, 
                    global::System.Nullable<double> Original_SWS_Count, 
                    global::System.Nullable<double> Original_Inbound_Data, 
                    global::System.Nullable<double> Original_Inbound_Bytes, 
                    global::System.Nullable<double> Original_Inbound_Data_Dup, 
                    global::System.Nullable<double> Original_Inbound_Bytes_Dup, 
                    global::System.Nullable<double> Original_Inbound_Eff, 
                    global::System.Nullable<double> Original_Outbound_Data, 
                    global::System.Nullable<double> Original_Outbound_Bytes, 
                    global::System.Nullable<double> Original_Outbound_Data_Retr, 
                    global::System.Nullable<double> Original_Outbound_Bytes_Retr, 
                    global::System.Nullable<double> Original_Outbound_Eff, 
                    global::System.Nullable<double> Original_Recvs_Issued, 
                    global::System.Nullable<double> Original_Sends_Issued, 
                    global::System.Nullable<double> Original_Retransmits, 
                    global::System.Nullable<double> Original_In_Retr_Mode, 
                    int Record_ID) {
            if ((Conn_PID == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Conn_PID));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((double)(Local_Port));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(Foreign_Port));
            if ((Foreign_IP == null)) {
                throw new global::System.ArgumentNullException("Foreign_IP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Foreign_IP));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(Conn_Start_Time));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Conn_End_Time));
            if ((INT_EXT == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(INT_EXT));
            }
            if ((Conn_State == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Conn_State));
            }
            if ((Conn_Protocol == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Conn_Protocol));
            }
            if ((Highest_Depth.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(Highest_Depth.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Max_Send_Window.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(Max_Send_Window.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Max_Recv_Window.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((double)(Max_Recv_Window.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Recv_Window_Closed.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((double)(Recv_Window_Closed.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((SWS_Count.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((double)(SWS_Count.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Inbound_Data.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(Inbound_Data.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Inbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((double)(Inbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Inbound_Data_Dup.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((double)(Inbound_Data_Dup.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Inbound_Bytes_Dup.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((double)(Inbound_Bytes_Dup.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Inbound_Eff.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((double)(Inbound_Eff.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Outbound_Data.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((double)(Outbound_Data.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Outbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((double)(Outbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Outbound_Data_Retr.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((double)(Outbound_Data_Retr.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Outbound_Bytes_Retr.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((double)(Outbound_Bytes_Retr.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Outbound_Eff.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((double)(Outbound_Eff.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Recvs_Issued.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((double)(Recvs_Issued.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Sends_Issued.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((double)(Sends_Issued.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Retransmits.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((double)(Retransmits.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((In_Retr_Mode.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((double)(In_Retr_Mode.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(Original_Record_ID));
            if ((Original_Conn_PID == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_Conn_PID));
            }
            this.Adapter.UpdateCommand.Parameters[31].Value = ((double)(Original_Local_Port));
            this.Adapter.UpdateCommand.Parameters[32].Value = ((double)(Original_Foreign_Port));
            if ((Original_Foreign_IP == null)) {
                throw new global::System.ArgumentNullException("Original_Foreign_IP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_Foreign_IP));
            }
            this.Adapter.UpdateCommand.Parameters[34].Value = ((System.DateTime)(Original_Conn_Start_Time));
            this.Adapter.UpdateCommand.Parameters[35].Value = ((System.DateTime)(Original_Conn_End_Time));
            if ((Original_INT_EXT == null)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_INT_EXT));
            }
            if ((Original_Conn_State == null)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((string)(Original_Conn_State));
            }
            if ((Original_Conn_Protocol == null)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((string)(Original_Conn_Protocol));
            }
            if ((Original_Highest_Depth.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((double)(Original_Highest_Depth.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_Max_Send_Window.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((double)(Original_Max_Send_Window.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_Max_Recv_Window.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((double)(Original_Max_Recv_Window.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Original_Recv_Window_Closed.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((double)(Original_Recv_Window_Closed.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_SWS_Count.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((double)(Original_SWS_Count.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Original_Inbound_Data.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((double)(Original_Inbound_Data.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Original_Inbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((double)(Original_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((Original_Inbound_Data_Dup.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((double)(Original_Inbound_Data_Dup.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Original_Inbound_Bytes_Dup.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((double)(Original_Inbound_Bytes_Dup.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((Original_Inbound_Eff.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((double)(Original_Inbound_Eff.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Original_Outbound_Data.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[63].Value = ((double)(Original_Outbound_Data.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[62].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((Original_Outbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[65].Value = ((double)(Original_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[64].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[65].Value = global::System.DBNull.Value;
            }
            if ((Original_Outbound_Data_Retr.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[67].Value = ((double)(Original_Outbound_Data_Retr.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[66].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[67].Value = global::System.DBNull.Value;
            }
            if ((Original_Outbound_Bytes_Retr.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[69].Value = ((double)(Original_Outbound_Bytes_Retr.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[68].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[69].Value = global::System.DBNull.Value;
            }
            if ((Original_Outbound_Eff.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[71].Value = ((double)(Original_Outbound_Eff.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[70].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[71].Value = global::System.DBNull.Value;
            }
            if ((Original_Recvs_Issued.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[73].Value = ((double)(Original_Recvs_Issued.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[72].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[73].Value = global::System.DBNull.Value;
            }
            if ((Original_Sends_Issued.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[75].Value = ((double)(Original_Sends_Issued.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[74].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[75].Value = global::System.DBNull.Value;
            }
            if ((Original_Retransmits.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[77].Value = ((double)(Original_Retransmits.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[76].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[77].Value = global::System.DBNull.Value;
            }
            if ((Original_In_Retr_Mode.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[79].Value = ((double)(Original_In_Retr_Mode.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[78].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[79].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[80].Value = ((int)(Record_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Conn_PID, 
                    string INT_EXT, 
                    string Conn_State, 
                    string Conn_Protocol, 
                    global::System.Nullable<double> Highest_Depth, 
                    global::System.Nullable<double> Max_Send_Window, 
                    global::System.Nullable<double> Max_Recv_Window, 
                    global::System.Nullable<double> Recv_Window_Closed, 
                    global::System.Nullable<double> SWS_Count, 
                    global::System.Nullable<double> Inbound_Data, 
                    global::System.Nullable<double> Inbound_Bytes, 
                    global::System.Nullable<double> Inbound_Data_Dup, 
                    global::System.Nullable<double> Inbound_Bytes_Dup, 
                    global::System.Nullable<double> Inbound_Eff, 
                    global::System.Nullable<double> Outbound_Data, 
                    global::System.Nullable<double> Outbound_Bytes, 
                    global::System.Nullable<double> Outbound_Data_Retr, 
                    global::System.Nullable<double> Outbound_Bytes_Retr, 
                    global::System.Nullable<double> Outbound_Eff, 
                    global::System.Nullable<double> Recvs_Issued, 
                    global::System.Nullable<double> Sends_Issued, 
                    global::System.Nullable<double> Retransmits, 
                    global::System.Nullable<double> In_Retr_Mode, 
                    int Original_Record_ID, 
                    string Original_Conn_PID, 
                    double Original_Local_Port, 
                    double Original_Foreign_Port, 
                    string Original_Foreign_IP, 
                    System.DateTime Original_Conn_Start_Time, 
                    System.DateTime Original_Conn_End_Time, 
                    string Original_INT_EXT, 
                    string Original_Conn_State, 
                    string Original_Conn_Protocol, 
                    global::System.Nullable<double> Original_Highest_Depth, 
                    global::System.Nullable<double> Original_Max_Send_Window, 
                    global::System.Nullable<double> Original_Max_Recv_Window, 
                    global::System.Nullable<double> Original_Recv_Window_Closed, 
                    global::System.Nullable<double> Original_SWS_Count, 
                    global::System.Nullable<double> Original_Inbound_Data, 
                    global::System.Nullable<double> Original_Inbound_Bytes, 
                    global::System.Nullable<double> Original_Inbound_Data_Dup, 
                    global::System.Nullable<double> Original_Inbound_Bytes_Dup, 
                    global::System.Nullable<double> Original_Inbound_Eff, 
                    global::System.Nullable<double> Original_Outbound_Data, 
                    global::System.Nullable<double> Original_Outbound_Bytes, 
                    global::System.Nullable<double> Original_Outbound_Data_Retr, 
                    global::System.Nullable<double> Original_Outbound_Bytes_Retr, 
                    global::System.Nullable<double> Original_Outbound_Eff, 
                    global::System.Nullable<double> Original_Recvs_Issued, 
                    global::System.Nullable<double> Original_Sends_Issued, 
                    global::System.Nullable<double> Original_Retransmits, 
                    global::System.Nullable<double> Original_In_Retr_Mode) {
            return this.Update(Conn_PID, Original_Local_Port, Original_Foreign_Port, Original_Foreign_IP, Original_Conn_Start_Time, Original_Conn_End_Time, INT_EXT, Conn_State, Conn_Protocol, Highest_Depth, Max_Send_Window, Max_Recv_Window, Recv_Window_Closed, SWS_Count, Inbound_Data, Inbound_Bytes, Inbound_Data_Dup, Inbound_Bytes_Dup, Inbound_Eff, Outbound_Data, Outbound_Bytes, Outbound_Data_Retr, Outbound_Bytes_Retr, Outbound_Eff, Recvs_Issued, Sends_Issued, Retransmits, In_Retr_Mode, Original_Record_ID, Original_Conn_PID, Original_Local_Port, Original_Foreign_Port, Original_Foreign_IP, Original_Conn_Start_Time, Original_Conn_End_Time, Original_INT_EXT, Original_Conn_State, Original_Conn_Protocol, Original_Highest_Depth, Original_Max_Send_Window, Original_Max_Recv_Window, Original_Recv_Window_Closed, Original_SWS_Count, Original_Inbound_Data, Original_Inbound_Bytes, Original_Inbound_Data_Dup, Original_Inbound_Bytes_Dup, Original_Inbound_Eff, Original_Outbound_Data, Original_Outbound_Bytes, Original_Outbound_Data_Retr, Original_Outbound_Bytes_Retr, Original_Outbound_Eff, Original_Recvs_Issued, Original_Sends_Issued, Original_Retransmits, Original_In_Retr_Mode, Original_Record_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Connection_StatsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Connection_StatsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Connection_Stats";
            tableMapping.ColumnMappings.Add("Poll_Time", "Poll_Time");
            tableMapping.ColumnMappings.Add("Conn_PID", "Conn_PID");
            tableMapping.ColumnMappings.Add("Local_Port", "Local_Port");
            tableMapping.ColumnMappings.Add("Foreign_Port", "Foreign_Port");
            tableMapping.ColumnMappings.Add("Foreign_IP", "Foreign_IP");
            tableMapping.ColumnMappings.Add("CCIDENT", "CCIDENT");
            tableMapping.ColumnMappings.Add("Conn_Start_Time", "Conn_Start_Time");
            tableMapping.ColumnMappings.Add("INT_EXT", "INT_EXT");
            tableMapping.ColumnMappings.Add("Conn_State", "Conn_State");
            tableMapping.ColumnMappings.Add("Conn_Protocol", "Conn_Protocol");
            tableMapping.ColumnMappings.Add("Highest_Depth", "Highest_Depth");
            tableMapping.ColumnMappings.Add("Max_Send_Window", "Max_Send_Window");
            tableMapping.ColumnMappings.Add("Max_Recv_Window", "Max_Recv_Window");
            tableMapping.ColumnMappings.Add("Recv_Window_Closed", "Recv_Window_Closed");
            tableMapping.ColumnMappings.Add("SWS_Count", "SWS_Count");
            tableMapping.ColumnMappings.Add("Inbound_Data", "Inbound_Data");
            tableMapping.ColumnMappings.Add("Inbound_Bytes", "Inbound_Bytes");
            tableMapping.ColumnMappings.Add("Inbound_Data_Dup", "Inbound_Data_Dup");
            tableMapping.ColumnMappings.Add("Inbound_Bytes_Dup", "Inbound_Bytes_Dup");
            tableMapping.ColumnMappings.Add("Inbound_Eff", "Inbound_Eff");
            tableMapping.ColumnMappings.Add("Outbound_Data", "Outbound_Data");
            tableMapping.ColumnMappings.Add("Outbound_Bytes", "Outbound_Bytes");
            tableMapping.ColumnMappings.Add("Outbound_Data_Retr", "Outbound_Data_Retr");
            tableMapping.ColumnMappings.Add("Outbound_Bytes_Retr", "Outbound_Bytes_Retr");
            tableMapping.ColumnMappings.Add("Outbound_Eff", "Outbound_Eff");
            tableMapping.ColumnMappings.Add("Recvs_Issued", "Recvs_Issued");
            tableMapping.ColumnMappings.Add("Sends_Issued", "Sends_Issued");
            tableMapping.ColumnMappings.Add("Retransmits", "Retransmits");
            tableMapping.ColumnMappings.Add("In_Retr_Mode", "In_Retr_Mode");
            tableMapping.ColumnMappings.Add("Conn_Phase", "Conn_Phase");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Connection_Stats] WHERE (([Poll_Time] = @Original_Poll_Time) A" +
                "ND ((@IsNull_Conn_PID = 1 AND [Conn_PID] IS NULL) OR ([Conn_PID] = @Original_Con" +
                "n_PID)) AND ((@IsNull_Conn_Phase = 1 AND [Conn_Phase] IS NULL) OR ([Conn_Phase] " +
                "= @Original_Conn_Phase)) AND ([Local_Port] = @Original_Local_Port) AND ([Foreign" +
                "_Port] = @Original_Foreign_Port) AND ([Foreign_IP] = @Original_Foreign_IP) AND (" +
                "[CCIDENT] = @Original_CCIDENT) AND ((@IsNull_Conn_Start_Time = 1 AND [Conn_Start" +
                "_Time] IS NULL) OR ([Conn_Start_Time] = @Original_Conn_Start_Time)) AND ((@IsNul" +
                "l_INT_EXT = 1 AND [INT_EXT] IS NULL) OR ([INT_EXT] = @Original_INT_EXT)) AND ((@" +
                "IsNull_Conn_State = 1 AND [Conn_State] IS NULL) OR ([Conn_State] = @Original_Con" +
                "n_State)) AND ((@IsNull_Conn_Protocol = 1 AND [Conn_Protocol] IS NULL) OR ([Conn" +
                "_Protocol] = @Original_Conn_Protocol)) AND ((@IsNull_Highest_Depth = 1 AND [High" +
                "est_Depth] IS NULL) OR ([Highest_Depth] = @Original_Highest_Depth)) AND ((@IsNul" +
                "l_Max_Send_Window = 1 AND [Max_Send_Window] IS NULL) OR ([Max_Send_Window] = @Or" +
                "iginal_Max_Send_Window)) AND ((@IsNull_Max_Recv_Window = 1 AND [Max_Recv_Window]" +
                " IS NULL) OR ([Max_Recv_Window] = @Original_Max_Recv_Window)) AND ((@IsNull_Recv" +
                "_Window_Closed = 1 AND [Recv_Window_Closed] IS NULL) OR ([Recv_Window_Closed] = " +
                "@Original_Recv_Window_Closed)) AND ((@IsNull_SWS_Count = 1 AND [SWS_Count] IS NU" +
                "LL) OR ([SWS_Count] = @Original_SWS_Count)) AND ((@IsNull_Inbound_Data = 1 AND [" +
                "Inbound_Data] IS NULL) OR ([Inbound_Data] = @Original_Inbound_Data)) AND ((@IsNu" +
                "ll_Inbound_Bytes = 1 AND [Inbound_Bytes] IS NULL) OR ([Inbound_Bytes] = @Origina" +
                "l_Inbound_Bytes)) AND ((@IsNull_Inbound_Data_Dup = 1 AND [Inbound_Data_Dup] IS N" +
                "ULL) OR ([Inbound_Data_Dup] = @Original_Inbound_Data_Dup)) AND ((@IsNull_Inbound" +
                "_Bytes_Dup = 1 AND [Inbound_Bytes_Dup] IS NULL) OR ([Inbound_Bytes_Dup] = @Origi" +
                "nal_Inbound_Bytes_Dup)) AND ((@IsNull_Inbound_Eff = 1 AND [Inbound_Eff] IS NULL)" +
                " OR ([Inbound_Eff] = @Original_Inbound_Eff)) AND ((@IsNull_Outbound_Data = 1 AND" +
                " [Outbound_Data] IS NULL) OR ([Outbound_Data] = @Original_Outbound_Data)) AND ((" +
                "@IsNull_Outbound_Bytes = 1 AND [Outbound_Bytes] IS NULL) OR ([Outbound_Bytes] = " +
                "@Original_Outbound_Bytes)) AND ((@IsNull_Outbound_Data_Retr = 1 AND [Outbound_Da" +
                "ta_Retr] IS NULL) OR ([Outbound_Data_Retr] = @Original_Outbound_Data_Retr)) AND " +
                "((@IsNull_Outbound_Bytes_Retr = 1 AND [Outbound_Bytes_Retr] IS NULL) OR ([Outbou" +
                "nd_Bytes_Retr] = @Original_Outbound_Bytes_Retr)) AND ((@IsNull_Outbound_Eff = 1 " +
                "AND [Outbound_Eff] IS NULL) OR ([Outbound_Eff] = @Original_Outbound_Eff)) AND ((" +
                "@IsNull_Recvs_Issued = 1 AND [Recvs_Issued] IS NULL) OR ([Recvs_Issued] = @Origi" +
                "nal_Recvs_Issued)) AND ((@IsNull_Sends_Issued = 1 AND [Sends_Issued] IS NULL) OR" +
                " ([Sends_Issued] = @Original_Sends_Issued)) AND ((@IsNull_Retransmits = 1 AND [R" +
                "etransmits] IS NULL) OR ([Retransmits] = @Original_Retransmits)) AND ((@IsNull_I" +
                "n_Retr_Mode = 1 AND [In_Retr_Mode] IS NULL) OR ([In_Retr_Mode] = @Original_In_Re" +
                "tr_Mode)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Conn_PID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_PID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Conn_PID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_PID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Conn_Phase", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_Phase", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Conn_Phase", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_Phase", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Local_Port", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Local_Port", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Foreign_Port", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Foreign_Port", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Foreign_IP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Foreign_IP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CCIDENT", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CCIDENT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Conn_Start_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_Start_Time", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Conn_Start_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_Start_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_INT_EXT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INT_EXT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INT_EXT", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INT_EXT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Conn_State", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_State", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Conn_State", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_State", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Conn_Protocol", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_Protocol", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Conn_Protocol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_Protocol", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Highest_Depth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Highest_Depth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Highest_Depth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Highest_Depth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Max_Send_Window", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Send_Window", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Max_Send_Window", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Send_Window", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Max_Recv_Window", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Recv_Window", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Max_Recv_Window", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Recv_Window", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Recv_Window_Closed", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recv_Window_Closed", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Recv_Window_Closed", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recv_Window_Closed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SWS_Count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SWS_Count", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SWS_Count", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SWS_Count", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Inbound_Data", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Data", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Inbound_Data", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Data", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Inbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Inbound_Data_Dup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Data_Dup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Inbound_Data_Dup", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Data_Dup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Inbound_Bytes_Dup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Bytes_Dup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Inbound_Bytes_Dup", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Bytes_Dup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Inbound_Eff", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Eff", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Inbound_Eff", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Eff", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Outbound_Data", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Data", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Outbound_Data", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Data", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Outbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Outbound_Data_Retr", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Data_Retr", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Outbound_Data_Retr", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Data_Retr", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Outbound_Bytes_Retr", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Bytes_Retr", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Outbound_Bytes_Retr", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Bytes_Retr", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Outbound_Eff", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Eff", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Outbound_Eff", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Eff", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Recvs_Issued", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recvs_Issued", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Recvs_Issued", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recvs_Issued", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Sends_Issued", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sends_Issued", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sends_Issued", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sends_Issued", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Retransmits", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Retransmits", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Retransmits", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Retransmits", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_In_Retr_Mode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "In_Retr_Mode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_In_Retr_Mode", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "In_Retr_Mode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Connection_Stats] ([Poll_Time], [Conn_PID], [Conn_Phase], [Loc" +
                "al_Port], [Foreign_Port], [Foreign_IP], [CCIDENT], [Conn_Start_Time], [INT_EXT]," +
                " [Conn_State], [Conn_Protocol], [Highest_Depth], [Max_Send_Window], [Max_Recv_Wi" +
                "ndow], [Recv_Window_Closed], [SWS_Count], [Inbound_Data], [Inbound_Bytes], [Inbo" +
                "und_Data_Dup], [Inbound_Bytes_Dup], [Inbound_Eff], [Outbound_Data], [Outbound_By" +
                "tes], [Outbound_Data_Retr], [Outbound_Bytes_Retr], [Outbound_Eff], [Recvs_Issued" +
                "], [Sends_Issued], [Retransmits], [In_Retr_Mode]) VALUES (@Poll_Time, @Conn_PID," +
                " @Conn_Phase, @Local_Port, @Foreign_Port, @Foreign_IP, @CCIDENT, @Conn_Start_Tim" +
                "e, @INT_EXT, @Conn_State, @Conn_Protocol, @Highest_Depth, @Max_Send_Window, @Max" +
                "_Recv_Window, @Recv_Window_Closed, @SWS_Count, @Inbound_Data, @Inbound_Bytes, @I" +
                "nbound_Data_Dup, @Inbound_Bytes_Dup, @Inbound_Eff, @Outbound_Data, @Outbound_Byt" +
                "es, @Outbound_Data_Retr, @Outbound_Bytes_Retr, @Outbound_Eff, @Recvs_Issued, @Se" +
                "nds_Issued, @Retransmits, @In_Retr_Mode);\r\nSELECT Poll_Time, Conn_PID, Conn_Phas" +
                "e, Local_Port, Foreign_Port, Foreign_IP, CCIDENT, Conn_Start_Time, INT_EXT, Conn" +
                "_State, Conn_Protocol, Highest_Depth, Max_Send_Window, Max_Recv_Window, Recv_Win" +
                "dow_Closed, SWS_Count, Inbound_Data, Inbound_Bytes, Inbound_Data_Dup, Inbound_By" +
                "tes_Dup, Inbound_Eff, Outbound_Data, Outbound_Bytes, Outbound_Data_Retr, Outboun" +
                "d_Bytes_Retr, Outbound_Eff, Recvs_Issued, Sends_Issued, Retransmits, In_Retr_Mod" +
                "e FROM Connection_Stats WHERE (CCIDENT = @CCIDENT) AND (Foreign_IP = @Foreign_IP" +
                ") AND (Foreign_Port = @Foreign_Port) AND (Local_Port = @Local_Port) AND (Poll_Ti" +
                "me = @Poll_Time)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Conn_PID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_PID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Conn_Phase", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_Phase", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Local_Port", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Local_Port", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Foreign_Port", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Foreign_Port", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Foreign_IP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Foreign_IP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CCIDENT", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CCIDENT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Conn_Start_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_Start_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INT_EXT", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INT_EXT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Conn_State", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_State", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Conn_Protocol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_Protocol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Highest_Depth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Highest_Depth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Max_Send_Window", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Send_Window", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Max_Recv_Window", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Recv_Window", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Recv_Window_Closed", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recv_Window_Closed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SWS_Count", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SWS_Count", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inbound_Data", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Data", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inbound_Data_Dup", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Data_Dup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inbound_Bytes_Dup", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Bytes_Dup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inbound_Eff", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Eff", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Outbound_Data", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Data", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Outbound_Data_Retr", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Data_Retr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Outbound_Bytes_Retr", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Bytes_Retr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Outbound_Eff", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Eff", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Recvs_Issued", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recvs_Issued", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sends_Issued", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sends_Issued", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Retransmits", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Retransmits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@In_Retr_Mode", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "In_Retr_Mode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Connection_Stats] SET [Poll_Time] = @Poll_Time, [Conn_PID] = @Conn_" +
                "PID, [Conn_Phase] = @Conn_Phase, [Local_Port] = @Local_Port, [Foreign_Port] = @F" +
                "oreign_Port, [Foreign_IP] = @Foreign_IP, [CCIDENT] = @CCIDENT, [Conn_Start_Time]" +
                " = @Conn_Start_Time, [INT_EXT] = @INT_EXT, [Conn_State] = @Conn_State, [Conn_Pro" +
                "tocol] = @Conn_Protocol, [Highest_Depth] = @Highest_Depth, [Max_Send_Window] = @" +
                "Max_Send_Window, [Max_Recv_Window] = @Max_Recv_Window, [Recv_Window_Closed] = @R" +
                "ecv_Window_Closed, [SWS_Count] = @SWS_Count, [Inbound_Data] = @Inbound_Data, [In" +
                "bound_Bytes] = @Inbound_Bytes, [Inbound_Data_Dup] = @Inbound_Data_Dup, [Inbound_" +
                "Bytes_Dup] = @Inbound_Bytes_Dup, [Inbound_Eff] = @Inbound_Eff, [Outbound_Data] =" +
                " @Outbound_Data, [Outbound_Bytes] = @Outbound_Bytes, [Outbound_Data_Retr] = @Out" +
                "bound_Data_Retr, [Outbound_Bytes_Retr] = @Outbound_Bytes_Retr, [Outbound_Eff] = " +
                "@Outbound_Eff, [Recvs_Issued] = @Recvs_Issued, [Sends_Issued] = @Sends_Issued, [" +
                "Retransmits] = @Retransmits, [In_Retr_Mode] = @In_Retr_Mode WHERE (([Poll_Time] " +
                "= @Original_Poll_Time) AND ((@IsNull_Conn_PID = 1 AND [Conn_PID] IS NULL) OR ([C" +
                "onn_PID] = @Original_Conn_PID)) AND ((@IsNull_Conn_Phase = 1 AND [Conn_Phase] IS" +
                " NULL) OR ([Conn_Phase] = @Original_Conn_Phase)) AND ([Local_Port] = @Original_L" +
                "ocal_Port) AND ([Foreign_Port] = @Original_Foreign_Port) AND ([Foreign_IP] = @Or" +
                "iginal_Foreign_IP) AND ([CCIDENT] = @Original_CCIDENT) AND ((@IsNull_Conn_Start_" +
                "Time = 1 AND [Conn_Start_Time] IS NULL) OR ([Conn_Start_Time] = @Original_Conn_S" +
                "tart_Time)) AND ((@IsNull_INT_EXT = 1 AND [INT_EXT] IS NULL) OR ([INT_EXT] = @Or" +
                "iginal_INT_EXT)) AND ((@IsNull_Conn_State = 1 AND [Conn_State] IS NULL) OR ([Con" +
                "n_State] = @Original_Conn_State)) AND ((@IsNull_Conn_Protocol = 1 AND [Conn_Prot" +
                "ocol] IS NULL) OR ([Conn_Protocol] = @Original_Conn_Protocol)) AND ((@IsNull_Hig" +
                "hest_Depth = 1 AND [Highest_Depth] IS NULL) OR ([Highest_Depth] = @Original_High" +
                "est_Depth)) AND ((@IsNull_Max_Send_Window = 1 AND [Max_Send_Window] IS NULL) OR " +
                "([Max_Send_Window] = @Original_Max_Send_Window)) AND ((@IsNull_Max_Recv_Window =" +
                " 1 AND [Max_Recv_Window] IS NULL) OR ([Max_Recv_Window] = @Original_Max_Recv_Win" +
                "dow)) AND ((@IsNull_Recv_Window_Closed = 1 AND [Recv_Window_Closed] IS NULL) OR " +
                "([Recv_Window_Closed] = @Original_Recv_Window_Closed)) AND ((@IsNull_SWS_Count =" +
                " 1 AND [SWS_Count] IS NULL) OR ([SWS_Count] = @Original_SWS_Count)) AND ((@IsNul" +
                "l_Inbound_Data = 1 AND [Inbound_Data] IS NULL) OR ([Inbound_Data] = @Original_In" +
                "bound_Data)) AND ((@IsNull_Inbound_Bytes = 1 AND [Inbound_Bytes] IS NULL) OR ([I" +
                "nbound_Bytes] = @Original_Inbound_Bytes)) AND ((@IsNull_Inbound_Data_Dup = 1 AND" +
                " [Inbound_Data_Dup] IS NULL) OR ([Inbound_Data_Dup] = @Original_Inbound_Data_Dup" +
                ")) AND ((@IsNull_Inbound_Bytes_Dup = 1 AND [Inbound_Bytes_Dup] IS NULL) OR ([Inb" +
                "ound_Bytes_Dup] = @Original_Inbound_Bytes_Dup)) AND ((@IsNull_Inbound_Eff = 1 AN" +
                "D [Inbound_Eff] IS NULL) OR ([Inbound_Eff] = @Original_Inbound_Eff)) AND ((@IsNu" +
                "ll_Outbound_Data = 1 AND [Outbound_Data] IS NULL) OR ([Outbound_Data] = @Origina" +
                "l_Outbound_Data)) AND ((@IsNull_Outbound_Bytes = 1 AND [Outbound_Bytes] IS NULL)" +
                " OR ([Outbound_Bytes] = @Original_Outbound_Bytes)) AND ((@IsNull_Outbound_Data_R" +
                "etr = 1 AND [Outbound_Data_Retr] IS NULL) OR ([Outbound_Data_Retr] = @Original_O" +
                "utbound_Data_Retr)) AND ((@IsNull_Outbound_Bytes_Retr = 1 AND [Outbound_Bytes_Re" +
                "tr] IS NULL) OR ([Outbound_Bytes_Retr] = @Original_Outbound_Bytes_Retr)) AND ((@" +
                "IsNull_Outbound_Eff = 1 AND [Outbound_Eff] IS NULL) OR ([Outbound_Eff] = @Origin" +
                "al_Outbound_Eff)) AND ((@IsNull_Recvs_Issued = 1 AND [Recvs_Issued] IS NULL) OR " +
                "([Recvs_Issued] = @Original_Recvs_Issued)) AND ((@IsNull_Sends_Issued = 1 AND [S" +
                "ends_Issued] IS NULL) OR ([Sends_Issued] = @Original_Sends_Issued)) AND ((@IsNul" +
                "l_Retransmits = 1 AND [Retransmits] IS NULL) OR ([Retransmits] = @Original_Retra" +
                "nsmits)) AND ((@IsNull_In_Retr_Mode = 1 AND [In_Retr_Mode] IS NULL) OR ([In_Retr" +
                "_Mode] = @Original_In_Retr_Mode)));\r\nSELECT Poll_Time, Conn_PID, Conn_Phase, Loc" +
                "al_Port, Foreign_Port, Foreign_IP, CCIDENT, Conn_Start_Time, INT_EXT, Conn_State" +
                ", Conn_Protocol, Highest_Depth, Max_Send_Window, Max_Recv_Window, Recv_Window_Cl" +
                "osed, SWS_Count, Inbound_Data, Inbound_Bytes, Inbound_Data_Dup, Inbound_Bytes_Du" +
                "p, Inbound_Eff, Outbound_Data, Outbound_Bytes, Outbound_Data_Retr, Outbound_Byte" +
                "s_Retr, Outbound_Eff, Recvs_Issued, Sends_Issued, Retransmits, In_Retr_Mode FROM" +
                " Connection_Stats WHERE (CCIDENT = @CCIDENT) AND (Foreign_IP = @Foreign_IP) AND " +
                "(Foreign_Port = @Foreign_Port) AND (Local_Port = @Local_Port) AND (Poll_Time = @" +
                "Poll_Time)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Conn_PID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_PID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Conn_Phase", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_Phase", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Local_Port", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Local_Port", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Foreign_Port", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Foreign_Port", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Foreign_IP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Foreign_IP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CCIDENT", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CCIDENT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Conn_Start_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_Start_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@INT_EXT", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INT_EXT", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Conn_State", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_State", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Conn_Protocol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_Protocol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Highest_Depth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Highest_Depth", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Max_Send_Window", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Send_Window", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Max_Recv_Window", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Recv_Window", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Recv_Window_Closed", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recv_Window_Closed", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SWS_Count", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SWS_Count", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inbound_Data", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Data", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inbound_Data_Dup", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Data_Dup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inbound_Bytes_Dup", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Bytes_Dup", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inbound_Eff", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Eff", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Outbound_Data", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Data", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Outbound_Data_Retr", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Data_Retr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Outbound_Bytes_Retr", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Bytes_Retr", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Outbound_Eff", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Eff", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Recvs_Issued", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recvs_Issued", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sends_Issued", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sends_Issued", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Retransmits", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Retransmits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@In_Retr_Mode", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "In_Retr_Mode", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Conn_PID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_PID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Conn_PID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_PID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Conn_Phase", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_Phase", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Conn_Phase", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_Phase", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Local_Port", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Local_Port", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Foreign_Port", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Foreign_Port", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Foreign_IP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Foreign_IP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CCIDENT", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CCIDENT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Conn_Start_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_Start_Time", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Conn_Start_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_Start_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_INT_EXT", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INT_EXT", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_INT_EXT", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "INT_EXT", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Conn_State", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_State", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Conn_State", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_State", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Conn_Protocol", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_Protocol", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Conn_Protocol", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_Protocol", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Highest_Depth", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Highest_Depth", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Highest_Depth", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Highest_Depth", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Max_Send_Window", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Send_Window", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Max_Send_Window", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Send_Window", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Max_Recv_Window", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Recv_Window", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Max_Recv_Window", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Recv_Window", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Recv_Window_Closed", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recv_Window_Closed", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Recv_Window_Closed", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recv_Window_Closed", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SWS_Count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SWS_Count", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SWS_Count", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SWS_Count", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Inbound_Data", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Data", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Inbound_Data", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Data", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Inbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Inbound_Data_Dup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Data_Dup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Inbound_Data_Dup", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Data_Dup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Inbound_Bytes_Dup", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Bytes_Dup", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Inbound_Bytes_Dup", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Bytes_Dup", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Inbound_Eff", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Eff", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Inbound_Eff", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_Eff", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Outbound_Data", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Data", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Outbound_Data", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Data", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Outbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Outbound_Data_Retr", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Data_Retr", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Outbound_Data_Retr", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Data_Retr", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Outbound_Bytes_Retr", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Bytes_Retr", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Outbound_Bytes_Retr", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Bytes_Retr", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Outbound_Eff", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Eff", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Outbound_Eff", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Outbound_Eff", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Recvs_Issued", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recvs_Issued", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Recvs_Issued", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Recvs_Issued", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Sends_Issued", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sends_Issued", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sends_Issued", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sends_Issued", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Retransmits", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Retransmits", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Retransmits", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Retransmits", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_In_Retr_Mode", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "In_Retr_Mode", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_In_Retr_Mode", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "In_Retr_Mode", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=DANSDELL\\SQLEXPRESS;Initial Catalog=VseDb;Integrated Security=True";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[6];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Poll_Time, Conn_PID, Conn_Phase, Local_Port, Foreign_Port, Foreign_IP, CCIDENT, Conn_Start_Time, INT_EXT, Conn_State, Conn_Protocol, Highest_Depth, Max_Send_Window, Max_Recv_Window, Recv_Window_Closed, SWS_Count, Inbound_Data, Inbound_Bytes, Inbound_Data_Dup, Inbound_Bytes_Dup, Inbound_Eff, Outbound_Data, Outbound_Bytes, Outbound_Data_Retr, Outbound_Bytes_Retr, Outbound_Eff, Recvs_Issued, Sends_Issued, Retransmits, In_Retr_Mode FROM dbo.Connection_Stats";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT     Poll_Time, Conn_PID, Conn_Phase, Local_Port, Foreign_Port, Foreign_IP, CCIDENT, Conn_Start_Time, INT_EXT, Conn_State, Conn_Protocol, 
                      Highest_Depth, Max_Send_Window, Max_Recv_Window, Recv_Window_Closed, SWS_Count, Inbound_Data, Inbound_Bytes, Inbound_Data_Dup, 
                      Inbound_Bytes_Dup, Inbound_Eff, Outbound_Data, Outbound_Bytes, Outbound_Data_Retr, Outbound_Bytes_Retr, Outbound_Eff, Recvs_Issued, 
                      Sends_Issued, Retransmits, In_Retr_Mode
FROM         Connection_Stats
WHERE     (Poll_Time = @pollTime)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pollTime", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT     Poll_Time, Conn_PID, Conn_Phase, Local_Port, Foreign_Port, Foreign_IP, CCIDENT, Conn_Start_Time, INT_EXT, Conn_State, Conn_Protocol, 
                      Highest_Depth, Max_Send_Window, Max_Recv_Window, Recv_Window_Closed, SWS_Count, Inbound_Data, Inbound_Bytes, Inbound_Data_Dup, 
                      Inbound_Bytes_Dup, Inbound_Eff, Outbound_Data, Outbound_Bytes, Outbound_Data_Retr, Outbound_Bytes_Retr, Outbound_Eff, Recvs_Issued, 
                      Sends_Issued, Retransmits, In_Retr_Mode
FROM         Connection_Stats
WHERE     (Poll_Time > @start AND Poll_Time < @end) AND (Local_Port = @lport) AND (Foreign_Port = @fport) AND (Foreign_IP = @fip) AND 
                      (Conn_Start_Time = @conn_start_time)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@start", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@end", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@lport", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Local_Port", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fport", global::System.Data.SqlDbType.Float, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Foreign_Port", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@fip", global::System.Data.SqlDbType.VarChar, 15, global::System.Data.ParameterDirection.Input, 0, 0, "Foreign_IP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@conn_start_time", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Conn_Start_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = @"SELECT     Poll_Time, Conn_PID, Conn_Phase, Local_Port, Foreign_Port, Foreign_IP, CCIDENT, Conn_Start_Time, INT_EXT, Conn_State, Conn_Protocol, 
                      Highest_Depth, Max_Send_Window, Max_Recv_Window, Recv_Window_Closed, SWS_Count, Inbound_Data, Inbound_Bytes, Inbound_Data_Dup, 
                      Inbound_Bytes_Dup, Inbound_Eff, Outbound_Data, Outbound_Bytes, Outbound_Data_Retr, Outbound_Bytes_Retr, Outbound_Eff, Recvs_Issued, 
                      Sends_Issued, Retransmits, In_Retr_Mode
FROM         Connection_Stats
WHERE     (Poll_Time > @start AND Poll_Time < @end)";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@start", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@end", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "SELECT DISTINCT Local_Port, Foreign_Port, Foreign_IP, Conn_Start_Time \r\nFROM dbo." +
                "Connection_Stats\r\nWHERE     (Poll_Time > @start AND Poll_Time < @end)";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@start", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[4].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@end", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "SELECT DISTINCT Local_Port\r\nFROM         Connection_Stats\r\nWHERE     (Poll_Time >" +
                " @start AND Poll_Time < @end)\r\nORDER BY Local_Port";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@start", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[5].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@end", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(VseDbDataSet.Connection_StatsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual VseDbDataSet.Connection_StatsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            VseDbDataSet.Connection_StatsDataTable dataTable = new VseDbDataSet.Connection_StatsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(VseDbDataSet.Connection_StatsDataTable dataTable, System.DateTime pollTime) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(pollTime));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual VseDbDataSet.Connection_StatsDataTable GetDataBy(System.DateTime pollTime) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(pollTime));
            VseDbDataSet.Connection_StatsDataTable dataTable = new VseDbDataSet.Connection_StatsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy1(VseDbDataSet.Connection_StatsDataTable dataTable, System.DateTime start, System.DateTime end, float lport, float fport, string fip, global::System.Nullable<global::System.DateTime> conn_start_time) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(start));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(end));
            this.Adapter.SelectCommand.Parameters[2].Value = ((float)(lport));
            this.Adapter.SelectCommand.Parameters[3].Value = ((float)(fport));
            if ((fip == null)) {
                throw new global::System.ArgumentNullException("fip");
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(fip));
            }
            if ((conn_start_time.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((System.DateTime)(conn_start_time.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual VseDbDataSet.Connection_StatsDataTable GetDataBy1(System.DateTime start, System.DateTime end, float lport, float fport, string fip, global::System.Nullable<global::System.DateTime> conn_start_time) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(start));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(end));
            this.Adapter.SelectCommand.Parameters[2].Value = ((float)(lport));
            this.Adapter.SelectCommand.Parameters[3].Value = ((float)(fport));
            if ((fip == null)) {
                throw new global::System.ArgumentNullException("fip");
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(fip));
            }
            if ((conn_start_time.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((System.DateTime)(conn_start_time.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            VseDbDataSet.Connection_StatsDataTable dataTable = new VseDbDataSet.Connection_StatsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByTimeRange(VseDbDataSet.Connection_StatsDataTable dataTable, System.DateTime start, System.DateTime end) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(start));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(end));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual VseDbDataSet.Connection_StatsDataTable GetDataByTimeRange(System.DateTime start, System.DateTime end) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(start));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(end));
            VseDbDataSet.Connection_StatsDataTable dataTable = new VseDbDataSet.Connection_StatsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillDistinctByTimeRange(VseDbDataSet.Connection_StatsDataTable dataTable, System.DateTime start, System.DateTime end) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(start));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(end));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual VseDbDataSet.Connection_StatsDataTable GetDataDistinctByTimeRange(System.DateTime start, System.DateTime end) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(start));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(end));
            VseDbDataSet.Connection_StatsDataTable dataTable = new VseDbDataSet.Connection_StatsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillDistinctLocalPortByRange(VseDbDataSet.Connection_StatsDataTable dataTable, System.DateTime start, System.DateTime end) {
            this.Adapter.SelectCommand = this.CommandCollection[5];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(start));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(end));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual VseDbDataSet.Connection_StatsDataTable GetDataDistinctLocalPortByRange(System.DateTime start, System.DateTime end) {
            this.Adapter.SelectCommand = this.CommandCollection[5];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(start));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(end));
            VseDbDataSet.Connection_StatsDataTable dataTable = new VseDbDataSet.Connection_StatsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet.Connection_StatsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Connection_Stats");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    System.DateTime Original_Poll_Time, 
                    string Original_Conn_PID, 
                    string Original_Conn_Phase, 
                    double Original_Local_Port, 
                    double Original_Foreign_Port, 
                    string Original_Foreign_IP, 
                    double Original_CCIDENT, 
                    global::System.Nullable<global::System.DateTime> Original_Conn_Start_Time, 
                    string Original_INT_EXT, 
                    string Original_Conn_State, 
                    string Original_Conn_Protocol, 
                    global::System.Nullable<double> Original_Highest_Depth, 
                    global::System.Nullable<double> Original_Max_Send_Window, 
                    global::System.Nullable<double> Original_Max_Recv_Window, 
                    global::System.Nullable<double> Original_Recv_Window_Closed, 
                    global::System.Nullable<double> Original_SWS_Count, 
                    global::System.Nullable<double> Original_Inbound_Data, 
                    global::System.Nullable<double> Original_Inbound_Bytes, 
                    global::System.Nullable<double> Original_Inbound_Data_Dup, 
                    global::System.Nullable<double> Original_Inbound_Bytes_Dup, 
                    global::System.Nullable<double> Original_Inbound_Eff, 
                    global::System.Nullable<double> Original_Outbound_Data, 
                    global::System.Nullable<double> Original_Outbound_Bytes, 
                    global::System.Nullable<double> Original_Outbound_Data_Retr, 
                    global::System.Nullable<double> Original_Outbound_Bytes_Retr, 
                    global::System.Nullable<double> Original_Outbound_Eff, 
                    global::System.Nullable<double> Original_Recvs_Issued, 
                    global::System.Nullable<double> Original_Sends_Issued, 
                    global::System.Nullable<double> Original_Retransmits, 
                    global::System.Nullable<double> Original_In_Retr_Mode) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.DateTime)(Original_Poll_Time));
            if ((Original_Conn_PID == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Conn_PID));
            }
            if ((Original_Conn_Phase == null)) {
                throw new global::System.ArgumentNullException("Original_Conn_Phase");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Conn_Phase));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((double)(Original_Local_Port));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_Foreign_Port));
            if ((Original_Foreign_IP == null)) {
                throw new global::System.ArgumentNullException("Original_Foreign_IP");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_Foreign_IP));
            }
            this.Adapter.DeleteCommand.Parameters[8].Value = ((double)(Original_CCIDENT));
            if ((Original_Conn_Start_Time.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_Conn_Start_Time.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_INT_EXT == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_INT_EXT));
            }
            if ((Original_Conn_State == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_Conn_State));
            }
            if ((Original_Conn_Protocol == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_Conn_Protocol));
            }
            if ((Original_Highest_Depth.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((double)(Original_Highest_Depth.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_Max_Send_Window.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((double)(Original_Max_Send_Window.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_Max_Recv_Window.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((double)(Original_Max_Recv_Window.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_Recv_Window_Closed.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((double)(Original_Recv_Window_Closed.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_SWS_Count.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((double)(Original_SWS_Count.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_Inbound_Data.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((double)(Original_Inbound_Data.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_Inbound_Bytes.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((double)(Original_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_Inbound_Data_Dup.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((double)(Original_Inbound_Data_Dup.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_Inbound_Bytes_Dup.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((double)(Original_Inbound_Bytes_Dup.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_Inbound_Eff.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((double)(Original_Inbound_Eff.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_Outbound_Data.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((double)(Original_Outbound_Data.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_Outbound_Bytes.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((double)(Original_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_Outbound_Data_Retr.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[42].Value = ((double)(Original_Outbound_Data_Retr.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_Outbound_Bytes_Retr.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[44].Value = ((double)(Original_Outbound_Bytes_Retr.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_Outbound_Eff.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[46].Value = ((double)(Original_Outbound_Eff.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_Recvs_Issued.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[48].Value = ((double)(Original_Recvs_Issued.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_Sends_Issued.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[50].Value = ((double)(Original_Sends_Issued.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_Retransmits.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[52].Value = ((double)(Original_Retransmits.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_In_Retr_Mode.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[54].Value = ((double)(Original_In_Retr_Mode.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    System.DateTime Poll_Time, 
                    string Conn_PID, 
                    string Conn_Phase, 
                    double Local_Port, 
                    double Foreign_Port, 
                    string Foreign_IP, 
                    double CCIDENT, 
                    global::System.Nullable<global::System.DateTime> Conn_Start_Time, 
                    string INT_EXT, 
                    string Conn_State, 
                    string Conn_Protocol, 
                    global::System.Nullable<double> Highest_Depth, 
                    global::System.Nullable<double> Max_Send_Window, 
                    global::System.Nullable<double> Max_Recv_Window, 
                    global::System.Nullable<double> Recv_Window_Closed, 
                    global::System.Nullable<double> SWS_Count, 
                    global::System.Nullable<double> Inbound_Data, 
                    global::System.Nullable<double> Inbound_Bytes, 
                    global::System.Nullable<double> Inbound_Data_Dup, 
                    global::System.Nullable<double> Inbound_Bytes_Dup, 
                    global::System.Nullable<double> Inbound_Eff, 
                    global::System.Nullable<double> Outbound_Data, 
                    global::System.Nullable<double> Outbound_Bytes, 
                    global::System.Nullable<double> Outbound_Data_Retr, 
                    global::System.Nullable<double> Outbound_Bytes_Retr, 
                    global::System.Nullable<double> Outbound_Eff, 
                    global::System.Nullable<double> Recvs_Issued, 
                    global::System.Nullable<double> Sends_Issued, 
                    global::System.Nullable<double> Retransmits, 
                    global::System.Nullable<double> In_Retr_Mode) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(Poll_Time));
            if ((Conn_PID == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Conn_PID));
            }
            if ((Conn_Phase == null)) {
                throw new global::System.ArgumentNullException("Conn_Phase");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Conn_Phase));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((double)(Local_Port));
            this.Adapter.InsertCommand.Parameters[4].Value = ((double)(Foreign_Port));
            if ((Foreign_IP == null)) {
                throw new global::System.ArgumentNullException("Foreign_IP");
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Foreign_IP));
            }
            this.Adapter.InsertCommand.Parameters[6].Value = ((double)(CCIDENT));
            if ((Conn_Start_Time.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((System.DateTime)(Conn_Start_Time.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((INT_EXT == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(INT_EXT));
            }
            if ((Conn_State == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Conn_State));
            }
            if ((Conn_Protocol == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(Conn_Protocol));
            }
            if ((Highest_Depth.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((double)(Highest_Depth.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Max_Send_Window.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((double)(Max_Send_Window.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Max_Recv_Window.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((double)(Max_Recv_Window.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Recv_Window_Closed.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((double)(Recv_Window_Closed.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((SWS_Count.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((double)(SWS_Count.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Inbound_Data.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((double)(Inbound_Data.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Inbound_Bytes.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((double)(Inbound_Bytes.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Inbound_Data_Dup.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((double)(Inbound_Data_Dup.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Inbound_Bytes_Dup.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((double)(Inbound_Bytes_Dup.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Inbound_Eff.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((double)(Inbound_Eff.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Outbound_Data.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((double)(Outbound_Data.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Outbound_Bytes.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((double)(Outbound_Bytes.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Outbound_Data_Retr.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((double)(Outbound_Data_Retr.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Outbound_Bytes_Retr.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((double)(Outbound_Bytes_Retr.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Outbound_Eff.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((double)(Outbound_Eff.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Recvs_Issued.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((double)(Recvs_Issued.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Sends_Issued.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((double)(Sends_Issued.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Retransmits.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((double)(Retransmits.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((In_Retr_Mode.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[29].Value = ((double)(In_Retr_Mode.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime Poll_Time, 
                    string Conn_PID, 
                    string Conn_Phase, 
                    double Local_Port, 
                    double Foreign_Port, 
                    string Foreign_IP, 
                    double CCIDENT, 
                    global::System.Nullable<global::System.DateTime> Conn_Start_Time, 
                    string INT_EXT, 
                    string Conn_State, 
                    string Conn_Protocol, 
                    global::System.Nullable<double> Highest_Depth, 
                    global::System.Nullable<double> Max_Send_Window, 
                    global::System.Nullable<double> Max_Recv_Window, 
                    global::System.Nullable<double> Recv_Window_Closed, 
                    global::System.Nullable<double> SWS_Count, 
                    global::System.Nullable<double> Inbound_Data, 
                    global::System.Nullable<double> Inbound_Bytes, 
                    global::System.Nullable<double> Inbound_Data_Dup, 
                    global::System.Nullable<double> Inbound_Bytes_Dup, 
                    global::System.Nullable<double> Inbound_Eff, 
                    global::System.Nullable<double> Outbound_Data, 
                    global::System.Nullable<double> Outbound_Bytes, 
                    global::System.Nullable<double> Outbound_Data_Retr, 
                    global::System.Nullable<double> Outbound_Bytes_Retr, 
                    global::System.Nullable<double> Outbound_Eff, 
                    global::System.Nullable<double> Recvs_Issued, 
                    global::System.Nullable<double> Sends_Issued, 
                    global::System.Nullable<double> Retransmits, 
                    global::System.Nullable<double> In_Retr_Mode, 
                    System.DateTime Original_Poll_Time, 
                    string Original_Conn_PID, 
                    string Original_Conn_Phase, 
                    double Original_Local_Port, 
                    double Original_Foreign_Port, 
                    string Original_Foreign_IP, 
                    double Original_CCIDENT, 
                    global::System.Nullable<global::System.DateTime> Original_Conn_Start_Time, 
                    string Original_INT_EXT, 
                    string Original_Conn_State, 
                    string Original_Conn_Protocol, 
                    global::System.Nullable<double> Original_Highest_Depth, 
                    global::System.Nullable<double> Original_Max_Send_Window, 
                    global::System.Nullable<double> Original_Max_Recv_Window, 
                    global::System.Nullable<double> Original_Recv_Window_Closed, 
                    global::System.Nullable<double> Original_SWS_Count, 
                    global::System.Nullable<double> Original_Inbound_Data, 
                    global::System.Nullable<double> Original_Inbound_Bytes, 
                    global::System.Nullable<double> Original_Inbound_Data_Dup, 
                    global::System.Nullable<double> Original_Inbound_Bytes_Dup, 
                    global::System.Nullable<double> Original_Inbound_Eff, 
                    global::System.Nullable<double> Original_Outbound_Data, 
                    global::System.Nullable<double> Original_Outbound_Bytes, 
                    global::System.Nullable<double> Original_Outbound_Data_Retr, 
                    global::System.Nullable<double> Original_Outbound_Bytes_Retr, 
                    global::System.Nullable<double> Original_Outbound_Eff, 
                    global::System.Nullable<double> Original_Recvs_Issued, 
                    global::System.Nullable<double> Original_Sends_Issued, 
                    global::System.Nullable<double> Original_Retransmits, 
                    global::System.Nullable<double> Original_In_Retr_Mode) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(Poll_Time));
            if ((Conn_PID == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Conn_PID));
            }
            if ((Conn_Phase == null)) {
                throw new global::System.ArgumentNullException("Conn_Phase");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Conn_Phase));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(Local_Port));
            this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(Foreign_Port));
            if ((Foreign_IP == null)) {
                throw new global::System.ArgumentNullException("Foreign_IP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Foreign_IP));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(CCIDENT));
            if ((Conn_Start_Time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(Conn_Start_Time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((INT_EXT == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(INT_EXT));
            }
            if ((Conn_State == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Conn_State));
            }
            if ((Conn_Protocol == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Conn_Protocol));
            }
            if ((Highest_Depth.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((double)(Highest_Depth.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Max_Send_Window.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((double)(Max_Send_Window.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Max_Recv_Window.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((double)(Max_Recv_Window.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Recv_Window_Closed.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(Recv_Window_Closed.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((SWS_Count.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((double)(SWS_Count.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Inbound_Data.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((double)(Inbound_Data.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Inbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((double)(Inbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Inbound_Data_Dup.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((double)(Inbound_Data_Dup.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Inbound_Bytes_Dup.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((double)(Inbound_Bytes_Dup.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Inbound_Eff.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((double)(Inbound_Eff.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Outbound_Data.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((double)(Outbound_Data.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Outbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((double)(Outbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Outbound_Data_Retr.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((double)(Outbound_Data_Retr.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Outbound_Bytes_Retr.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((double)(Outbound_Bytes_Retr.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Outbound_Eff.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((double)(Outbound_Eff.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Recvs_Issued.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((double)(Recvs_Issued.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Sends_Issued.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((double)(Sends_Issued.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Retransmits.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((double)(Retransmits.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((In_Retr_Mode.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((double)(In_Retr_Mode.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[30].Value = ((System.DateTime)(Original_Poll_Time));
            if ((Original_Conn_PID == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_Conn_PID));
            }
            if ((Original_Conn_Phase == null)) {
                throw new global::System.ArgumentNullException("Original_Conn_Phase");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_Conn_Phase));
            }
            this.Adapter.UpdateCommand.Parameters[35].Value = ((double)(Original_Local_Port));
            this.Adapter.UpdateCommand.Parameters[36].Value = ((double)(Original_Foreign_Port));
            if ((Original_Foreign_IP == null)) {
                throw new global::System.ArgumentNullException("Original_Foreign_IP");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((string)(Original_Foreign_IP));
            }
            this.Adapter.UpdateCommand.Parameters[38].Value = ((double)(Original_CCIDENT));
            if ((Original_Conn_Start_Time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((System.DateTime)(Original_Conn_Start_Time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_INT_EXT == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_INT_EXT));
            }
            if ((Original_Conn_State == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_Conn_State));
            }
            if ((Original_Conn_Protocol == null)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((string)(Original_Conn_Protocol));
            }
            if ((Original_Highest_Depth.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((double)(Original_Highest_Depth.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_Max_Send_Window.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((double)(Original_Max_Send_Window.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_Max_Recv_Window.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((double)(Original_Max_Recv_Window.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_Recv_Window_Closed.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((double)(Original_Recv_Window_Closed.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_SWS_Count.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[56].Value = ((double)(Original_SWS_Count.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_Inbound_Data.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((double)(Original_Inbound_Data.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_Inbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((double)(Original_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_Inbound_Data_Dup.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((double)(Original_Inbound_Data_Dup.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Original_Inbound_Bytes_Dup.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((double)(Original_Inbound_Bytes_Dup.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Original_Inbound_Eff.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[66].Value = ((double)(Original_Inbound_Eff.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Original_Outbound_Data.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[68].Value = ((double)(Original_Outbound_Data.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((Original_Outbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[70].Value = ((double)(Original_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((Original_Outbound_Data_Retr.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[72].Value = ((double)(Original_Outbound_Data_Retr.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((Original_Outbound_Bytes_Retr.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[74].Value = ((double)(Original_Outbound_Bytes_Retr.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((Original_Outbound_Eff.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[76].Value = ((double)(Original_Outbound_Eff.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((Original_Recvs_Issued.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[78].Value = ((double)(Original_Recvs_Issued.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((Original_Sends_Issued.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[80].Value = ((double)(Original_Sends_Issued.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((Original_Retransmits.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[82].Value = ((double)(Original_Retransmits.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((Original_In_Retr_Mode.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[84].Value = ((double)(Original_In_Retr_Mode.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Conn_PID, 
                    string Conn_Phase, 
                    global::System.Nullable<global::System.DateTime> Conn_Start_Time, 
                    string INT_EXT, 
                    string Conn_State, 
                    string Conn_Protocol, 
                    global::System.Nullable<double> Highest_Depth, 
                    global::System.Nullable<double> Max_Send_Window, 
                    global::System.Nullable<double> Max_Recv_Window, 
                    global::System.Nullable<double> Recv_Window_Closed, 
                    global::System.Nullable<double> SWS_Count, 
                    global::System.Nullable<double> Inbound_Data, 
                    global::System.Nullable<double> Inbound_Bytes, 
                    global::System.Nullable<double> Inbound_Data_Dup, 
                    global::System.Nullable<double> Inbound_Bytes_Dup, 
                    global::System.Nullable<double> Inbound_Eff, 
                    global::System.Nullable<double> Outbound_Data, 
                    global::System.Nullable<double> Outbound_Bytes, 
                    global::System.Nullable<double> Outbound_Data_Retr, 
                    global::System.Nullable<double> Outbound_Bytes_Retr, 
                    global::System.Nullable<double> Outbound_Eff, 
                    global::System.Nullable<double> Recvs_Issued, 
                    global::System.Nullable<double> Sends_Issued, 
                    global::System.Nullable<double> Retransmits, 
                    global::System.Nullable<double> In_Retr_Mode, 
                    System.DateTime Original_Poll_Time, 
                    string Original_Conn_PID, 
                    string Original_Conn_Phase, 
                    double Original_Local_Port, 
                    double Original_Foreign_Port, 
                    string Original_Foreign_IP, 
                    double Original_CCIDENT, 
                    global::System.Nullable<global::System.DateTime> Original_Conn_Start_Time, 
                    string Original_INT_EXT, 
                    string Original_Conn_State, 
                    string Original_Conn_Protocol, 
                    global::System.Nullable<double> Original_Highest_Depth, 
                    global::System.Nullable<double> Original_Max_Send_Window, 
                    global::System.Nullable<double> Original_Max_Recv_Window, 
                    global::System.Nullable<double> Original_Recv_Window_Closed, 
                    global::System.Nullable<double> Original_SWS_Count, 
                    global::System.Nullable<double> Original_Inbound_Data, 
                    global::System.Nullable<double> Original_Inbound_Bytes, 
                    global::System.Nullable<double> Original_Inbound_Data_Dup, 
                    global::System.Nullable<double> Original_Inbound_Bytes_Dup, 
                    global::System.Nullable<double> Original_Inbound_Eff, 
                    global::System.Nullable<double> Original_Outbound_Data, 
                    global::System.Nullable<double> Original_Outbound_Bytes, 
                    global::System.Nullable<double> Original_Outbound_Data_Retr, 
                    global::System.Nullable<double> Original_Outbound_Bytes_Retr, 
                    global::System.Nullable<double> Original_Outbound_Eff, 
                    global::System.Nullable<double> Original_Recvs_Issued, 
                    global::System.Nullable<double> Original_Sends_Issued, 
                    global::System.Nullable<double> Original_Retransmits, 
                    global::System.Nullable<double> Original_In_Retr_Mode) {
            return this.Update(Original_Poll_Time, Conn_PID, Conn_Phase, Original_Local_Port, Original_Foreign_Port, Original_Foreign_IP, Original_CCIDENT, Conn_Start_Time, INT_EXT, Conn_State, Conn_Protocol, Highest_Depth, Max_Send_Window, Max_Recv_Window, Recv_Window_Closed, SWS_Count, Inbound_Data, Inbound_Bytes, Inbound_Data_Dup, Inbound_Bytes_Dup, Inbound_Eff, Outbound_Data, Outbound_Bytes, Outbound_Data_Retr, Outbound_Bytes_Retr, Outbound_Eff, Recvs_Issued, Sends_Issued, Retransmits, In_Retr_Mode, Original_Poll_Time, Original_Conn_PID, Original_Conn_Phase, Original_Local_Port, Original_Foreign_Port, Original_Foreign_IP, Original_CCIDENT, Original_Conn_Start_Time, Original_INT_EXT, Original_Conn_State, Original_Conn_Protocol, Original_Highest_Depth, Original_Max_Send_Window, Original_Max_Recv_Window, Original_Recv_Window_Closed, Original_SWS_Count, Original_Inbound_Data, Original_Inbound_Bytes, Original_Inbound_Data_Dup, Original_Inbound_Bytes_Dup, Original_Inbound_Eff, Original_Outbound_Data, Original_Outbound_Bytes, Original_Outbound_Data_Retr, Original_Outbound_Bytes_Retr, Original_Outbound_Eff, Original_Recvs_Issued, Original_Sends_Issued, Original_Retransmits, Original_In_Retr_Mode);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CPU_StatsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CPU_StatsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CPU_Stats";
            tableMapping.ColumnMappings.Add("Poll_Time", "Poll_Time");
            tableMapping.ColumnMappings.Add("CPU_ID", "CPU_ID");
            tableMapping.ColumnMappings.Add("CPU_State", "CPU_State");
            tableMapping.ColumnMappings.Add("Dispatch_Cycles", "Dispatch_Cycles");
            tableMapping.ColumnMappings.Add("NonVSE_sec", "NonVSE_sec");
            tableMapping.ColumnMappings.Add("Spin_sec", "Spin_sec");
            tableMapping.ColumnMappings.Add("Waiting_sec", "Waiting_sec");
            tableMapping.ColumnMappings.Add("Busy_P_sec", "Busy_P_sec");
            tableMapping.ColumnMappings.Add("Busy_NonP_sec", "Busy_NonP_sec");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[CPU_Stats] WHERE (([Poll_Time] = @Original_Poll_Time) AND ([CPU_ID] = @Original_CPU_ID) AND ((@IsNull_CPU_State = 1 AND [CPU_State] IS NULL) OR ([CPU_State] = @Original_CPU_State)) AND ((@IsNull_Dispatch_Cycles = 1 AND [Dispatch_Cycles] IS NULL) OR ([Dispatch_Cycles] = @Original_Dispatch_Cycles)) AND ((@IsNull_NonVSE_sec = 1 AND [NonVSE_sec] IS NULL) OR ([NonVSE_sec] = @Original_NonVSE_sec)) AND ((@IsNull_Spin_sec = 1 AND [Spin_sec] IS NULL) OR ([Spin_sec] = @Original_Spin_sec)) AND ((@IsNull_Waiting_sec = 1 AND [Waiting_sec] IS NULL) OR ([Waiting_sec] = @Original_Waiting_sec)) AND ((@IsNull_Busy_P_sec = 1 AND [Busy_P_sec] IS NULL) OR ([Busy_P_sec] = @Original_Busy_P_sec)) AND ((@IsNull_Busy_NonP_sec = 1 AND [Busy_NonP_sec] IS NULL) OR ([Busy_NonP_sec] = @Original_Busy_NonP_sec)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CPU_ID", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CPU_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CPU_State", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CPU_State", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CPU_State", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CPU_State", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Dispatch_Cycles", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dispatch_Cycles", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dispatch_Cycles", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dispatch_Cycles", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NonVSE_sec", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NonVSE_sec", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NonVSE_sec", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NonVSE_sec", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Spin_sec", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spin_sec", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Spin_sec", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spin_sec", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Waiting_sec", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Waiting_sec", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Waiting_sec", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Waiting_sec", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Busy_P_sec", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Busy_P_sec", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Busy_P_sec", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Busy_P_sec", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Busy_NonP_sec", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Busy_NonP_sec", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Busy_NonP_sec", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Busy_NonP_sec", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[CPU_Stats] ([Poll_Time], [CPU_ID], [CPU_State], [Dispatch_Cycles], [NonVSE_sec], [Spin_sec], [Waiting_sec], [Busy_P_sec], [Busy_NonP_sec]) VALUES (@Poll_Time, @CPU_ID, @CPU_State, @Dispatch_Cycles, @NonVSE_sec, @Spin_sec, @Waiting_sec, @Busy_P_sec, @Busy_NonP_sec);
SELECT Poll_Time, CPU_ID, CPU_State, Dispatch_Cycles, NonVSE_sec, Spin_sec, Waiting_sec, Busy_P_sec, Busy_NonP_sec FROM CPU_Stats WHERE (CPU_ID = @CPU_ID) AND (Poll_Time = @Poll_Time)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CPU_ID", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CPU_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CPU_State", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CPU_State", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dispatch_Cycles", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dispatch_Cycles", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NonVSE_sec", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NonVSE_sec", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Spin_sec", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spin_sec", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Waiting_sec", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Waiting_sec", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Busy_P_sec", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Busy_P_sec", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Busy_NonP_sec", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Busy_NonP_sec", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[CPU_Stats] SET [Poll_Time] = @Poll_Time, [CPU_ID] = @CPU_ID, [CPU_State] = @CPU_State, [Dispatch_Cycles] = @Dispatch_Cycles, [NonVSE_sec] = @NonVSE_sec, [Spin_sec] = @Spin_sec, [Waiting_sec] = @Waiting_sec, [Busy_P_sec] = @Busy_P_sec, [Busy_NonP_sec] = @Busy_NonP_sec WHERE (([Poll_Time] = @Original_Poll_Time) AND ([CPU_ID] = @Original_CPU_ID) AND ((@IsNull_CPU_State = 1 AND [CPU_State] IS NULL) OR ([CPU_State] = @Original_CPU_State)) AND ((@IsNull_Dispatch_Cycles = 1 AND [Dispatch_Cycles] IS NULL) OR ([Dispatch_Cycles] = @Original_Dispatch_Cycles)) AND ((@IsNull_NonVSE_sec = 1 AND [NonVSE_sec] IS NULL) OR ([NonVSE_sec] = @Original_NonVSE_sec)) AND ((@IsNull_Spin_sec = 1 AND [Spin_sec] IS NULL) OR ([Spin_sec] = @Original_Spin_sec)) AND ((@IsNull_Waiting_sec = 1 AND [Waiting_sec] IS NULL) OR ([Waiting_sec] = @Original_Waiting_sec)) AND ((@IsNull_Busy_P_sec = 1 AND [Busy_P_sec] IS NULL) OR ([Busy_P_sec] = @Original_Busy_P_sec)) AND ((@IsNull_Busy_NonP_sec = 1 AND [Busy_NonP_sec] IS NULL) OR ([Busy_NonP_sec] = @Original_Busy_NonP_sec)));
SELECT Poll_Time, CPU_ID, CPU_State, Dispatch_Cycles, NonVSE_sec, Spin_sec, Waiting_sec, Busy_P_sec, Busy_NonP_sec FROM CPU_Stats WHERE (CPU_ID = @CPU_ID) AND (Poll_Time = @Poll_Time)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CPU_ID", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CPU_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CPU_State", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CPU_State", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dispatch_Cycles", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dispatch_Cycles", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NonVSE_sec", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NonVSE_sec", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Spin_sec", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spin_sec", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Waiting_sec", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Waiting_sec", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Busy_P_sec", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Busy_P_sec", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Busy_NonP_sec", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Busy_NonP_sec", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CPU_ID", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CPU_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CPU_State", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CPU_State", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CPU_State", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CPU_State", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Dispatch_Cycles", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dispatch_Cycles", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dispatch_Cycles", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dispatch_Cycles", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NonVSE_sec", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NonVSE_sec", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NonVSE_sec", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NonVSE_sec", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Spin_sec", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spin_sec", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Spin_sec", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Spin_sec", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Waiting_sec", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Waiting_sec", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Waiting_sec", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Waiting_sec", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Busy_P_sec", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Busy_P_sec", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Busy_P_sec", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Busy_P_sec", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Busy_NonP_sec", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Busy_NonP_sec", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Busy_NonP_sec", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Busy_NonP_sec", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=DANSDELL\\SQLEXPRESS;Initial Catalog=VseDb;Integrated Security=True";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Poll_Time, CPU_ID, CPU_State, Dispatch_Cycles, NonVSE_sec, Spin_sec, Waiti" +
                "ng_sec, Busy_P_sec, Busy_NonP_sec FROM dbo.CPU_Stats";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     Poll_Time, CPU_ID, CPU_State, Dispatch_Cycles, NonVSE_sec, Spin_sec, W" +
                "aiting_sec, Busy_P_sec, Busy_NonP_sec\r\nFROM         CPU_Stats\r\nWHERE     (Poll_T" +
                "ime = @pollTime)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pollTime", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(VseDbDataSet.CPU_StatsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual VseDbDataSet.CPU_StatsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            VseDbDataSet.CPU_StatsDataTable dataTable = new VseDbDataSet.CPU_StatsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(VseDbDataSet.CPU_StatsDataTable dataTable, System.DateTime pollTime) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(pollTime));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual VseDbDataSet.CPU_StatsDataTable GetDataBy(System.DateTime pollTime) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(pollTime));
            VseDbDataSet.CPU_StatsDataTable dataTable = new VseDbDataSet.CPU_StatsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet.CPU_StatsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet dataSet) {
            return this.Adapter.Update(dataSet, "CPU_Stats");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(System.DateTime Original_Poll_Time, double Original_CPU_ID, string Original_CPU_State, global::System.Nullable<double> Original_Dispatch_Cycles, global::System.Nullable<double> Original_NonVSE_sec, global::System.Nullable<double> Original_Spin_sec, global::System.Nullable<double> Original_Waiting_sec, global::System.Nullable<double> Original_Busy_P_sec, global::System.Nullable<double> Original_Busy_NonP_sec) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.DateTime)(Original_Poll_Time));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((double)(Original_CPU_ID));
            if ((Original_CPU_State == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_CPU_State));
            }
            if ((Original_Dispatch_Cycles.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((double)(Original_Dispatch_Cycles.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_NonVSE_sec.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((double)(Original_NonVSE_sec.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_Spin_sec.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((double)(Original_Spin_sec.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_Waiting_sec.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((double)(Original_Waiting_sec.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_Busy_P_sec.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((double)(Original_Busy_P_sec.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_Busy_NonP_sec.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((double)(Original_Busy_NonP_sec.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.DateTime Poll_Time, double CPU_ID, string CPU_State, global::System.Nullable<double> Dispatch_Cycles, global::System.Nullable<double> NonVSE_sec, global::System.Nullable<double> Spin_sec, global::System.Nullable<double> Waiting_sec, global::System.Nullable<double> Busy_P_sec, global::System.Nullable<double> Busy_NonP_sec) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(Poll_Time));
            this.Adapter.InsertCommand.Parameters[1].Value = ((double)(CPU_ID));
            if ((CPU_State == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(CPU_State));
            }
            if ((Dispatch_Cycles.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(Dispatch_Cycles.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((NonVSE_sec.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(NonVSE_sec.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Spin_sec.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(Spin_sec.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Waiting_sec.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(Waiting_sec.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Busy_P_sec.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(Busy_P_sec.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Busy_NonP_sec.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(Busy_NonP_sec.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime Poll_Time, 
                    double CPU_ID, 
                    string CPU_State, 
                    global::System.Nullable<double> Dispatch_Cycles, 
                    global::System.Nullable<double> NonVSE_sec, 
                    global::System.Nullable<double> Spin_sec, 
                    global::System.Nullable<double> Waiting_sec, 
                    global::System.Nullable<double> Busy_P_sec, 
                    global::System.Nullable<double> Busy_NonP_sec, 
                    System.DateTime Original_Poll_Time, 
                    double Original_CPU_ID, 
                    string Original_CPU_State, 
                    global::System.Nullable<double> Original_Dispatch_Cycles, 
                    global::System.Nullable<double> Original_NonVSE_sec, 
                    global::System.Nullable<double> Original_Spin_sec, 
                    global::System.Nullable<double> Original_Waiting_sec, 
                    global::System.Nullable<double> Original_Busy_P_sec, 
                    global::System.Nullable<double> Original_Busy_NonP_sec) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(Poll_Time));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((double)(CPU_ID));
            if ((CPU_State == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(CPU_State));
            }
            if ((Dispatch_Cycles.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(Dispatch_Cycles.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((NonVSE_sec.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(NonVSE_sec.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Spin_sec.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(Spin_sec.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Waiting_sec.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(Waiting_sec.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Busy_P_sec.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(Busy_P_sec.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Busy_NonP_sec.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(Busy_NonP_sec.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Original_Poll_Time));
            this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(Original_CPU_ID));
            if ((Original_CPU_State == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_CPU_State));
            }
            if ((Original_Dispatch_Cycles.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(Original_Dispatch_Cycles.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_NonVSE_sec.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((double)(Original_NonVSE_sec.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_Spin_sec.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((double)(Original_Spin_sec.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_Waiting_sec.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((double)(Original_Waiting_sec.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_Busy_P_sec.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((double)(Original_Busy_P_sec.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_Busy_NonP_sec.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((double)(Original_Busy_NonP_sec.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string CPU_State, 
                    global::System.Nullable<double> Dispatch_Cycles, 
                    global::System.Nullable<double> NonVSE_sec, 
                    global::System.Nullable<double> Spin_sec, 
                    global::System.Nullable<double> Waiting_sec, 
                    global::System.Nullable<double> Busy_P_sec, 
                    global::System.Nullable<double> Busy_NonP_sec, 
                    System.DateTime Original_Poll_Time, 
                    double Original_CPU_ID, 
                    string Original_CPU_State, 
                    global::System.Nullable<double> Original_Dispatch_Cycles, 
                    global::System.Nullable<double> Original_NonVSE_sec, 
                    global::System.Nullable<double> Original_Spin_sec, 
                    global::System.Nullable<double> Original_Waiting_sec, 
                    global::System.Nullable<double> Original_Busy_P_sec, 
                    global::System.Nullable<double> Original_Busy_NonP_sec) {
            return this.Update(Original_Poll_Time, Original_CPU_ID, CPU_State, Dispatch_Cycles, NonVSE_sec, Spin_sec, Waiting_sec, Busy_P_sec, Busy_NonP_sec, Original_Poll_Time, Original_CPU_ID, Original_CPU_State, Original_Dispatch_Cycles, Original_NonVSE_sec, Original_Spin_sec, Original_Waiting_sec, Original_Busy_P_sec, Original_Busy_NonP_sec);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ForeignIP_StatsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ForeignIP_StatsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ForeignIP_Stats";
            tableMapping.ColumnMappings.Add("Poll_Time", "Poll_Time");
            tableMapping.ColumnMappings.Add("IP_Address", "IP_Address");
            tableMapping.ColumnMappings.Add("Refuse_Flag", "Refuse_Flag");
            tableMapping.ColumnMappings.Add("Misdirected_IP_Datagrams", "Misdirected_IP_Datagrams");
            tableMapping.ColumnMappings.Add("NonIP_Datagrams", "NonIP_Datagrams");
            tableMapping.ColumnMappings.Add("ARP_Inbound_Datagrams", "ARP_Inbound_Datagrams");
            tableMapping.ColumnMappings.Add("ARP_Outbound_Datagrams", "ARP_Outbound_Datagrams");
            tableMapping.ColumnMappings.Add("ICMP_Inbound_Datagrams", "ICMP_Inbound_Datagrams");
            tableMapping.ColumnMappings.Add("ICMP_Outbound_Datagrams", "ICMP_Outbound_Datagrams");
            tableMapping.ColumnMappings.Add("IP_Inbound_Datagrams", "IP_Inbound_Datagrams");
            tableMapping.ColumnMappings.Add("IP_Outbound_Datagrams", "IP_Outbound_Datagrams");
            tableMapping.ColumnMappings.Add("TCP_Inbound_Datagrams", "TCP_Inbound_Datagrams");
            tableMapping.ColumnMappings.Add("TCP_Outbound_Datagrams", "TCP_Outbound_Datagrams");
            tableMapping.ColumnMappings.Add("UDP_Inbound_Datagrams", "UDP_Inbound_Datagrams");
            tableMapping.ColumnMappings.Add("UDP_Outbound_Datagrams", "UDP_Outbound_Datagrams");
            tableMapping.ColumnMappings.Add("Misdirected_IP_Bytes", "Misdirected_IP_Bytes");
            tableMapping.ColumnMappings.Add("NonIP_Bytes", "NonIP_Bytes");
            tableMapping.ColumnMappings.Add("ARP_Inbound_Bytes", "ARP_Inbound_Bytes");
            tableMapping.ColumnMappings.Add("ARP_Outbound_Bytes", "ARP_Outbound_Bytes");
            tableMapping.ColumnMappings.Add("ICMP_Inbound_Bytes", "ICMP_Inbound_Bytes");
            tableMapping.ColumnMappings.Add("ICMP_Outbound_Bytes", "ICMP_Outbound_Bytes");
            tableMapping.ColumnMappings.Add("IP_Inbound_Bytes", "IP_Inbound_Bytes");
            tableMapping.ColumnMappings.Add("IP_Outbound_Bytes", "IP_Outbound_Bytes");
            tableMapping.ColumnMappings.Add("TCP_Inbound_Bytes", "TCP_Inbound_Bytes");
            tableMapping.ColumnMappings.Add("TCP_Outbound_Bytes", "TCP_Outbound_Bytes");
            tableMapping.ColumnMappings.Add("UDP_Inbound_Bytes", "UDP_Inbound_Bytes");
            tableMapping.ColumnMappings.Add("UDP_Outbound_Bytes", "UDP_Outbound_Bytes");
            tableMapping.ColumnMappings.Add("Refused_Bytes", "Refused_Bytes");
            tableMapping.ColumnMappings.Add("Refused_Datagrams", "Refused_Datagrams");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[ForeignIP_Stats] WHERE (([Poll_Time] = @Original_Poll_Time) AN" +
                "D ([IP_Address] = @Original_IP_Address) AND ((@IsNull_Refuse_Flag = 1 AND [Refus" +
                "e_Flag] IS NULL) OR ([Refuse_Flag] = @Original_Refuse_Flag)) AND ((@IsNull_Misdi" +
                "rected_IP_Datagrams = 1 AND [Misdirected_IP_Datagrams] IS NULL) OR ([Misdirected" +
                "_IP_Datagrams] = @Original_Misdirected_IP_Datagrams)) AND ((@IsNull_NonIP_Datagr" +
                "ams = 1 AND [NonIP_Datagrams] IS NULL) OR ([NonIP_Datagrams] = @Original_NonIP_D" +
                "atagrams)) AND ((@IsNull_ARP_Inbound_Datagrams = 1 AND [ARP_Inbound_Datagrams] I" +
                "S NULL) OR ([ARP_Inbound_Datagrams] = @Original_ARP_Inbound_Datagrams)) AND ((@I" +
                "sNull_ARP_Outbound_Datagrams = 1 AND [ARP_Outbound_Datagrams] IS NULL) OR ([ARP_" +
                "Outbound_Datagrams] = @Original_ARP_Outbound_Datagrams)) AND ((@IsNull_ICMP_Inbo" +
                "und_Datagrams = 1 AND [ICMP_Inbound_Datagrams] IS NULL) OR ([ICMP_Inbound_Datagr" +
                "ams] = @Original_ICMP_Inbound_Datagrams)) AND ((@IsNull_ICMP_Outbound_Datagrams " +
                "= 1 AND [ICMP_Outbound_Datagrams] IS NULL) OR ([ICMP_Outbound_Datagrams] = @Orig" +
                "inal_ICMP_Outbound_Datagrams)) AND ((@IsNull_IP_Inbound_Datagrams = 1 AND [IP_In" +
                "bound_Datagrams] IS NULL) OR ([IP_Inbound_Datagrams] = @Original_IP_Inbound_Data" +
                "grams)) AND ((@IsNull_IP_Outbound_Datagrams = 1 AND [IP_Outbound_Datagrams] IS N" +
                "ULL) OR ([IP_Outbound_Datagrams] = @Original_IP_Outbound_Datagrams)) AND ((@IsNu" +
                "ll_TCP_Inbound_Datagrams = 1 AND [TCP_Inbound_Datagrams] IS NULL) OR ([TCP_Inbou" +
                "nd_Datagrams] = @Original_TCP_Inbound_Datagrams)) AND ((@IsNull_TCP_Outbound_Dat" +
                "agrams = 1 AND [TCP_Outbound_Datagrams] IS NULL) OR ([TCP_Outbound_Datagrams] = " +
                "@Original_TCP_Outbound_Datagrams)) AND ((@IsNull_UDP_Inbound_Datagrams = 1 AND [" +
                "UDP_Inbound_Datagrams] IS NULL) OR ([UDP_Inbound_Datagrams] = @Original_UDP_Inbo" +
                "und_Datagrams)) AND ((@IsNull_UDP_Outbound_Datagrams = 1 AND [UDP_Outbound_Datag" +
                "rams] IS NULL) OR ([UDP_Outbound_Datagrams] = @Original_UDP_Outbound_Datagrams))" +
                " AND ((@IsNull_Misdirected_IP_Bytes = 1 AND [Misdirected_IP_Bytes] IS NULL) OR (" +
                "[Misdirected_IP_Bytes] = @Original_Misdirected_IP_Bytes)) AND ((@IsNull_NonIP_By" +
                "tes = 1 AND [NonIP_Bytes] IS NULL) OR ([NonIP_Bytes] = @Original_NonIP_Bytes)) A" +
                "ND ((@IsNull_ARP_Inbound_Bytes = 1 AND [ARP_Inbound_Bytes] IS NULL) OR ([ARP_Inb" +
                "ound_Bytes] = @Original_ARP_Inbound_Bytes)) AND ((@IsNull_ARP_Outbound_Bytes = 1" +
                " AND [ARP_Outbound_Bytes] IS NULL) OR ([ARP_Outbound_Bytes] = @Original_ARP_Outb" +
                "ound_Bytes)) AND ((@IsNull_ICMP_Inbound_Bytes = 1 AND [ICMP_Inbound_Bytes] IS NU" +
                "LL) OR ([ICMP_Inbound_Bytes] = @Original_ICMP_Inbound_Bytes)) AND ((@IsNull_ICMP" +
                "_Outbound_Bytes = 1 AND [ICMP_Outbound_Bytes] IS NULL) OR ([ICMP_Outbound_Bytes]" +
                " = @Original_ICMP_Outbound_Bytes)) AND ((@IsNull_IP_Inbound_Bytes = 1 AND [IP_In" +
                "bound_Bytes] IS NULL) OR ([IP_Inbound_Bytes] = @Original_IP_Inbound_Bytes)) AND " +
                "((@IsNull_IP_Outbound_Bytes = 1 AND [IP_Outbound_Bytes] IS NULL) OR ([IP_Outboun" +
                "d_Bytes] = @Original_IP_Outbound_Bytes)) AND ((@IsNull_TCP_Inbound_Bytes = 1 AND" +
                " [TCP_Inbound_Bytes] IS NULL) OR ([TCP_Inbound_Bytes] = @Original_TCP_Inbound_By" +
                "tes)) AND ((@IsNull_TCP_Outbound_Bytes = 1 AND [TCP_Outbound_Bytes] IS NULL) OR " +
                "([TCP_Outbound_Bytes] = @Original_TCP_Outbound_Bytes)) AND ((@IsNull_UDP_Inbound" +
                "_Bytes = 1 AND [UDP_Inbound_Bytes] IS NULL) OR ([UDP_Inbound_Bytes] = @Original_" +
                "UDP_Inbound_Bytes)) AND ((@IsNull_UDP_Outbound_Bytes = 1 AND [UDP_Outbound_Bytes" +
                "] IS NULL) OR ([UDP_Outbound_Bytes] = @Original_UDP_Outbound_Bytes)) AND ((@IsNu" +
                "ll_Refused_Bytes = 1 AND [Refused_Bytes] IS NULL) OR ([Refused_Bytes] = @Origina" +
                "l_Refused_Bytes)) AND ((@IsNull_Refused_Datagrams = 1 AND [Refused_Datagrams] IS" +
                " NULL) OR ([Refused_Datagrams] = @Original_Refused_Datagrams)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Refuse_Flag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Refuse_Flag", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Refuse_Flag", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Refuse_Flag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Misdirected_IP_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Misdirected_IP_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Misdirected_IP_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Misdirected_IP_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NonIP_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NonIP_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NonIP_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NonIP_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ARP_Inbound_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Inbound_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ARP_Inbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Inbound_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ARP_Outbound_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Outbound_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ARP_Outbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Outbound_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ICMP_Inbound_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Inbound_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ICMP_Inbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Inbound_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ICMP_Outbound_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Outbound_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ICMP_Outbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Outbound_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP_Inbound_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Inbound_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP_Inbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Inbound_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP_Outbound_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Outbound_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP_Outbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Outbound_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TCP_Inbound_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Inbound_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TCP_Inbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Inbound_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TCP_Outbound_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Outbound_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TCP_Outbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Outbound_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UDP_Inbound_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Inbound_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UDP_Inbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Inbound_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UDP_Outbound_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Outbound_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UDP_Outbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Outbound_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Misdirected_IP_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Misdirected_IP_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Misdirected_IP_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Misdirected_IP_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NonIP_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NonIP_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NonIP_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NonIP_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ARP_Inbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Inbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ARP_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Inbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ARP_Outbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Outbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ARP_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Outbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ICMP_Inbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Inbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ICMP_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Inbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ICMP_Outbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Outbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ICMP_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Outbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP_Inbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Inbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Inbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP_Outbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Outbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Outbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TCP_Inbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Inbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TCP_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Inbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TCP_Outbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Outbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TCP_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Outbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UDP_Inbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Inbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UDP_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Inbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UDP_Outbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Outbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UDP_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Outbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Refused_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Refused_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Refused_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Refused_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Refused_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Refused_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Refused_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Refused_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[ForeignIP_Stats] ([Poll_Time], [IP_Address], [Refuse_Flag], [M" +
                "isdirected_IP_Datagrams], [NonIP_Datagrams], [ARP_Inbound_Datagrams], [ARP_Outbo" +
                "und_Datagrams], [ICMP_Inbound_Datagrams], [ICMP_Outbound_Datagrams], [IP_Inbound" +
                "_Datagrams], [IP_Outbound_Datagrams], [TCP_Inbound_Datagrams], [TCP_Outbound_Dat" +
                "agrams], [UDP_Inbound_Datagrams], [UDP_Outbound_Datagrams], [Misdirected_IP_Byte" +
                "s], [NonIP_Bytes], [ARP_Inbound_Bytes], [ARP_Outbound_Bytes], [ICMP_Inbound_Byte" +
                "s], [ICMP_Outbound_Bytes], [IP_Inbound_Bytes], [IP_Outbound_Bytes], [TCP_Inbound" +
                "_Bytes], [TCP_Outbound_Bytes], [UDP_Inbound_Bytes], [UDP_Outbound_Bytes], [Refus" +
                "ed_Bytes], [Refused_Datagrams]) VALUES (@Poll_Time, @IP_Address, @Refuse_Flag, @" +
                "Misdirected_IP_Datagrams, @NonIP_Datagrams, @ARP_Inbound_Datagrams, @ARP_Outboun" +
                "d_Datagrams, @ICMP_Inbound_Datagrams, @ICMP_Outbound_Datagrams, @IP_Inbound_Data" +
                "grams, @IP_Outbound_Datagrams, @TCP_Inbound_Datagrams, @TCP_Outbound_Datagrams, " +
                "@UDP_Inbound_Datagrams, @UDP_Outbound_Datagrams, @Misdirected_IP_Bytes, @NonIP_B" +
                "ytes, @ARP_Inbound_Bytes, @ARP_Outbound_Bytes, @ICMP_Inbound_Bytes, @ICMP_Outbou" +
                "nd_Bytes, @IP_Inbound_Bytes, @IP_Outbound_Bytes, @TCP_Inbound_Bytes, @TCP_Outbou" +
                "nd_Bytes, @UDP_Inbound_Bytes, @UDP_Outbound_Bytes, @Refused_Bytes, @Refused_Data" +
                "grams);\r\nSELECT Poll_Time, IP_Address, Refuse_Flag, Misdirected_IP_Datagrams, No" +
                "nIP_Datagrams, ARP_Inbound_Datagrams, ARP_Outbound_Datagrams, ICMP_Inbound_Datag" +
                "rams, ICMP_Outbound_Datagrams, IP_Inbound_Datagrams, IP_Outbound_Datagrams, TCP_" +
                "Inbound_Datagrams, TCP_Outbound_Datagrams, UDP_Inbound_Datagrams, UDP_Outbound_D" +
                "atagrams, Misdirected_IP_Bytes, NonIP_Bytes, ARP_Inbound_Bytes, ARP_Outbound_Byt" +
                "es, ICMP_Inbound_Bytes, ICMP_Outbound_Bytes, IP_Inbound_Bytes, IP_Outbound_Bytes" +
                ", TCP_Inbound_Bytes, TCP_Outbound_Bytes, UDP_Inbound_Bytes, UDP_Outbound_Bytes, " +
                "Refused_Bytes, Refused_Datagrams FROM ForeignIP_Stats WHERE (IP_Address = @IP_Ad" +
                "dress) AND (Poll_Time = @Poll_Time)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Refuse_Flag", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Refuse_Flag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Misdirected_IP_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Misdirected_IP_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NonIP_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NonIP_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ARP_Inbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Inbound_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ARP_Outbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Outbound_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ICMP_Inbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Inbound_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ICMP_Outbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Outbound_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP_Inbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Inbound_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP_Outbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Outbound_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TCP_Inbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Inbound_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TCP_Outbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Outbound_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UDP_Inbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Inbound_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UDP_Outbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Outbound_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Misdirected_IP_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Misdirected_IP_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NonIP_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NonIP_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ARP_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Inbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ARP_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Outbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ICMP_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Inbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ICMP_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Outbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Inbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Outbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TCP_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Inbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TCP_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Outbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UDP_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Inbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UDP_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Outbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Refused_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Refused_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Refused_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Refused_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[ForeignIP_Stats] SET [Poll_Time] = @Poll_Time, [IP_Address] = @IP_A" +
                "ddress, [Refuse_Flag] = @Refuse_Flag, [Misdirected_IP_Datagrams] = @Misdirected_" +
                "IP_Datagrams, [NonIP_Datagrams] = @NonIP_Datagrams, [ARP_Inbound_Datagrams] = @A" +
                "RP_Inbound_Datagrams, [ARP_Outbound_Datagrams] = @ARP_Outbound_Datagrams, [ICMP_" +
                "Inbound_Datagrams] = @ICMP_Inbound_Datagrams, [ICMP_Outbound_Datagrams] = @ICMP_" +
                "Outbound_Datagrams, [IP_Inbound_Datagrams] = @IP_Inbound_Datagrams, [IP_Outbound" +
                "_Datagrams] = @IP_Outbound_Datagrams, [TCP_Inbound_Datagrams] = @TCP_Inbound_Dat" +
                "agrams, [TCP_Outbound_Datagrams] = @TCP_Outbound_Datagrams, [UDP_Inbound_Datagra" +
                "ms] = @UDP_Inbound_Datagrams, [UDP_Outbound_Datagrams] = @UDP_Outbound_Datagrams" +
                ", [Misdirected_IP_Bytes] = @Misdirected_IP_Bytes, [NonIP_Bytes] = @NonIP_Bytes, " +
                "[ARP_Inbound_Bytes] = @ARP_Inbound_Bytes, [ARP_Outbound_Bytes] = @ARP_Outbound_B" +
                "ytes, [ICMP_Inbound_Bytes] = @ICMP_Inbound_Bytes, [ICMP_Outbound_Bytes] = @ICMP_" +
                "Outbound_Bytes, [IP_Inbound_Bytes] = @IP_Inbound_Bytes, [IP_Outbound_Bytes] = @I" +
                "P_Outbound_Bytes, [TCP_Inbound_Bytes] = @TCP_Inbound_Bytes, [TCP_Outbound_Bytes]" +
                " = @TCP_Outbound_Bytes, [UDP_Inbound_Bytes] = @UDP_Inbound_Bytes, [UDP_Outbound_" +
                "Bytes] = @UDP_Outbound_Bytes, [Refused_Bytes] = @Refused_Bytes, [Refused_Datagra" +
                "ms] = @Refused_Datagrams WHERE (([Poll_Time] = @Original_Poll_Time) AND ([IP_Add" +
                "ress] = @Original_IP_Address) AND ((@IsNull_Refuse_Flag = 1 AND [Refuse_Flag] IS" +
                " NULL) OR ([Refuse_Flag] = @Original_Refuse_Flag)) AND ((@IsNull_Misdirected_IP_" +
                "Datagrams = 1 AND [Misdirected_IP_Datagrams] IS NULL) OR ([Misdirected_IP_Datagr" +
                "ams] = @Original_Misdirected_IP_Datagrams)) AND ((@IsNull_NonIP_Datagrams = 1 AN" +
                "D [NonIP_Datagrams] IS NULL) OR ([NonIP_Datagrams] = @Original_NonIP_Datagrams))" +
                " AND ((@IsNull_ARP_Inbound_Datagrams = 1 AND [ARP_Inbound_Datagrams] IS NULL) OR" +
                " ([ARP_Inbound_Datagrams] = @Original_ARP_Inbound_Datagrams)) AND ((@IsNull_ARP_" +
                "Outbound_Datagrams = 1 AND [ARP_Outbound_Datagrams] IS NULL) OR ([ARP_Outbound_D" +
                "atagrams] = @Original_ARP_Outbound_Datagrams)) AND ((@IsNull_ICMP_Inbound_Datagr" +
                "ams = 1 AND [ICMP_Inbound_Datagrams] IS NULL) OR ([ICMP_Inbound_Datagrams] = @Or" +
                "iginal_ICMP_Inbound_Datagrams)) AND ((@IsNull_ICMP_Outbound_Datagrams = 1 AND [I" +
                "CMP_Outbound_Datagrams] IS NULL) OR ([ICMP_Outbound_Datagrams] = @Original_ICMP_" +
                "Outbound_Datagrams)) AND ((@IsNull_IP_Inbound_Datagrams = 1 AND [IP_Inbound_Data" +
                "grams] IS NULL) OR ([IP_Inbound_Datagrams] = @Original_IP_Inbound_Datagrams)) AN" +
                "D ((@IsNull_IP_Outbound_Datagrams = 1 AND [IP_Outbound_Datagrams] IS NULL) OR ([" +
                "IP_Outbound_Datagrams] = @Original_IP_Outbound_Datagrams)) AND ((@IsNull_TCP_Inb" +
                "ound_Datagrams = 1 AND [TCP_Inbound_Datagrams] IS NULL) OR ([TCP_Inbound_Datagra" +
                "ms] = @Original_TCP_Inbound_Datagrams)) AND ((@IsNull_TCP_Outbound_Datagrams = 1" +
                " AND [TCP_Outbound_Datagrams] IS NULL) OR ([TCP_Outbound_Datagrams] = @Original_" +
                "TCP_Outbound_Datagrams)) AND ((@IsNull_UDP_Inbound_Datagrams = 1 AND [UDP_Inboun" +
                "d_Datagrams] IS NULL) OR ([UDP_Inbound_Datagrams] = @Original_UDP_Inbound_Datagr" +
                "ams)) AND ((@IsNull_UDP_Outbound_Datagrams = 1 AND [UDP_Outbound_Datagrams] IS N" +
                "ULL) OR ([UDP_Outbound_Datagrams] = @Original_UDP_Outbound_Datagrams)) AND ((@Is" +
                "Null_Misdirected_IP_Bytes = 1 AND [Misdirected_IP_Bytes] IS NULL) OR ([Misdirect" +
                "ed_IP_Bytes] = @Original_Misdirected_IP_Bytes)) AND ((@IsNull_NonIP_Bytes = 1 AN" +
                "D [NonIP_Bytes] IS NULL) OR ([NonIP_Bytes] = @Original_NonIP_Bytes)) AND ((@IsNu" +
                "ll_ARP_Inbound_Bytes = 1 AND [ARP_Inbound_Bytes] IS NULL) OR ([ARP_Inbound_Bytes" +
                "] = @Original_ARP_Inbound_Bytes)) AND ((@IsNull_ARP_Outbound_Bytes = 1 AND [ARP_" +
                "Outbound_Bytes] IS NULL) OR ([ARP_Outbound_Bytes] = @Original_ARP_Outbound_Bytes" +
                ")) AND ((@IsNull_ICMP_Inbound_Bytes = 1 AND [ICMP_Inbound_Bytes] IS NULL) OR ([I" +
                "CMP_Inbound_Bytes] = @Original_ICMP_Inbound_Bytes)) AND ((@IsNull_ICMP_Outbound_" +
                "Bytes = 1 AND [ICMP_Outbound_Bytes] IS NULL) OR ([ICMP_Outbound_Bytes] = @Origin" +
                "al_ICMP_Outbound_Bytes)) AND ((@IsNull_IP_Inbound_Bytes = 1 AND [IP_Inbound_Byte" +
                "s] IS NULL) OR ([IP_Inbound_Bytes] = @Original_IP_Inbound_Bytes)) AND ((@IsNull_" +
                "IP_Outbound_Bytes = 1 AND [IP_Outbound_Bytes] IS NULL) OR ([IP_Outbound_Bytes] =" +
                " @Original_IP_Outbound_Bytes)) AND ((@IsNull_TCP_Inbound_Bytes = 1 AND [TCP_Inbo" +
                "und_Bytes] IS NULL) OR ([TCP_Inbound_Bytes] = @Original_TCP_Inbound_Bytes)) AND " +
                "((@IsNull_TCP_Outbound_Bytes = 1 AND [TCP_Outbound_Bytes] IS NULL) OR ([TCP_Outb" +
                "ound_Bytes] = @Original_TCP_Outbound_Bytes)) AND ((@IsNull_UDP_Inbound_Bytes = 1" +
                " AND [UDP_Inbound_Bytes] IS NULL) OR ([UDP_Inbound_Bytes] = @Original_UDP_Inboun" +
                "d_Bytes)) AND ((@IsNull_UDP_Outbound_Bytes = 1 AND [UDP_Outbound_Bytes] IS NULL)" +
                " OR ([UDP_Outbound_Bytes] = @Original_UDP_Outbound_Bytes)) AND ((@IsNull_Refused" +
                "_Bytes = 1 AND [Refused_Bytes] IS NULL) OR ([Refused_Bytes] = @Original_Refused_" +
                "Bytes)) AND ((@IsNull_Refused_Datagrams = 1 AND [Refused_Datagrams] IS NULL) OR " +
                "([Refused_Datagrams] = @Original_Refused_Datagrams)));\r\nSELECT Poll_Time, IP_Add" +
                "ress, Refuse_Flag, Misdirected_IP_Datagrams, NonIP_Datagrams, ARP_Inbound_Datagr" +
                "ams, ARP_Outbound_Datagrams, ICMP_Inbound_Datagrams, ICMP_Outbound_Datagrams, IP" +
                "_Inbound_Datagrams, IP_Outbound_Datagrams, TCP_Inbound_Datagrams, TCP_Outbound_D" +
                "atagrams, UDP_Inbound_Datagrams, UDP_Outbound_Datagrams, Misdirected_IP_Bytes, N" +
                "onIP_Bytes, ARP_Inbound_Bytes, ARP_Outbound_Bytes, ICMP_Inbound_Bytes, ICMP_Outb" +
                "ound_Bytes, IP_Inbound_Bytes, IP_Outbound_Bytes, TCP_Inbound_Bytes, TCP_Outbound" +
                "_Bytes, UDP_Inbound_Bytes, UDP_Outbound_Bytes, Refused_Bytes, Refused_Datagrams " +
                "FROM ForeignIP_Stats WHERE (IP_Address = @IP_Address) AND (Poll_Time = @Poll_Tim" +
                "e)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Refuse_Flag", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Refuse_Flag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Misdirected_IP_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Misdirected_IP_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NonIP_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NonIP_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ARP_Inbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Inbound_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ARP_Outbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Outbound_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ICMP_Inbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Inbound_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ICMP_Outbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Outbound_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP_Inbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Inbound_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP_Outbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Outbound_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TCP_Inbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Inbound_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TCP_Outbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Outbound_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UDP_Inbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Inbound_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UDP_Outbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Outbound_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Misdirected_IP_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Misdirected_IP_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NonIP_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NonIP_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ARP_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Inbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ARP_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Outbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ICMP_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Inbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ICMP_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Outbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Inbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Outbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TCP_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Inbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TCP_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Outbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UDP_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Inbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UDP_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Outbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Refused_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Refused_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Refused_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Refused_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Refuse_Flag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Refuse_Flag", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Refuse_Flag", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Refuse_Flag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Misdirected_IP_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Misdirected_IP_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Misdirected_IP_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Misdirected_IP_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NonIP_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NonIP_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NonIP_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NonIP_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ARP_Inbound_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Inbound_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ARP_Inbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Inbound_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ARP_Outbound_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Outbound_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ARP_Outbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Outbound_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ICMP_Inbound_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Inbound_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ICMP_Inbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Inbound_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ICMP_Outbound_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Outbound_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ICMP_Outbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Outbound_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP_Inbound_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Inbound_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP_Inbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Inbound_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP_Outbound_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Outbound_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP_Outbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Outbound_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TCP_Inbound_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Inbound_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TCP_Inbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Inbound_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TCP_Outbound_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Outbound_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TCP_Outbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Outbound_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UDP_Inbound_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Inbound_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UDP_Inbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Inbound_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UDP_Outbound_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Outbound_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UDP_Outbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Outbound_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Misdirected_IP_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Misdirected_IP_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Misdirected_IP_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Misdirected_IP_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NonIP_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NonIP_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NonIP_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NonIP_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ARP_Inbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Inbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ARP_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Inbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ARP_Outbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Outbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ARP_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Outbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ICMP_Inbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Inbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ICMP_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Inbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ICMP_Outbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Outbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ICMP_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Outbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP_Inbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Inbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Inbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP_Outbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Outbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Outbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TCP_Inbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Inbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TCP_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Inbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TCP_Outbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Outbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TCP_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Outbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UDP_Inbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Inbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UDP_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Inbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UDP_Outbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Outbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UDP_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Outbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Refused_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Refused_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Refused_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Refused_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Refused_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Refused_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Refused_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Refused_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=DANSDELL\\SQLEXPRESS;Initial Catalog=VseDb;Integrated Security=True";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Poll_Time, IP_Address, Refuse_Flag, Misdirected_IP_Datagrams, NonIP_Datagrams, ARP_Inbound_Datagrams, ARP_Outbound_Datagrams, ICMP_Inbound_Datagrams, ICMP_Outbound_Datagrams, IP_Inbound_Datagrams, IP_Outbound_Datagrams, TCP_Inbound_Datagrams, TCP_Outbound_Datagrams, UDP_Inbound_Datagrams, UDP_Outbound_Datagrams, Misdirected_IP_Bytes, NonIP_Bytes, ARP_Inbound_Bytes, ARP_Outbound_Bytes, ICMP_Inbound_Bytes, ICMP_Outbound_Bytes, IP_Inbound_Bytes, IP_Outbound_Bytes, TCP_Inbound_Bytes, TCP_Outbound_Bytes, UDP_Inbound_Bytes, UDP_Outbound_Bytes, Refused_Bytes, Refused_Datagrams FROM dbo.ForeignIP_Stats";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT     Poll_Time, IP_Address, Refuse_Flag, Misdirected_IP_Datagrams, NonIP_Datagrams, ARP_Inbound_Datagrams, ARP_Outbound_Datagrams, 
                      ICMP_Inbound_Datagrams, ICMP_Outbound_Datagrams, IP_Inbound_Datagrams, IP_Outbound_Datagrams, TCP_Inbound_Datagrams, 
                      TCP_Outbound_Datagrams, UDP_Inbound_Datagrams, UDP_Outbound_Datagrams, Misdirected_IP_Bytes, NonIP_Bytes, ARP_Inbound_Bytes, 
                      ARP_Outbound_Bytes, ICMP_Inbound_Bytes, ICMP_Outbound_Bytes, IP_Inbound_Bytes, IP_Outbound_Bytes, TCP_Inbound_Bytes, 
                      TCP_Outbound_Bytes, UDP_Inbound_Bytes, UDP_Outbound_Bytes, Refused_Bytes, Refused_Datagrams
FROM         ForeignIP_Stats
WHERE     (Poll_Time = @pollTime)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pollTime", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT     Poll_Time, IP_Address, Refuse_Flag, Misdirected_IP_Datagrams, NonIP_Datagrams, ARP_Inbound_Datagrams, ARP_Outbound_Datagrams, 
                      ICMP_Inbound_Datagrams, ICMP_Outbound_Datagrams, IP_Inbound_Datagrams, IP_Outbound_Datagrams, TCP_Inbound_Datagrams, 
                      TCP_Outbound_Datagrams, UDP_Inbound_Datagrams, UDP_Outbound_Datagrams, Misdirected_IP_Bytes, NonIP_Bytes, ARP_Inbound_Bytes, 
                      ARP_Outbound_Bytes, ICMP_Inbound_Bytes, ICMP_Outbound_Bytes, IP_Inbound_Bytes, IP_Outbound_Bytes, TCP_Inbound_Bytes, 
                      TCP_Outbound_Bytes, UDP_Inbound_Bytes, UDP_Outbound_Bytes, Refused_Bytes, Refused_Datagrams
FROM         ForeignIP_Stats
WHERE     (Poll_Time > @start AND Poll_Time < @end)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@start", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@end", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT DISTINCT IP_Address\r\nFROM         ForeignIP_Stats\r\nWHERE     (Poll_Time > " +
                "@start AND Poll_Time < @end)";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@start", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@end", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(VseDbDataSet.ForeignIP_StatsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual VseDbDataSet.ForeignIP_StatsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            VseDbDataSet.ForeignIP_StatsDataTable dataTable = new VseDbDataSet.ForeignIP_StatsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(VseDbDataSet.ForeignIP_StatsDataTable dataTable, System.DateTime pollTime) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(pollTime));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual VseDbDataSet.ForeignIP_StatsDataTable GetDataBy(System.DateTime pollTime) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(pollTime));
            VseDbDataSet.ForeignIP_StatsDataTable dataTable = new VseDbDataSet.ForeignIP_StatsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByTimeRange(VseDbDataSet.ForeignIP_StatsDataTable dataTable, System.DateTime start, System.DateTime end) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(start));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(end));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual VseDbDataSet.ForeignIP_StatsDataTable GetDataByTimeRange(System.DateTime start, System.DateTime end) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(start));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(end));
            VseDbDataSet.ForeignIP_StatsDataTable dataTable = new VseDbDataSet.ForeignIP_StatsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillDistinctByTimeRange(VseDbDataSet.ForeignIP_StatsDataTable dataTable, System.DateTime start, System.DateTime end) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(start));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(end));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual VseDbDataSet.ForeignIP_StatsDataTable GetDataDistinctByTimeRange(System.DateTime start, System.DateTime end) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(start));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(end));
            VseDbDataSet.ForeignIP_StatsDataTable dataTable = new VseDbDataSet.ForeignIP_StatsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet.ForeignIP_StatsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ForeignIP_Stats");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    System.DateTime Original_Poll_Time, 
                    string Original_IP_Address, 
                    global::System.Nullable<bool> Original_Refuse_Flag, 
                    global::System.Nullable<double> Original_Misdirected_IP_Datagrams, 
                    global::System.Nullable<double> Original_NonIP_Datagrams, 
                    global::System.Nullable<double> Original_ARP_Inbound_Datagrams, 
                    global::System.Nullable<double> Original_ARP_Outbound_Datagrams, 
                    global::System.Nullable<double> Original_ICMP_Inbound_Datagrams, 
                    global::System.Nullable<double> Original_ICMP_Outbound_Datagrams, 
                    global::System.Nullable<double> Original_IP_Inbound_Datagrams, 
                    global::System.Nullable<double> Original_IP_Outbound_Datagrams, 
                    global::System.Nullable<double> Original_TCP_Inbound_Datagrams, 
                    global::System.Nullable<double> Original_TCP_Outbound_Datagrams, 
                    global::System.Nullable<double> Original_UDP_Inbound_Datagrams, 
                    global::System.Nullable<double> Original_UDP_Outbound_Datagrams, 
                    global::System.Nullable<double> Original_Misdirected_IP_Bytes, 
                    global::System.Nullable<double> Original_NonIP_Bytes, 
                    global::System.Nullable<double> Original_ARP_Inbound_Bytes, 
                    global::System.Nullable<double> Original_ARP_Outbound_Bytes, 
                    global::System.Nullable<double> Original_ICMP_Inbound_Bytes, 
                    global::System.Nullable<double> Original_ICMP_Outbound_Bytes, 
                    global::System.Nullable<double> Original_IP_Inbound_Bytes, 
                    global::System.Nullable<double> Original_IP_Outbound_Bytes, 
                    global::System.Nullable<double> Original_TCP_Inbound_Bytes, 
                    global::System.Nullable<double> Original_TCP_Outbound_Bytes, 
                    global::System.Nullable<double> Original_UDP_Inbound_Bytes, 
                    global::System.Nullable<double> Original_UDP_Outbound_Bytes, 
                    global::System.Nullable<double> Original_Refused_Bytes, 
                    global::System.Nullable<double> Original_Refused_Datagrams) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.DateTime)(Original_Poll_Time));
            if ((Original_IP_Address == null)) {
                throw new global::System.ArgumentNullException("Original_IP_Address");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_IP_Address));
            }
            if ((Original_Refuse_Flag.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((bool)(Original_Refuse_Flag.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_Misdirected_IP_Datagrams.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((double)(Original_Misdirected_IP_Datagrams.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_NonIP_Datagrams.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((double)(Original_NonIP_Datagrams.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_ARP_Inbound_Datagrams.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((double)(Original_ARP_Inbound_Datagrams.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_ARP_Outbound_Datagrams.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((double)(Original_ARP_Outbound_Datagrams.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_ICMP_Inbound_Datagrams.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((double)(Original_ICMP_Inbound_Datagrams.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_ICMP_Outbound_Datagrams.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((double)(Original_ICMP_Outbound_Datagrams.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_IP_Inbound_Datagrams.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((double)(Original_IP_Inbound_Datagrams.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_IP_Outbound_Datagrams.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((double)(Original_IP_Outbound_Datagrams.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_TCP_Inbound_Datagrams.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((double)(Original_TCP_Inbound_Datagrams.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_TCP_Outbound_Datagrams.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((double)(Original_TCP_Outbound_Datagrams.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_UDP_Inbound_Datagrams.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((double)(Original_UDP_Inbound_Datagrams.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_UDP_Outbound_Datagrams.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((double)(Original_UDP_Outbound_Datagrams.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_Misdirected_IP_Bytes.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((double)(Original_Misdirected_IP_Bytes.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_NonIP_Bytes.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((double)(Original_NonIP_Bytes.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_ARP_Inbound_Bytes.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((double)(Original_ARP_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Original_ARP_Outbound_Bytes.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((double)(Original_ARP_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_ICMP_Inbound_Bytes.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[37].Value = ((double)(Original_ICMP_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Original_ICMP_Outbound_Bytes.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[39].Value = ((double)(Original_ICMP_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Original_IP_Inbound_Bytes.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[41].Value = ((double)(Original_IP_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_IP_Outbound_Bytes.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[43].Value = ((double)(Original_IP_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_TCP_Inbound_Bytes.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[45].Value = ((double)(Original_TCP_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_TCP_Outbound_Bytes.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[47].Value = ((double)(Original_TCP_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Original_UDP_Inbound_Bytes.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[49].Value = ((double)(Original_UDP_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_UDP_Outbound_Bytes.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[51].Value = ((double)(Original_UDP_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Original_Refused_Bytes.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[53].Value = ((double)(Original_Refused_Bytes.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Original_Refused_Datagrams.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[55].Value = ((double)(Original_Refused_Datagrams.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    System.DateTime Poll_Time, 
                    string IP_Address, 
                    global::System.Nullable<bool> Refuse_Flag, 
                    global::System.Nullable<double> Misdirected_IP_Datagrams, 
                    global::System.Nullable<double> NonIP_Datagrams, 
                    global::System.Nullable<double> ARP_Inbound_Datagrams, 
                    global::System.Nullable<double> ARP_Outbound_Datagrams, 
                    global::System.Nullable<double> ICMP_Inbound_Datagrams, 
                    global::System.Nullable<double> ICMP_Outbound_Datagrams, 
                    global::System.Nullable<double> IP_Inbound_Datagrams, 
                    global::System.Nullable<double> IP_Outbound_Datagrams, 
                    global::System.Nullable<double> TCP_Inbound_Datagrams, 
                    global::System.Nullable<double> TCP_Outbound_Datagrams, 
                    global::System.Nullable<double> UDP_Inbound_Datagrams, 
                    global::System.Nullable<double> UDP_Outbound_Datagrams, 
                    global::System.Nullable<double> Misdirected_IP_Bytes, 
                    global::System.Nullable<double> NonIP_Bytes, 
                    global::System.Nullable<double> ARP_Inbound_Bytes, 
                    global::System.Nullable<double> ARP_Outbound_Bytes, 
                    global::System.Nullable<double> ICMP_Inbound_Bytes, 
                    global::System.Nullable<double> ICMP_Outbound_Bytes, 
                    global::System.Nullable<double> IP_Inbound_Bytes, 
                    global::System.Nullable<double> IP_Outbound_Bytes, 
                    global::System.Nullable<double> TCP_Inbound_Bytes, 
                    global::System.Nullable<double> TCP_Outbound_Bytes, 
                    global::System.Nullable<double> UDP_Inbound_Bytes, 
                    global::System.Nullable<double> UDP_Outbound_Bytes, 
                    global::System.Nullable<double> Refused_Bytes, 
                    global::System.Nullable<double> Refused_Datagrams) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(Poll_Time));
            if ((IP_Address == null)) {
                throw new global::System.ArgumentNullException("IP_Address");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(IP_Address));
            }
            if ((Refuse_Flag.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(Refuse_Flag.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Misdirected_IP_Datagrams.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(Misdirected_IP_Datagrams.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((NonIP_Datagrams.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(NonIP_Datagrams.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ARP_Inbound_Datagrams.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(ARP_Inbound_Datagrams.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ARP_Outbound_Datagrams.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(ARP_Outbound_Datagrams.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((ICMP_Inbound_Datagrams.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(ICMP_Inbound_Datagrams.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((ICMP_Outbound_Datagrams.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(ICMP_Outbound_Datagrams.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((IP_Inbound_Datagrams.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((double)(IP_Inbound_Datagrams.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((IP_Outbound_Datagrams.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((double)(IP_Outbound_Datagrams.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((TCP_Inbound_Datagrams.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((double)(TCP_Inbound_Datagrams.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((TCP_Outbound_Datagrams.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((double)(TCP_Outbound_Datagrams.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((UDP_Inbound_Datagrams.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((double)(UDP_Inbound_Datagrams.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((UDP_Outbound_Datagrams.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((double)(UDP_Outbound_Datagrams.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Misdirected_IP_Bytes.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((double)(Misdirected_IP_Bytes.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((NonIP_Bytes.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((double)(NonIP_Bytes.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((ARP_Inbound_Bytes.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((double)(ARP_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((ARP_Outbound_Bytes.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((double)(ARP_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((ICMP_Inbound_Bytes.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((double)(ICMP_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((ICMP_Outbound_Bytes.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((double)(ICMP_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((IP_Inbound_Bytes.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((double)(IP_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((IP_Outbound_Bytes.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((double)(IP_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((TCP_Inbound_Bytes.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((double)(TCP_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((TCP_Outbound_Bytes.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((double)(TCP_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((UDP_Inbound_Bytes.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((double)(UDP_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((UDP_Outbound_Bytes.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((double)(UDP_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Refused_Bytes.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((double)(Refused_Bytes.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Refused_Datagrams.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((double)(Refused_Datagrams.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime Poll_Time, 
                    string IP_Address, 
                    global::System.Nullable<bool> Refuse_Flag, 
                    global::System.Nullable<double> Misdirected_IP_Datagrams, 
                    global::System.Nullable<double> NonIP_Datagrams, 
                    global::System.Nullable<double> ARP_Inbound_Datagrams, 
                    global::System.Nullable<double> ARP_Outbound_Datagrams, 
                    global::System.Nullable<double> ICMP_Inbound_Datagrams, 
                    global::System.Nullable<double> ICMP_Outbound_Datagrams, 
                    global::System.Nullable<double> IP_Inbound_Datagrams, 
                    global::System.Nullable<double> IP_Outbound_Datagrams, 
                    global::System.Nullable<double> TCP_Inbound_Datagrams, 
                    global::System.Nullable<double> TCP_Outbound_Datagrams, 
                    global::System.Nullable<double> UDP_Inbound_Datagrams, 
                    global::System.Nullable<double> UDP_Outbound_Datagrams, 
                    global::System.Nullable<double> Misdirected_IP_Bytes, 
                    global::System.Nullable<double> NonIP_Bytes, 
                    global::System.Nullable<double> ARP_Inbound_Bytes, 
                    global::System.Nullable<double> ARP_Outbound_Bytes, 
                    global::System.Nullable<double> ICMP_Inbound_Bytes, 
                    global::System.Nullable<double> ICMP_Outbound_Bytes, 
                    global::System.Nullable<double> IP_Inbound_Bytes, 
                    global::System.Nullable<double> IP_Outbound_Bytes, 
                    global::System.Nullable<double> TCP_Inbound_Bytes, 
                    global::System.Nullable<double> TCP_Outbound_Bytes, 
                    global::System.Nullable<double> UDP_Inbound_Bytes, 
                    global::System.Nullable<double> UDP_Outbound_Bytes, 
                    global::System.Nullable<double> Refused_Bytes, 
                    global::System.Nullable<double> Refused_Datagrams, 
                    System.DateTime Original_Poll_Time, 
                    string Original_IP_Address, 
                    global::System.Nullable<bool> Original_Refuse_Flag, 
                    global::System.Nullable<double> Original_Misdirected_IP_Datagrams, 
                    global::System.Nullable<double> Original_NonIP_Datagrams, 
                    global::System.Nullable<double> Original_ARP_Inbound_Datagrams, 
                    global::System.Nullable<double> Original_ARP_Outbound_Datagrams, 
                    global::System.Nullable<double> Original_ICMP_Inbound_Datagrams, 
                    global::System.Nullable<double> Original_ICMP_Outbound_Datagrams, 
                    global::System.Nullable<double> Original_IP_Inbound_Datagrams, 
                    global::System.Nullable<double> Original_IP_Outbound_Datagrams, 
                    global::System.Nullable<double> Original_TCP_Inbound_Datagrams, 
                    global::System.Nullable<double> Original_TCP_Outbound_Datagrams, 
                    global::System.Nullable<double> Original_UDP_Inbound_Datagrams, 
                    global::System.Nullable<double> Original_UDP_Outbound_Datagrams, 
                    global::System.Nullable<double> Original_Misdirected_IP_Bytes, 
                    global::System.Nullable<double> Original_NonIP_Bytes, 
                    global::System.Nullable<double> Original_ARP_Inbound_Bytes, 
                    global::System.Nullable<double> Original_ARP_Outbound_Bytes, 
                    global::System.Nullable<double> Original_ICMP_Inbound_Bytes, 
                    global::System.Nullable<double> Original_ICMP_Outbound_Bytes, 
                    global::System.Nullable<double> Original_IP_Inbound_Bytes, 
                    global::System.Nullable<double> Original_IP_Outbound_Bytes, 
                    global::System.Nullable<double> Original_TCP_Inbound_Bytes, 
                    global::System.Nullable<double> Original_TCP_Outbound_Bytes, 
                    global::System.Nullable<double> Original_UDP_Inbound_Bytes, 
                    global::System.Nullable<double> Original_UDP_Outbound_Bytes, 
                    global::System.Nullable<double> Original_Refused_Bytes, 
                    global::System.Nullable<double> Original_Refused_Datagrams) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(Poll_Time));
            if ((IP_Address == null)) {
                throw new global::System.ArgumentNullException("IP_Address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(IP_Address));
            }
            if ((Refuse_Flag.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(Refuse_Flag.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Misdirected_IP_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(Misdirected_IP_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((NonIP_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(NonIP_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ARP_Inbound_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(ARP_Inbound_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ARP_Outbound_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(ARP_Outbound_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((ICMP_Inbound_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(ICMP_Inbound_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((ICMP_Outbound_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(ICMP_Outbound_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((IP_Inbound_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(IP_Inbound_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((IP_Outbound_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(IP_Outbound_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((TCP_Inbound_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((double)(TCP_Inbound_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((TCP_Outbound_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((double)(TCP_Outbound_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((UDP_Inbound_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((double)(UDP_Inbound_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((UDP_Outbound_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(UDP_Outbound_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Misdirected_IP_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((double)(Misdirected_IP_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((NonIP_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((double)(NonIP_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((ARP_Inbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((double)(ARP_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((ARP_Outbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((double)(ARP_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((ICMP_Inbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((double)(ICMP_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((ICMP_Outbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((double)(ICMP_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((IP_Inbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((double)(IP_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((IP_Outbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((double)(IP_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((TCP_Inbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((double)(TCP_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((TCP_Outbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((double)(TCP_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((UDP_Inbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((double)(UDP_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((UDP_Outbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((double)(UDP_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Refused_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((double)(Refused_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Refused_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((double)(Refused_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[29].Value = ((System.DateTime)(Original_Poll_Time));
            if ((Original_IP_Address == null)) {
                throw new global::System.ArgumentNullException("Original_IP_Address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_IP_Address));
            }
            if ((Original_Refuse_Flag.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((bool)(Original_Refuse_Flag.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_Misdirected_IP_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((double)(Original_Misdirected_IP_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_NonIP_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((double)(Original_NonIP_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_ARP_Inbound_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((double)(Original_ARP_Inbound_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_ARP_Outbound_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((double)(Original_ARP_Outbound_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_ICMP_Inbound_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((double)(Original_ICMP_Inbound_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_ICMP_Outbound_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((double)(Original_ICMP_Outbound_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_IP_Inbound_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((double)(Original_IP_Inbound_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_IP_Outbound_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((double)(Original_IP_Outbound_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_TCP_Inbound_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((double)(Original_TCP_Inbound_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_TCP_Outbound_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((double)(Original_TCP_Outbound_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_UDP_Inbound_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((double)(Original_UDP_Inbound_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_UDP_Outbound_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[56].Value = ((double)(Original_UDP_Outbound_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_Misdirected_IP_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((double)(Original_Misdirected_IP_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_NonIP_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((double)(Original_NonIP_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_ARP_Inbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((double)(Original_ARP_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Original_ARP_Outbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((double)(Original_ARP_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Original_ICMP_Inbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[66].Value = ((double)(Original_ICMP_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Original_ICMP_Outbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[68].Value = ((double)(Original_ICMP_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((Original_IP_Inbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[70].Value = ((double)(Original_IP_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((Original_IP_Outbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[72].Value = ((double)(Original_IP_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((Original_TCP_Inbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[74].Value = ((double)(Original_TCP_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((Original_TCP_Outbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[76].Value = ((double)(Original_TCP_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((Original_UDP_Inbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[78].Value = ((double)(Original_UDP_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((Original_UDP_Outbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[80].Value = ((double)(Original_UDP_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((Original_Refused_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[82].Value = ((double)(Original_Refused_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((Original_Refused_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[84].Value = ((double)(Original_Refused_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<bool> Refuse_Flag, 
                    global::System.Nullable<double> Misdirected_IP_Datagrams, 
                    global::System.Nullable<double> NonIP_Datagrams, 
                    global::System.Nullable<double> ARP_Inbound_Datagrams, 
                    global::System.Nullable<double> ARP_Outbound_Datagrams, 
                    global::System.Nullable<double> ICMP_Inbound_Datagrams, 
                    global::System.Nullable<double> ICMP_Outbound_Datagrams, 
                    global::System.Nullable<double> IP_Inbound_Datagrams, 
                    global::System.Nullable<double> IP_Outbound_Datagrams, 
                    global::System.Nullable<double> TCP_Inbound_Datagrams, 
                    global::System.Nullable<double> TCP_Outbound_Datagrams, 
                    global::System.Nullable<double> UDP_Inbound_Datagrams, 
                    global::System.Nullable<double> UDP_Outbound_Datagrams, 
                    global::System.Nullable<double> Misdirected_IP_Bytes, 
                    global::System.Nullable<double> NonIP_Bytes, 
                    global::System.Nullable<double> ARP_Inbound_Bytes, 
                    global::System.Nullable<double> ARP_Outbound_Bytes, 
                    global::System.Nullable<double> ICMP_Inbound_Bytes, 
                    global::System.Nullable<double> ICMP_Outbound_Bytes, 
                    global::System.Nullable<double> IP_Inbound_Bytes, 
                    global::System.Nullable<double> IP_Outbound_Bytes, 
                    global::System.Nullable<double> TCP_Inbound_Bytes, 
                    global::System.Nullable<double> TCP_Outbound_Bytes, 
                    global::System.Nullable<double> UDP_Inbound_Bytes, 
                    global::System.Nullable<double> UDP_Outbound_Bytes, 
                    global::System.Nullable<double> Refused_Bytes, 
                    global::System.Nullable<double> Refused_Datagrams, 
                    System.DateTime Original_Poll_Time, 
                    string Original_IP_Address, 
                    global::System.Nullable<bool> Original_Refuse_Flag, 
                    global::System.Nullable<double> Original_Misdirected_IP_Datagrams, 
                    global::System.Nullable<double> Original_NonIP_Datagrams, 
                    global::System.Nullable<double> Original_ARP_Inbound_Datagrams, 
                    global::System.Nullable<double> Original_ARP_Outbound_Datagrams, 
                    global::System.Nullable<double> Original_ICMP_Inbound_Datagrams, 
                    global::System.Nullable<double> Original_ICMP_Outbound_Datagrams, 
                    global::System.Nullable<double> Original_IP_Inbound_Datagrams, 
                    global::System.Nullable<double> Original_IP_Outbound_Datagrams, 
                    global::System.Nullable<double> Original_TCP_Inbound_Datagrams, 
                    global::System.Nullable<double> Original_TCP_Outbound_Datagrams, 
                    global::System.Nullable<double> Original_UDP_Inbound_Datagrams, 
                    global::System.Nullable<double> Original_UDP_Outbound_Datagrams, 
                    global::System.Nullable<double> Original_Misdirected_IP_Bytes, 
                    global::System.Nullable<double> Original_NonIP_Bytes, 
                    global::System.Nullable<double> Original_ARP_Inbound_Bytes, 
                    global::System.Nullable<double> Original_ARP_Outbound_Bytes, 
                    global::System.Nullable<double> Original_ICMP_Inbound_Bytes, 
                    global::System.Nullable<double> Original_ICMP_Outbound_Bytes, 
                    global::System.Nullable<double> Original_IP_Inbound_Bytes, 
                    global::System.Nullable<double> Original_IP_Outbound_Bytes, 
                    global::System.Nullable<double> Original_TCP_Inbound_Bytes, 
                    global::System.Nullable<double> Original_TCP_Outbound_Bytes, 
                    global::System.Nullable<double> Original_UDP_Inbound_Bytes, 
                    global::System.Nullable<double> Original_UDP_Outbound_Bytes, 
                    global::System.Nullable<double> Original_Refused_Bytes, 
                    global::System.Nullable<double> Original_Refused_Datagrams) {
            return this.Update(Original_Poll_Time, Original_IP_Address, Refuse_Flag, Misdirected_IP_Datagrams, NonIP_Datagrams, ARP_Inbound_Datagrams, ARP_Outbound_Datagrams, ICMP_Inbound_Datagrams, ICMP_Outbound_Datagrams, IP_Inbound_Datagrams, IP_Outbound_Datagrams, TCP_Inbound_Datagrams, TCP_Outbound_Datagrams, UDP_Inbound_Datagrams, UDP_Outbound_Datagrams, Misdirected_IP_Bytes, NonIP_Bytes, ARP_Inbound_Bytes, ARP_Outbound_Bytes, ICMP_Inbound_Bytes, ICMP_Outbound_Bytes, IP_Inbound_Bytes, IP_Outbound_Bytes, TCP_Inbound_Bytes, TCP_Outbound_Bytes, UDP_Inbound_Bytes, UDP_Outbound_Bytes, Refused_Bytes, Refused_Datagrams, Original_Poll_Time, Original_IP_Address, Original_Refuse_Flag, Original_Misdirected_IP_Datagrams, Original_NonIP_Datagrams, Original_ARP_Inbound_Datagrams, Original_ARP_Outbound_Datagrams, Original_ICMP_Inbound_Datagrams, Original_ICMP_Outbound_Datagrams, Original_IP_Inbound_Datagrams, Original_IP_Outbound_Datagrams, Original_TCP_Inbound_Datagrams, Original_TCP_Outbound_Datagrams, Original_UDP_Inbound_Datagrams, Original_UDP_Outbound_Datagrams, Original_Misdirected_IP_Bytes, Original_NonIP_Bytes, Original_ARP_Inbound_Bytes, Original_ARP_Outbound_Bytes, Original_ICMP_Inbound_Bytes, Original_ICMP_Outbound_Bytes, Original_IP_Inbound_Bytes, Original_IP_Outbound_Bytes, Original_TCP_Inbound_Bytes, Original_TCP_Outbound_Bytes, Original_UDP_Inbound_Bytes, Original_UDP_Outbound_Bytes, Original_Refused_Bytes, Original_Refused_Datagrams);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class FTP_RecordsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public FTP_RecordsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "FTP_Records";
            tableMapping.ColumnMappings.Add("Record_ID", "Record_ID");
            tableMapping.ColumnMappings.Add("FTP_Node_Name", "FTP_Node_Name");
            tableMapping.ColumnMappings.Add("FTP_User_ID", "FTP_User_ID");
            tableMapping.ColumnMappings.Add("Bytes_SentAcked", "Bytes_SentAcked");
            tableMapping.ColumnMappings.Add("Bytes_Received", "Bytes_Received");
            tableMapping.ColumnMappings.Add("Start_Time", "Start_Time");
            tableMapping.ColumnMappings.Add("End_Time", "End_Time");
            tableMapping.ColumnMappings.Add("Files_Received", "Files_Received");
            tableMapping.ColumnMappings.Add("Files_Sent", "Files_Sent");
            tableMapping.ColumnMappings.Add("Vse_IP", "Vse_IP");
            tableMapping.ColumnMappings.Add("Client_IP", "Client_IP");
            tableMapping.ColumnMappings.Add("Vse_Port", "Vse_Port");
            tableMapping.ColumnMappings.Add("Client_Port", "Client_Port");
            tableMapping.ColumnMappings.Add("Vse_Task_ID", "Vse_Task_ID");
            tableMapping.ColumnMappings.Add("SSL_Flag", "SSL_Flag");
            tableMapping.ColumnMappings.Add("General_Flag", "General_Flag");
            tableMapping.ColumnMappings.Add("Foreign_Data_IP", "Foreign_Data_IP");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[FTP_Records] WHERE (([Record_ID] = @Original_Record_ID) AND ((" +
                "@IsNull_FTP_Node_Name = 1 AND [FTP_Node_Name] IS NULL) OR ([FTP_Node_Name] = @Or" +
                "iginal_FTP_Node_Name)) AND ((@IsNull_FTP_User_ID = 1 AND [FTP_User_ID] IS NULL) " +
                "OR ([FTP_User_ID] = @Original_FTP_User_ID)) AND ((@IsNull_Bytes_SentAcked = 1 AN" +
                "D [Bytes_SentAcked] IS NULL) OR ([Bytes_SentAcked] = @Original_Bytes_SentAcked))" +
                " AND ((@IsNull_Bytes_Received = 1 AND [Bytes_Received] IS NULL) OR ([Bytes_Recei" +
                "ved] = @Original_Bytes_Received)) AND ((@IsNull_Start_Time = 1 AND [Start_Time] " +
                "IS NULL) OR ([Start_Time] = @Original_Start_Time)) AND ((@IsNull_End_Time = 1 AN" +
                "D [End_Time] IS NULL) OR ([End_Time] = @Original_End_Time)) AND ((@IsNull_Files_" +
                "Received = 1 AND [Files_Received] IS NULL) OR ([Files_Received] = @Original_File" +
                "s_Received)) AND ((@IsNull_Files_Sent = 1 AND [Files_Sent] IS NULL) OR ([Files_S" +
                "ent] = @Original_Files_Sent)) AND ((@IsNull_Vse_IP = 1 AND [Vse_IP] IS NULL) OR " +
                "([Vse_IP] = @Original_Vse_IP)) AND ((@IsNull_Client_IP = 1 AND [Client_IP] IS NU" +
                "LL) OR ([Client_IP] = @Original_Client_IP)) AND ((@IsNull_Vse_Port = 1 AND [Vse_" +
                "Port] IS NULL) OR ([Vse_Port] = @Original_Vse_Port)) AND ((@IsNull_Client_Port =" +
                " 1 AND [Client_Port] IS NULL) OR ([Client_Port] = @Original_Client_Port)) AND ((" +
                "@IsNull_Vse_Task_ID = 1 AND [Vse_Task_ID] IS NULL) OR ([Vse_Task_ID] = @Original" +
                "_Vse_Task_ID)) AND ((@IsNull_SSL_Flag = 1 AND [SSL_Flag] IS NULL) OR ([SSL_Flag]" +
                " = @Original_SSL_Flag)) AND ((@IsNull_General_Flag = 1 AND [General_Flag] IS NUL" +
                "L) OR ([General_Flag] = @Original_General_Flag)) AND ((@IsNull_Foreign_Data_IP =" +
                " 1 AND [Foreign_Data_IP] IS NULL) OR ([Foreign_Data_IP] = @Original_Foreign_Data" +
                "_IP)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Record_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Record_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FTP_Node_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FTP_Node_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FTP_Node_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FTP_Node_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FTP_User_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FTP_User_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FTP_User_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FTP_User_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Bytes_SentAcked", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bytes_SentAcked", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bytes_SentAcked", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bytes_SentAcked", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Bytes_Received", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bytes_Received", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bytes_Received", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bytes_Received", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Start_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Start_Time", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Start_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Start_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_End_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "End_Time", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_End_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "End_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Files_Received", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Files_Received", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Files_Received", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Files_Received", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Files_Sent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Files_Sent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Files_Sent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Files_Sent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Vse_IP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vse_IP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vse_IP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vse_IP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Client_IP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Client_IP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Client_IP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Client_IP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Vse_Port", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vse_Port", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vse_Port", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vse_Port", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Client_Port", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Client_Port", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Client_Port", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Client_Port", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Vse_Task_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vse_Task_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vse_Task_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vse_Task_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SSL_Flag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSL_Flag", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SSL_Flag", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSL_Flag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_General_Flag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "General_Flag", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_General_Flag", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "General_Flag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Foreign_Data_IP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Foreign_Data_IP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Foreign_Data_IP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Foreign_Data_IP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[FTP_Records] ([FTP_Node_Name], [FTP_User_ID], [Bytes_SentAcked], [Bytes_Received], [Start_Time], [End_Time], [Files_Received], [Files_Sent], [Vse_IP], [Client_IP], [Vse_Port], [Client_Port], [Vse_Task_ID], [SSL_Flag], [General_Flag], [Foreign_Data_IP]) VALUES (@FTP_Node_Name, @FTP_User_ID, @Bytes_SentAcked, @Bytes_Received, @Start_Time, @End_Time, @Files_Received, @Files_Sent, @Vse_IP, @Client_IP, @Vse_Port, @Client_Port, @Vse_Task_ID, @SSL_Flag, @General_Flag, @Foreign_Data_IP);
SELECT Record_ID, FTP_Node_Name, FTP_User_ID, Bytes_SentAcked, Bytes_Received, Start_Time, End_Time, Files_Received, Files_Sent, Vse_IP, Client_IP, Vse_Port, Client_Port, Vse_Task_ID, SSL_Flag, General_Flag, Foreign_Data_IP FROM FTP_Records WHERE (Record_ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FTP_Node_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FTP_Node_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FTP_User_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FTP_User_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bytes_SentAcked", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bytes_SentAcked", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bytes_Received", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bytes_Received", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Start_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Start_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@End_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "End_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Files_Received", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Files_Received", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Files_Sent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Files_Sent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vse_IP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vse_IP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Client_IP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Client_IP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vse_Port", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vse_Port", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Client_Port", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Client_Port", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vse_Task_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vse_Task_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SSL_Flag", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSL_Flag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@General_Flag", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "General_Flag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Foreign_Data_IP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Foreign_Data_IP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[FTP_Records] SET [FTP_Node_Name] = @FTP_Node_Name, [FTP_User_ID] = " +
                "@FTP_User_ID, [Bytes_SentAcked] = @Bytes_SentAcked, [Bytes_Received] = @Bytes_Re" +
                "ceived, [Start_Time] = @Start_Time, [End_Time] = @End_Time, [Files_Received] = @" +
                "Files_Received, [Files_Sent] = @Files_Sent, [Vse_IP] = @Vse_IP, [Client_IP] = @C" +
                "lient_IP, [Vse_Port] = @Vse_Port, [Client_Port] = @Client_Port, [Vse_Task_ID] = " +
                "@Vse_Task_ID, [SSL_Flag] = @SSL_Flag, [General_Flag] = @General_Flag, [Foreign_D" +
                "ata_IP] = @Foreign_Data_IP WHERE (([Record_ID] = @Original_Record_ID) AND ((@IsN" +
                "ull_FTP_Node_Name = 1 AND [FTP_Node_Name] IS NULL) OR ([FTP_Node_Name] = @Origin" +
                "al_FTP_Node_Name)) AND ((@IsNull_FTP_User_ID = 1 AND [FTP_User_ID] IS NULL) OR (" +
                "[FTP_User_ID] = @Original_FTP_User_ID)) AND ((@IsNull_Bytes_SentAcked = 1 AND [B" +
                "ytes_SentAcked] IS NULL) OR ([Bytes_SentAcked] = @Original_Bytes_SentAcked)) AND" +
                " ((@IsNull_Bytes_Received = 1 AND [Bytes_Received] IS NULL) OR ([Bytes_Received]" +
                " = @Original_Bytes_Received)) AND ((@IsNull_Start_Time = 1 AND [Start_Time] IS N" +
                "ULL) OR ([Start_Time] = @Original_Start_Time)) AND ((@IsNull_End_Time = 1 AND [E" +
                "nd_Time] IS NULL) OR ([End_Time] = @Original_End_Time)) AND ((@IsNull_Files_Rece" +
                "ived = 1 AND [Files_Received] IS NULL) OR ([Files_Received] = @Original_Files_Re" +
                "ceived)) AND ((@IsNull_Files_Sent = 1 AND [Files_Sent] IS NULL) OR ([Files_Sent]" +
                " = @Original_Files_Sent)) AND ((@IsNull_Vse_IP = 1 AND [Vse_IP] IS NULL) OR ([Vs" +
                "e_IP] = @Original_Vse_IP)) AND ((@IsNull_Client_IP = 1 AND [Client_IP] IS NULL) " +
                "OR ([Client_IP] = @Original_Client_IP)) AND ((@IsNull_Vse_Port = 1 AND [Vse_Port" +
                "] IS NULL) OR ([Vse_Port] = @Original_Vse_Port)) AND ((@IsNull_Client_Port = 1 A" +
                "ND [Client_Port] IS NULL) OR ([Client_Port] = @Original_Client_Port)) AND ((@IsN" +
                "ull_Vse_Task_ID = 1 AND [Vse_Task_ID] IS NULL) OR ([Vse_Task_ID] = @Original_Vse" +
                "_Task_ID)) AND ((@IsNull_SSL_Flag = 1 AND [SSL_Flag] IS NULL) OR ([SSL_Flag] = @" +
                "Original_SSL_Flag)) AND ((@IsNull_General_Flag = 1 AND [General_Flag] IS NULL) O" +
                "R ([General_Flag] = @Original_General_Flag)) AND ((@IsNull_Foreign_Data_IP = 1 A" +
                "ND [Foreign_Data_IP] IS NULL) OR ([Foreign_Data_IP] = @Original_Foreign_Data_IP)" +
                "));\r\nSELECT Record_ID, FTP_Node_Name, FTP_User_ID, Bytes_SentAcked, Bytes_Receiv" +
                "ed, Start_Time, End_Time, Files_Received, Files_Sent, Vse_IP, Client_IP, Vse_Por" +
                "t, Client_Port, Vse_Task_ID, SSL_Flag, General_Flag, Foreign_Data_IP FROM FTP_Re" +
                "cords WHERE (Record_ID = @Record_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FTP_Node_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FTP_Node_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FTP_User_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FTP_User_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bytes_SentAcked", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bytes_SentAcked", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Bytes_Received", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bytes_Received", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Start_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Start_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@End_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "End_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Files_Received", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Files_Received", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Files_Sent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Files_Sent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vse_IP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vse_IP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Client_IP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Client_IP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vse_Port", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vse_Port", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Client_Port", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Client_Port", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Vse_Task_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vse_Task_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SSL_Flag", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSL_Flag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@General_Flag", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "General_Flag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Foreign_Data_IP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Foreign_Data_IP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Record_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Record_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FTP_Node_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FTP_Node_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FTP_Node_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FTP_Node_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FTP_User_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FTP_User_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FTP_User_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FTP_User_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Bytes_SentAcked", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bytes_SentAcked", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bytes_SentAcked", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bytes_SentAcked", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Bytes_Received", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bytes_Received", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Bytes_Received", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Bytes_Received", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Start_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Start_Time", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Start_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Start_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_End_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "End_Time", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_End_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "End_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Files_Received", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Files_Received", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Files_Received", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Files_Received", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Files_Sent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Files_Sent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Files_Sent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Files_Sent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Vse_IP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vse_IP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vse_IP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vse_IP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Client_IP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Client_IP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Client_IP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Client_IP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Vse_Port", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vse_Port", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vse_Port", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vse_Port", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Client_Port", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Client_Port", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Client_Port", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Client_Port", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Vse_Task_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vse_Task_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Vse_Task_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Vse_Task_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SSL_Flag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSL_Flag", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SSL_Flag", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SSL_Flag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_General_Flag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "General_Flag", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_General_Flag", global::System.Data.SqlDbType.TinyInt, 0, global::System.Data.ParameterDirection.Input, 0, 0, "General_Flag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Foreign_Data_IP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Foreign_Data_IP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Foreign_Data_IP", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Foreign_Data_IP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Record_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Record_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=DANSDELL\\SQLEXPRESS;Initial Catalog=VseDb;Integrated Security=True";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Record_ID, FTP_Node_Name, FTP_User_ID, Bytes_SentAcked, Bytes_Received, St" +
                "art_Time, End_Time, Files_Received, Files_Sent, Vse_IP, Client_IP, Vse_Port, Cli" +
                "ent_Port, Vse_Task_ID, SSL_Flag, General_Flag, Foreign_Data_IP FROM dbo.FTP_Reco" +
                "rds";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(VseDbDataSet.FTP_RecordsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual VseDbDataSet.FTP_RecordsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            VseDbDataSet.FTP_RecordsDataTable dataTable = new VseDbDataSet.FTP_RecordsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet.FTP_RecordsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet dataSet) {
            return this.Adapter.Update(dataSet, "FTP_Records");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    int Original_Record_ID, 
                    string Original_FTP_Node_Name, 
                    string Original_FTP_User_ID, 
                    global::System.Nullable<double> Original_Bytes_SentAcked, 
                    global::System.Nullable<double> Original_Bytes_Received, 
                    global::System.Nullable<global::System.DateTime> Original_Start_Time, 
                    global::System.Nullable<global::System.DateTime> Original_End_Time, 
                    global::System.Nullable<double> Original_Files_Received, 
                    global::System.Nullable<double> Original_Files_Sent, 
                    string Original_Vse_IP, 
                    string Original_Client_IP, 
                    global::System.Nullable<int> Original_Vse_Port, 
                    global::System.Nullable<int> Original_Client_Port, 
                    global::System.Nullable<int> Original_Vse_Task_ID, 
                    global::System.Nullable<byte> Original_SSL_Flag, 
                    global::System.Nullable<byte> Original_General_Flag, 
                    string Original_Foreign_Data_IP) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Record_ID));
            if ((Original_FTP_Node_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_FTP_Node_Name));
            }
            if ((Original_FTP_User_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_FTP_User_ID));
            }
            if ((Original_Bytes_SentAcked.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_Bytes_SentAcked.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_Bytes_Received.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((double)(Original_Bytes_Received.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_Start_Time.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((System.DateTime)(Original_Start_Time.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_End_Time.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((System.DateTime)(Original_End_Time.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_Files_Received.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((double)(Original_Files_Received.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_Files_Sent.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((double)(Original_Files_Sent.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_Vse_IP == null)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((string)(Original_Vse_IP));
            }
            if ((Original_Client_IP == null)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((string)(Original_Client_IP));
            }
            if ((Original_Vse_Port.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((int)(Original_Vse_Port.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_Client_Port.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((int)(Original_Client_Port.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_Vse_Task_ID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((int)(Original_Vse_Task_ID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_SSL_Flag.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((byte)(Original_SSL_Flag.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_General_Flag.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((byte)(Original_General_Flag.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_Foreign_Data_IP == null)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((string)(Original_Foreign_Data_IP));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    string FTP_Node_Name, 
                    string FTP_User_ID, 
                    global::System.Nullable<double> Bytes_SentAcked, 
                    global::System.Nullable<double> Bytes_Received, 
                    global::System.Nullable<global::System.DateTime> Start_Time, 
                    global::System.Nullable<global::System.DateTime> End_Time, 
                    global::System.Nullable<double> Files_Received, 
                    global::System.Nullable<double> Files_Sent, 
                    string Vse_IP, 
                    string Client_IP, 
                    global::System.Nullable<int> Vse_Port, 
                    global::System.Nullable<int> Client_Port, 
                    global::System.Nullable<int> Vse_Task_ID, 
                    global::System.Nullable<byte> SSL_Flag, 
                    global::System.Nullable<byte> General_Flag, 
                    string Foreign_Data_IP) {
            if ((FTP_Node_Name == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(FTP_Node_Name));
            }
            if ((FTP_User_ID == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(FTP_User_ID));
            }
            if ((Bytes_SentAcked.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((double)(Bytes_SentAcked.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Bytes_Received.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(Bytes_Received.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Start_Time.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(Start_Time.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((End_Time.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(End_Time.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Files_Received.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(Files_Received.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Files_Sent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(Files_Sent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Vse_IP == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Vse_IP));
            }
            if ((Client_IP == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(Client_IP));
            }
            if ((Vse_Port.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((int)(Vse_Port.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Client_Port.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((int)(Client_Port.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Vse_Task_ID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((int)(Vse_Task_ID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((SSL_Flag.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((byte)(SSL_Flag.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((General_Flag.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((byte)(General_Flag.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Foreign_Data_IP == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(Foreign_Data_IP));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string FTP_Node_Name, 
                    string FTP_User_ID, 
                    global::System.Nullable<double> Bytes_SentAcked, 
                    global::System.Nullable<double> Bytes_Received, 
                    global::System.Nullable<global::System.DateTime> Start_Time, 
                    global::System.Nullable<global::System.DateTime> End_Time, 
                    global::System.Nullable<double> Files_Received, 
                    global::System.Nullable<double> Files_Sent, 
                    string Vse_IP, 
                    string Client_IP, 
                    global::System.Nullable<int> Vse_Port, 
                    global::System.Nullable<int> Client_Port, 
                    global::System.Nullable<int> Vse_Task_ID, 
                    global::System.Nullable<byte> SSL_Flag, 
                    global::System.Nullable<byte> General_Flag, 
                    string Foreign_Data_IP, 
                    int Original_Record_ID, 
                    string Original_FTP_Node_Name, 
                    string Original_FTP_User_ID, 
                    global::System.Nullable<double> Original_Bytes_SentAcked, 
                    global::System.Nullable<double> Original_Bytes_Received, 
                    global::System.Nullable<global::System.DateTime> Original_Start_Time, 
                    global::System.Nullable<global::System.DateTime> Original_End_Time, 
                    global::System.Nullable<double> Original_Files_Received, 
                    global::System.Nullable<double> Original_Files_Sent, 
                    string Original_Vse_IP, 
                    string Original_Client_IP, 
                    global::System.Nullable<int> Original_Vse_Port, 
                    global::System.Nullable<int> Original_Client_Port, 
                    global::System.Nullable<int> Original_Vse_Task_ID, 
                    global::System.Nullable<byte> Original_SSL_Flag, 
                    global::System.Nullable<byte> Original_General_Flag, 
                    string Original_Foreign_Data_IP, 
                    int Record_ID) {
            if ((FTP_Node_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(FTP_Node_Name));
            }
            if ((FTP_User_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(FTP_User_ID));
            }
            if ((Bytes_SentAcked.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(Bytes_SentAcked.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Bytes_Received.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(Bytes_Received.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Start_Time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(Start_Time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((End_Time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(End_Time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Files_Received.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(Files_Received.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Files_Sent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(Files_Sent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Vse_IP == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Vse_IP));
            }
            if ((Client_IP == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Client_IP));
            }
            if ((Vse_Port.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(Vse_Port.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Client_Port.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Client_Port.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Vse_Task_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Vse_Task_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((SSL_Flag.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((byte)(SSL_Flag.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((General_Flag.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((byte)(General_Flag.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Foreign_Data_IP == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Foreign_Data_IP));
            }
            this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_Record_ID));
            if ((Original_FTP_Node_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_FTP_Node_Name));
            }
            if ((Original_FTP_User_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_FTP_User_ID));
            }
            if ((Original_Bytes_SentAcked.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((double)(Original_Bytes_SentAcked.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_Bytes_Received.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((double)(Original_Bytes_Received.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_Start_Time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((System.DateTime)(Original_Start_Time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_End_Time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((System.DateTime)(Original_End_Time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_Files_Received.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((double)(Original_Files_Received.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_Files_Sent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((double)(Original_Files_Sent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_Vse_IP == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_Vse_IP));
            }
            if ((Original_Client_IP == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_Client_IP));
            }
            if ((Original_Vse_Port.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((int)(Original_Vse_Port.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_Client_Port.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((int)(Original_Client_Port.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_Vse_Task_ID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((int)(Original_Vse_Task_ID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_SSL_Flag.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((byte)(Original_SSL_Flag.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_General_Flag.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((byte)(Original_General_Flag.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_Foreign_Data_IP == null)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((string)(Original_Foreign_Data_IP));
            }
            this.Adapter.UpdateCommand.Parameters[49].Value = ((int)(Record_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string FTP_Node_Name, 
                    string FTP_User_ID, 
                    global::System.Nullable<double> Bytes_SentAcked, 
                    global::System.Nullable<double> Bytes_Received, 
                    global::System.Nullable<global::System.DateTime> Start_Time, 
                    global::System.Nullable<global::System.DateTime> End_Time, 
                    global::System.Nullable<double> Files_Received, 
                    global::System.Nullable<double> Files_Sent, 
                    string Vse_IP, 
                    string Client_IP, 
                    global::System.Nullable<int> Vse_Port, 
                    global::System.Nullable<int> Client_Port, 
                    global::System.Nullable<int> Vse_Task_ID, 
                    global::System.Nullable<byte> SSL_Flag, 
                    global::System.Nullable<byte> General_Flag, 
                    string Foreign_Data_IP, 
                    int Original_Record_ID, 
                    string Original_FTP_Node_Name, 
                    string Original_FTP_User_ID, 
                    global::System.Nullable<double> Original_Bytes_SentAcked, 
                    global::System.Nullable<double> Original_Bytes_Received, 
                    global::System.Nullable<global::System.DateTime> Original_Start_Time, 
                    global::System.Nullable<global::System.DateTime> Original_End_Time, 
                    global::System.Nullable<double> Original_Files_Received, 
                    global::System.Nullable<double> Original_Files_Sent, 
                    string Original_Vse_IP, 
                    string Original_Client_IP, 
                    global::System.Nullable<int> Original_Vse_Port, 
                    global::System.Nullable<int> Original_Client_Port, 
                    global::System.Nullable<int> Original_Vse_Task_ID, 
                    global::System.Nullable<byte> Original_SSL_Flag, 
                    global::System.Nullable<byte> Original_General_Flag, 
                    string Original_Foreign_Data_IP) {
            return this.Update(FTP_Node_Name, FTP_User_ID, Bytes_SentAcked, Bytes_Received, Start_Time, End_Time, Files_Received, Files_Sent, Vse_IP, Client_IP, Vse_Port, Client_Port, Vse_Task_ID, SSL_Flag, General_Flag, Foreign_Data_IP, Original_Record_ID, Original_FTP_Node_Name, Original_FTP_User_ID, Original_Bytes_SentAcked, Original_Bytes_Received, Original_Start_Time, Original_End_Time, Original_Files_Received, Original_Files_Sent, Original_Vse_IP, Original_Client_IP, Original_Vse_Port, Original_Client_Port, Original_Vse_Task_ID, Original_SSL_Flag, Original_General_Flag, Original_Foreign_Data_IP, Original_Record_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class JobStep_RecordsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public JobStep_RecordsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "JobStep_Records";
            tableMapping.ColumnMappings.Add("Record_ID", "Record_ID");
            tableMapping.ColumnMappings.Add("PID", "PID");
            tableMapping.ColumnMappings.Add("Job_Name", "Job_Name");
            tableMapping.ColumnMappings.Add("Step_Name", "Step_Name");
            tableMapping.ColumnMappings.Add("Step_Start_Time", "Step_Start_Time");
            tableMapping.ColumnMappings.Add("Step_End_Time", "Step_End_Time");
            tableMapping.ColumnMappings.Add("Duration_Sec", "Duration_Sec");
            tableMapping.ColumnMappings.Add("Cpu_Time_Sec", "Cpu_Time_Sec");
            tableMapping.ColumnMappings.Add("Total_IO", "LocalPOr");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[JobStep_Records] WHERE (([Record_ID] = @Original_Record_ID) AND ((@IsNull_PID = 1 AND [PID] IS NULL) OR ([PID] = @Original_PID)) AND ([Job_Name] = @Original_Job_Name) AND ([Step_Name] = @Original_Step_Name) AND ([Step_Start_Time] = @Original_Step_Start_Time) AND ((@IsNull_Step_End_Time = 1 AND [Step_End_Time] IS NULL) OR ([Step_End_Time] = @Original_Step_End_Time)) AND ((@IsNull_Duration_Sec = 1 AND [Duration_Sec] IS NULL) OR ([Duration_Sec] = @Original_Duration_Sec)) AND ((@IsNull_Cpu_Time_Sec = 1 AND [Cpu_Time_Sec] IS NULL) OR ([Cpu_Time_Sec] = @Original_Cpu_Time_Sec)) AND ((@IsNull_Total_IO = 1 AND [Total_IO] IS NULL) OR ([Total_IO] = @Original_Total_IO)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Record_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Record_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Job_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Job_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Step_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Step_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Step_Start_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Step_Start_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Step_End_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Step_End_Time", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Step_End_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Step_End_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Duration_Sec", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Duration_Sec", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Duration_Sec", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Duration_Sec", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Cpu_Time_Sec", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cpu_Time_Sec", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cpu_Time_Sec", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cpu_Time_Sec", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Total_IO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_IO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Total_IO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_IO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[JobStep_Records] ([PID], [Job_Name], [Step_Name], [Step_Start_Time], [Step_End_Time], [Duration_Sec], [Cpu_Time_Sec], [Total_IO]) VALUES (@PID, @Job_Name, @Step_Name, @Step_Start_Time, @Step_End_Time, @Duration_Sec, @Cpu_Time_Sec, @Total_IO);
SELECT Record_ID, PID, Job_Name, Step_Name, Step_Start_Time, Step_End_Time, Duration_Sec, Cpu_Time_Sec, Total_IO FROM JobStep_Records WHERE (Job_Name = @Job_Name) AND (Record_ID = SCOPE_IDENTITY()) AND (Step_Name = @Step_Name) AND (Step_Start_Time = @Step_Start_Time)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Job_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Job_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Step_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Step_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Step_Start_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Step_Start_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Step_End_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Step_End_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Duration_Sec", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Duration_Sec", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cpu_Time_Sec", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cpu_Time_Sec", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Total_IO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_IO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[JobStep_Records] SET [PID] = @PID, [Job_Name] = @Job_Name, [Step_Name] = @Step_Name, [Step_Start_Time] = @Step_Start_Time, [Step_End_Time] = @Step_End_Time, [Duration_Sec] = @Duration_Sec, [Cpu_Time_Sec] = @Cpu_Time_Sec, [Total_IO] = @Total_IO WHERE (([Record_ID] = @Original_Record_ID) AND ((@IsNull_PID = 1 AND [PID] IS NULL) OR ([PID] = @Original_PID)) AND ([Job_Name] = @Original_Job_Name) AND ([Step_Name] = @Original_Step_Name) AND ([Step_Start_Time] = @Original_Step_Start_Time) AND ((@IsNull_Step_End_Time = 1 AND [Step_End_Time] IS NULL) OR ([Step_End_Time] = @Original_Step_End_Time)) AND ((@IsNull_Duration_Sec = 1 AND [Duration_Sec] IS NULL) OR ([Duration_Sec] = @Original_Duration_Sec)) AND ((@IsNull_Cpu_Time_Sec = 1 AND [Cpu_Time_Sec] IS NULL) OR ([Cpu_Time_Sec] = @Original_Cpu_Time_Sec)) AND ((@IsNull_Total_IO = 1 AND [Total_IO] IS NULL) OR ([Total_IO] = @Original_Total_IO)));
SELECT Record_ID, PID, Job_Name, Step_Name, Step_Start_Time, Step_End_Time, Duration_Sec, Cpu_Time_Sec, Total_IO FROM JobStep_Records WHERE (Job_Name = @Job_Name) AND (Record_ID = @Record_ID) AND (Step_Name = @Step_Name) AND (Step_Start_Time = @Step_Start_Time)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Job_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Job_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Step_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Step_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Step_Start_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Step_Start_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Step_End_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Step_End_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Duration_Sec", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Duration_Sec", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cpu_Time_Sec", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cpu_Time_Sec", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Total_IO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_IO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Record_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Record_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Job_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Job_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Step_Name", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Step_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Step_Start_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Step_Start_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Step_End_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Step_End_Time", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Step_End_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Step_End_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Duration_Sec", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Duration_Sec", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Duration_Sec", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Duration_Sec", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Cpu_Time_Sec", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cpu_Time_Sec", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cpu_Time_Sec", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cpu_Time_Sec", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Total_IO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_IO", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Total_IO", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_IO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Record_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Record_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=DANSDELL\\SQLEXPRESS;Initial Catalog=VseDb;Integrated Security=True";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Record_ID, PID, Job_Name, Step_Name, Step_Start_Time, Step_End_Time, Durat" +
                "ion_Sec, Cpu_Time_Sec, Total_IO FROM dbo.JobStep_Records";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(VseDbDataSet.JobStep_RecordsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual VseDbDataSet.JobStep_RecordsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            VseDbDataSet.JobStep_RecordsDataTable dataTable = new VseDbDataSet.JobStep_RecordsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet.JobStep_RecordsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet dataSet) {
            return this.Adapter.Update(dataSet, "JobStep_Records");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Record_ID, string Original_PID, string Original_Job_Name, string Original_Step_Name, System.DateTime Original_Step_Start_Time, global::System.Nullable<global::System.DateTime> Original_Step_End_Time, global::System.Nullable<double> Original_Duration_Sec, global::System.Nullable<double> Original_Cpu_Time_Sec, global::System.Nullable<double> Original_Total_IO) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Record_ID));
            if ((Original_PID == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_PID));
            }
            if ((Original_Job_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Job_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Job_Name));
            }
            if ((Original_Step_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Step_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Step_Name));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_Step_Start_Time));
            if ((Original_Step_End_Time.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_Step_End_Time.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_Duration_Sec.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((double)(Original_Duration_Sec.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_Cpu_Time_Sec.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((double)(Original_Cpu_Time_Sec.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_Total_IO.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((double)(Original_Total_IO.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string PID, string Job_Name, string Step_Name, System.DateTime Step_Start_Time, global::System.Nullable<global::System.DateTime> Step_End_Time, global::System.Nullable<double> Duration_Sec, global::System.Nullable<double> Cpu_Time_Sec, global::System.Nullable<double> Total_IO) {
            if ((PID == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(PID));
            }
            if ((Job_Name == null)) {
                throw new global::System.ArgumentNullException("Job_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Job_Name));
            }
            if ((Step_Name == null)) {
                throw new global::System.ArgumentNullException("Step_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Step_Name));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(Step_Start_Time));
            if ((Step_End_Time.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(Step_End_Time.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Duration_Sec.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(Duration_Sec.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Cpu_Time_Sec.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(Cpu_Time_Sec.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Total_IO.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(Total_IO.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string PID, 
                    string Job_Name, 
                    string Step_Name, 
                    System.DateTime Step_Start_Time, 
                    global::System.Nullable<global::System.DateTime> Step_End_Time, 
                    global::System.Nullable<double> Duration_Sec, 
                    global::System.Nullable<double> Cpu_Time_Sec, 
                    global::System.Nullable<double> Total_IO, 
                    int Original_Record_ID, 
                    string Original_PID, 
                    string Original_Job_Name, 
                    string Original_Step_Name, 
                    System.DateTime Original_Step_Start_Time, 
                    global::System.Nullable<global::System.DateTime> Original_Step_End_Time, 
                    global::System.Nullable<double> Original_Duration_Sec, 
                    global::System.Nullable<double> Original_Cpu_Time_Sec, 
                    global::System.Nullable<double> Original_Total_IO, 
                    int Record_ID) {
            if ((PID == null)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(PID));
            }
            if ((Job_Name == null)) {
                throw new global::System.ArgumentNullException("Job_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Job_Name));
            }
            if ((Step_Name == null)) {
                throw new global::System.ArgumentNullException("Step_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Step_Name));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(Step_Start_Time));
            if ((Step_End_Time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(Step_End_Time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Duration_Sec.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(Duration_Sec.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Cpu_Time_Sec.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(Cpu_Time_Sec.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Total_IO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(Total_IO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_Record_ID));
            if ((Original_PID == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_PID));
            }
            if ((Original_Job_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Job_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Job_Name));
            }
            if ((Original_Step_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Step_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Step_Name));
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_Step_Start_Time));
            if ((Original_Step_End_Time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(Original_Step_End_Time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_Duration_Sec.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((double)(Original_Duration_Sec.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_Cpu_Time_Sec.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((double)(Original_Cpu_Time_Sec.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_Total_IO.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((double)(Original_Total_IO.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Record_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string PID, global::System.Nullable<global::System.DateTime> Step_End_Time, global::System.Nullable<double> Duration_Sec, global::System.Nullable<double> Cpu_Time_Sec, global::System.Nullable<double> Total_IO, int Original_Record_ID, string Original_PID, string Original_Job_Name, string Original_Step_Name, System.DateTime Original_Step_Start_Time, global::System.Nullable<global::System.DateTime> Original_Step_End_Time, global::System.Nullable<double> Original_Duration_Sec, global::System.Nullable<double> Original_Cpu_Time_Sec, global::System.Nullable<double> Original_Total_IO) {
            return this.Update(PID, Original_Job_Name, Original_Step_Name, Original_Step_Start_Time, Step_End_Time, Duration_Sec, Cpu_Time_Sec, Total_IO, Original_Record_ID, Original_PID, Original_Job_Name, Original_Step_Name, Original_Step_Start_Time, Original_Step_End_Time, Original_Duration_Sec, Original_Cpu_Time_Sec, Original_Total_IO, Original_Record_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Link_AdapterTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Link_AdapterTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Link_Adapter";
            tableMapping.ColumnMappings.Add("Poll_Time", "Poll_Time");
            tableMapping.ColumnMappings.Add("Type", "Type");
            tableMapping.ColumnMappings.Add("Link_ID", "Link_ID");
            tableMapping.ColumnMappings.Add("Define_Type", "Define_Type");
            tableMapping.ColumnMappings.Add("MTU", "MTU");
            tableMapping.ColumnMappings.Add("CUU_Name", "CUU_Name");
            tableMapping.ColumnMappings.Add("Alternate_CUU", "Alternate_CUU");
            tableMapping.ColumnMappings.Add("IP_Address", "IP_Address");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Link_Adapter] WHERE (([Poll_Time] = @Original_Poll_Time) AND ((@IsNull_Type = 1 AND [Type] IS NULL) OR ([Type] = @Original_Type)) AND ([Link_ID] = @Original_Link_ID) AND ([Define_Type] = @Original_Define_Type) AND ((@IsNull_MTU = 1 AND [MTU] IS NULL) OR ([MTU] = @Original_MTU)) AND ((@IsNull_CUU_Name = 1 AND [CUU_Name] IS NULL) OR ([CUU_Name] = @Original_CUU_Name)) AND ((@IsNull_Alternate_CUU = 1 AND [Alternate_CUU] IS NULL) OR ([Alternate_CUU] = @Original_Alternate_CUU)) AND ((@IsNull_IP_Address = 1 AND [IP_Address] IS NULL) OR ([IP_Address] = @Original_IP_Address)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Link_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Link_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Define_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Define_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MTU", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MTU", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MTU", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MTU", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CUU_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUU_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CUU_Name", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUU_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Alternate_CUU", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Alternate_CUU", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Alternate_CUU", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Alternate_CUU", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP_Address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Address", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Link_Adapter] ([Poll_Time], [Type], [Link_ID], [Define_Type], [MTU], [CUU_Name], [Alternate_CUU], [IP_Address]) VALUES (@Poll_Time, @Type, @Link_ID, @Define_Type, @MTU, @CUU_Name, @Alternate_CUU, @IP_Address);
SELECT Poll_Time, Type, Link_ID, Define_Type, MTU, CUU_Name, Alternate_CUU, IP_Address FROM Link_Adapter WHERE (Define_Type = @Define_Type) AND (Link_ID = @Link_ID) AND (Poll_Time = @Poll_Time)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Link_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Link_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Define_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Define_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MTU", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MTU", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUU_Name", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUU_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Alternate_CUU", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Alternate_CUU", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Link_Adapter] SET [Poll_Time] = @Poll_Time, [Type] = @Type, [Link_ID] = @Link_ID, [Define_Type] = @Define_Type, [MTU] = @MTU, [CUU_Name] = @CUU_Name, [Alternate_CUU] = @Alternate_CUU, [IP_Address] = @IP_Address WHERE (([Poll_Time] = @Original_Poll_Time) AND ((@IsNull_Type = 1 AND [Type] IS NULL) OR ([Type] = @Original_Type)) AND ([Link_ID] = @Original_Link_ID) AND ([Define_Type] = @Original_Define_Type) AND ((@IsNull_MTU = 1 AND [MTU] IS NULL) OR ([MTU] = @Original_MTU)) AND ((@IsNull_CUU_Name = 1 AND [CUU_Name] IS NULL) OR ([CUU_Name] = @Original_CUU_Name)) AND ((@IsNull_Alternate_CUU = 1 AND [Alternate_CUU] IS NULL) OR ([Alternate_CUU] = @Original_Alternate_CUU)) AND ((@IsNull_IP_Address = 1 AND [IP_Address] IS NULL) OR ([IP_Address] = @Original_IP_Address)));
SELECT Poll_Time, Type, Link_ID, Define_Type, MTU, CUU_Name, Alternate_CUU, IP_Address FROM Link_Adapter WHERE (Define_Type = @Define_Type) AND (Link_ID = @Link_ID) AND (Poll_Time = @Poll_Time)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Link_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Link_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Define_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Define_Type", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MTU", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MTU", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUU_Name", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUU_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Alternate_CUU", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Alternate_CUU", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Type", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Link_ID", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Link_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Define_Type", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Define_Type", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MTU", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MTU", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MTU", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MTU", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CUU_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUU_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CUU_Name", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUU_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Alternate_CUU", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Alternate_CUU", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Alternate_CUU", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Alternate_CUU", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP_Address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Address", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=DANSDELL\\SQLEXPRESS;Initial Catalog=VseDb;Integrated Security=True";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Poll_Time, Type, Link_ID, Define_Type, MTU, CUU_Name, Alternate_CUU, IP_Ad" +
                "dress FROM dbo.Link_Adapter";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     Poll_Time, Type, Link_ID, Define_Type, MTU, CUU_Name, Alternate_CUU, I" +
                "P_Address\r\nFROM         Link_Adapter\r\nWHERE     (Poll_Time = @pollTime)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pollTime", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(VseDbDataSet.Link_AdapterDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual VseDbDataSet.Link_AdapterDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            VseDbDataSet.Link_AdapterDataTable dataTable = new VseDbDataSet.Link_AdapterDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(VseDbDataSet.Link_AdapterDataTable dataTable, System.DateTime pollTime) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(pollTime));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual VseDbDataSet.Link_AdapterDataTable GetDataBy(System.DateTime pollTime) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(pollTime));
            VseDbDataSet.Link_AdapterDataTable dataTable = new VseDbDataSet.Link_AdapterDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet.Link_AdapterDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Link_Adapter");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(System.DateTime Original_Poll_Time, string Original_Type, string Original_Link_ID, string Original_Define_Type, global::System.Nullable<double> Original_MTU, string Original_CUU_Name, string Original_Alternate_CUU, string Original_IP_Address) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.DateTime)(Original_Poll_Time));
            if ((Original_Type == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Type));
            }
            if ((Original_Link_ID == null)) {
                throw new global::System.ArgumentNullException("Original_Link_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Link_ID));
            }
            if ((Original_Define_Type == null)) {
                throw new global::System.ArgumentNullException("Original_Define_Type");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Define_Type));
            }
            if ((Original_MTU.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_MTU.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_CUU_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_CUU_Name));
            }
            if ((Original_Alternate_CUU == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Alternate_CUU));
            }
            if ((Original_IP_Address == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_IP_Address));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.DateTime Poll_Time, string Type, string Link_ID, string Define_Type, global::System.Nullable<double> MTU, string CUU_Name, string Alternate_CUU, string IP_Address) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(Poll_Time));
            if ((Type == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Type));
            }
            if ((Link_ID == null)) {
                throw new global::System.ArgumentNullException("Link_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Link_ID));
            }
            if ((Define_Type == null)) {
                throw new global::System.ArgumentNullException("Define_Type");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Define_Type));
            }
            if ((MTU.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(MTU.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((CUU_Name == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(CUU_Name));
            }
            if ((Alternate_CUU == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Alternate_CUU));
            }
            if ((IP_Address == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(IP_Address));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime Poll_Time, 
                    string Type, 
                    string Link_ID, 
                    string Define_Type, 
                    global::System.Nullable<double> MTU, 
                    string CUU_Name, 
                    string Alternate_CUU, 
                    string IP_Address, 
                    System.DateTime Original_Poll_Time, 
                    string Original_Type, 
                    string Original_Link_ID, 
                    string Original_Define_Type, 
                    global::System.Nullable<double> Original_MTU, 
                    string Original_CUU_Name, 
                    string Original_Alternate_CUU, 
                    string Original_IP_Address) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(Poll_Time));
            if ((Type == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Type));
            }
            if ((Link_ID == null)) {
                throw new global::System.ArgumentNullException("Link_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Link_ID));
            }
            if ((Define_Type == null)) {
                throw new global::System.ArgumentNullException("Define_Type");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Define_Type));
            }
            if ((MTU.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(MTU.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((CUU_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(CUU_Name));
            }
            if ((Alternate_CUU == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Alternate_CUU));
            }
            if ((IP_Address == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(IP_Address));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(Original_Poll_Time));
            if ((Original_Type == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_Type));
            }
            if ((Original_Link_ID == null)) {
                throw new global::System.ArgumentNullException("Original_Link_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Link_ID));
            }
            if ((Original_Define_Type == null)) {
                throw new global::System.ArgumentNullException("Original_Define_Type");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Define_Type));
            }
            if ((Original_MTU.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(Original_MTU.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_CUU_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_CUU_Name));
            }
            if ((Original_Alternate_CUU == null)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_Alternate_CUU));
            }
            if ((Original_IP_Address == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_IP_Address));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Type, global::System.Nullable<double> MTU, string CUU_Name, string Alternate_CUU, string IP_Address, System.DateTime Original_Poll_Time, string Original_Type, string Original_Link_ID, string Original_Define_Type, global::System.Nullable<double> Original_MTU, string Original_CUU_Name, string Original_Alternate_CUU, string Original_IP_Address) {
            return this.Update(Original_Poll_Time, Type, Original_Link_ID, Original_Define_Type, MTU, CUU_Name, Alternate_CUU, IP_Address, Original_Poll_Time, Original_Type, Original_Link_ID, Original_Define_Type, Original_MTU, Original_CUU_Name, Original_Alternate_CUU, Original_IP_Address);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Partition_Job_StepTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Partition_Job_StepTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Partition_Job_Step";
            tableMapping.ColumnMappings.Add("Poll_Time", "Poll_Time");
            tableMapping.ColumnMappings.Add("Partition_ID", "Partition_ID");
            tableMapping.ColumnMappings.Add("Power_Job_Name", "Power_Job_Name");
            tableMapping.ColumnMappings.Add("VSE_Job_Name", "VSE_Job_Name");
            tableMapping.ColumnMappings.Add("VSE_Step_Name", "VSE_Step_Name");
            tableMapping.ColumnMappings.Add("Job_Start_Time", "Job_Start_Time");
            tableMapping.ColumnMappings.Add("Step_Start_Time", "Step_Start_Time");
            tableMapping.ColumnMappings.Add("CPU_Time_sec", "CPU_Time_sec");
            tableMapping.ColumnMappings.Add("SIO_Count", "SIO_Count");
            tableMapping.ColumnMappings.Add("Priority", "Priority");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Partition_Job_Step] WHERE (([Poll_Time] = @Original_Poll_Time) AND ([Partition_ID] = @Original_Partition_ID) AND ([Power_Job_Name] = @Original_Power_Job_Name) AND ([VSE_Job_Name] = @Original_VSE_Job_Name) AND ([VSE_Step_Name] = @Original_VSE_Step_Name) AND ([Job_Start_Time] = @Original_Job_Start_Time) AND ([Step_Start_Time] = @Original_Step_Start_Time) AND ((@IsNull_CPU_Time_sec = 1 AND [CPU_Time_sec] IS NULL) OR ([CPU_Time_sec] = @Original_CPU_Time_sec)) AND ((@IsNull_SIO_Count = 1 AND [SIO_Count] IS NULL) OR ([SIO_Count] = @Original_SIO_Count)) AND ((@IsNull_Priority = 1 AND [Priority] IS NULL) OR ([Priority] = @Original_Priority)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Partition_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Partition_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Power_Job_Name", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Power_Job_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VSE_Job_Name", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VSE_Job_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VSE_Step_Name", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VSE_Step_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Job_Start_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Job_Start_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Step_Start_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Step_Start_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CPU_Time_sec", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CPU_Time_sec", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CPU_Time_sec", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CPU_Time_sec", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SIO_Count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SIO_Count", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SIO_Count", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SIO_Count", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Priority", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Priority", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Priority", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Priority", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Partition_Job_Step] ([Poll_Time], [Partition_ID], [Power_Job_Name], [VSE_Job_Name], [VSE_Step_Name], [Job_Start_Time], [Step_Start_Time], [CPU_Time_sec], [SIO_Count], [Priority]) VALUES (@Poll_Time, @Partition_ID, @Power_Job_Name, @VSE_Job_Name, @VSE_Step_Name, @Job_Start_Time, @Step_Start_Time, @CPU_Time_sec, @SIO_Count, @Priority);
SELECT Poll_Time, Partition_ID, Power_Job_Name, VSE_Job_Name, VSE_Step_Name, Job_Start_Time, Step_Start_Time, CPU_Time_sec, SIO_Count, Priority FROM Partition_Job_Step WHERE (Job_Start_Time = @Job_Start_Time) AND (Partition_ID = @Partition_ID) AND (Poll_Time = @Poll_Time) AND (Power_Job_Name = @Power_Job_Name) AND (Step_Start_Time = @Step_Start_Time) AND (VSE_Job_Name = @VSE_Job_Name) AND (VSE_Step_Name = @VSE_Step_Name)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Partition_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Partition_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Power_Job_Name", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Power_Job_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VSE_Job_Name", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VSE_Job_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VSE_Step_Name", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VSE_Step_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Job_Start_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Job_Start_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Step_Start_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Step_Start_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CPU_Time_sec", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CPU_Time_sec", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SIO_Count", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SIO_Count", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Priority", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Priority", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Partition_Job_Step] SET [Poll_Time] = @Poll_Time, [Partition_ID] = @Partition_ID, [Power_Job_Name] = @Power_Job_Name, [VSE_Job_Name] = @VSE_Job_Name, [VSE_Step_Name] = @VSE_Step_Name, [Job_Start_Time] = @Job_Start_Time, [Step_Start_Time] = @Step_Start_Time, [CPU_Time_sec] = @CPU_Time_sec, [SIO_Count] = @SIO_Count, [Priority] = @Priority WHERE (([Poll_Time] = @Original_Poll_Time) AND ([Partition_ID] = @Original_Partition_ID) AND ([Power_Job_Name] = @Original_Power_Job_Name) AND ([VSE_Job_Name] = @Original_VSE_Job_Name) AND ([VSE_Step_Name] = @Original_VSE_Step_Name) AND ([Job_Start_Time] = @Original_Job_Start_Time) AND ([Step_Start_Time] = @Original_Step_Start_Time) AND ((@IsNull_CPU_Time_sec = 1 AND [CPU_Time_sec] IS NULL) OR ([CPU_Time_sec] = @Original_CPU_Time_sec)) AND ((@IsNull_SIO_Count = 1 AND [SIO_Count] IS NULL) OR ([SIO_Count] = @Original_SIO_Count)) AND ((@IsNull_Priority = 1 AND [Priority] IS NULL) OR ([Priority] = @Original_Priority)));
SELECT Poll_Time, Partition_ID, Power_Job_Name, VSE_Job_Name, VSE_Step_Name, Job_Start_Time, Step_Start_Time, CPU_Time_sec, SIO_Count, Priority FROM Partition_Job_Step WHERE (Job_Start_Time = @Job_Start_Time) AND (Partition_ID = @Partition_ID) AND (Poll_Time = @Poll_Time) AND (Power_Job_Name = @Power_Job_Name) AND (Step_Start_Time = @Step_Start_Time) AND (VSE_Job_Name = @VSE_Job_Name) AND (VSE_Step_Name = @VSE_Step_Name)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Partition_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Partition_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Power_Job_Name", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Power_Job_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VSE_Job_Name", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VSE_Job_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@VSE_Step_Name", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VSE_Step_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Job_Start_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Job_Start_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Step_Start_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Step_Start_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CPU_Time_sec", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CPU_Time_sec", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SIO_Count", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SIO_Count", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Priority", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Priority", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Partition_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Partition_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Power_Job_Name", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Power_Job_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VSE_Job_Name", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VSE_Job_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_VSE_Step_Name", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "VSE_Step_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Job_Start_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Job_Start_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Step_Start_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Step_Start_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CPU_Time_sec", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CPU_Time_sec", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CPU_Time_sec", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CPU_Time_sec", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SIO_Count", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SIO_Count", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SIO_Count", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SIO_Count", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Priority", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Priority", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Priority", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Priority", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=DANSDELL\\SQLEXPRESS;Initial Catalog=VseDb;Integrated Security=True";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Poll_Time, Partition_ID, Power_Job_Name, VSE_Job_Name, VSE_Step_Name, Job_" +
                "Start_Time, Step_Start_Time, CPU_Time_sec, SIO_Count, Priority FROM dbo.Partitio" +
                "n_Job_Step";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     Poll_Time, Partition_ID, Power_Job_Name, VSE_Job_Name, VSE_Step_Name, " +
                "Job_Start_Time, Step_Start_Time, CPU_Time_sec, SIO_Count, \r\n                    " +
                "  Priority\r\nFROM         Partition_Job_Step\r\nWHERE     (Poll_Time = @pollTime)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pollTime", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(VseDbDataSet.Partition_Job_StepDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual VseDbDataSet.Partition_Job_StepDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            VseDbDataSet.Partition_Job_StepDataTable dataTable = new VseDbDataSet.Partition_Job_StepDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(VseDbDataSet.Partition_Job_StepDataTable dataTable, System.DateTime pollTime) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(pollTime));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual VseDbDataSet.Partition_Job_StepDataTable GetDataBy(System.DateTime pollTime) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(pollTime));
            VseDbDataSet.Partition_Job_StepDataTable dataTable = new VseDbDataSet.Partition_Job_StepDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet.Partition_Job_StepDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Partition_Job_Step");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(System.DateTime Original_Poll_Time, string Original_Partition_ID, string Original_Power_Job_Name, string Original_VSE_Job_Name, string Original_VSE_Step_Name, System.DateTime Original_Job_Start_Time, System.DateTime Original_Step_Start_Time, global::System.Nullable<double> Original_CPU_Time_sec, global::System.Nullable<double> Original_SIO_Count, global::System.Nullable<double> Original_Priority) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.DateTime)(Original_Poll_Time));
            if ((Original_Partition_ID == null)) {
                throw new global::System.ArgumentNullException("Original_Partition_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Partition_ID));
            }
            if ((Original_Power_Job_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Power_Job_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Power_Job_Name));
            }
            if ((Original_VSE_Job_Name == null)) {
                throw new global::System.ArgumentNullException("Original_VSE_Job_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_VSE_Job_Name));
            }
            if ((Original_VSE_Step_Name == null)) {
                throw new global::System.ArgumentNullException("Original_VSE_Step_Name");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_VSE_Step_Name));
            }
            this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_Job_Start_Time));
            this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_Step_Start_Time));
            if ((Original_CPU_Time_sec.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((double)(Original_CPU_Time_sec.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_SIO_Count.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((double)(Original_SIO_Count.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_Priority.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((double)(Original_Priority.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.DateTime Poll_Time, string Partition_ID, string Power_Job_Name, string VSE_Job_Name, string VSE_Step_Name, System.DateTime Job_Start_Time, System.DateTime Step_Start_Time, global::System.Nullable<double> CPU_Time_sec, global::System.Nullable<double> SIO_Count, global::System.Nullable<double> Priority) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(Poll_Time));
            if ((Partition_ID == null)) {
                throw new global::System.ArgumentNullException("Partition_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Partition_ID));
            }
            if ((Power_Job_Name == null)) {
                throw new global::System.ArgumentNullException("Power_Job_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Power_Job_Name));
            }
            if ((VSE_Job_Name == null)) {
                throw new global::System.ArgumentNullException("VSE_Job_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(VSE_Job_Name));
            }
            if ((VSE_Step_Name == null)) {
                throw new global::System.ArgumentNullException("VSE_Step_Name");
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(VSE_Step_Name));
            }
            this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(Job_Start_Time));
            this.Adapter.InsertCommand.Parameters[6].Value = ((System.DateTime)(Step_Start_Time));
            if ((CPU_Time_sec.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(CPU_Time_sec.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((SIO_Count.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(SIO_Count.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Priority.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((double)(Priority.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime Poll_Time, 
                    string Partition_ID, 
                    string Power_Job_Name, 
                    string VSE_Job_Name, 
                    string VSE_Step_Name, 
                    System.DateTime Job_Start_Time, 
                    System.DateTime Step_Start_Time, 
                    global::System.Nullable<double> CPU_Time_sec, 
                    global::System.Nullable<double> SIO_Count, 
                    global::System.Nullable<double> Priority, 
                    System.DateTime Original_Poll_Time, 
                    string Original_Partition_ID, 
                    string Original_Power_Job_Name, 
                    string Original_VSE_Job_Name, 
                    string Original_VSE_Step_Name, 
                    System.DateTime Original_Job_Start_Time, 
                    System.DateTime Original_Step_Start_Time, 
                    global::System.Nullable<double> Original_CPU_Time_sec, 
                    global::System.Nullable<double> Original_SIO_Count, 
                    global::System.Nullable<double> Original_Priority) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(Poll_Time));
            if ((Partition_ID == null)) {
                throw new global::System.ArgumentNullException("Partition_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Partition_ID));
            }
            if ((Power_Job_Name == null)) {
                throw new global::System.ArgumentNullException("Power_Job_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Power_Job_Name));
            }
            if ((VSE_Job_Name == null)) {
                throw new global::System.ArgumentNullException("VSE_Job_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(VSE_Job_Name));
            }
            if ((VSE_Step_Name == null)) {
                throw new global::System.ArgumentNullException("VSE_Step_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(VSE_Step_Name));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Job_Start_Time));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Step_Start_Time));
            if ((CPU_Time_sec.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(CPU_Time_sec.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((SIO_Count.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(SIO_Count.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Priority.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(Priority.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_Poll_Time));
            if ((Original_Partition_ID == null)) {
                throw new global::System.ArgumentNullException("Original_Partition_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Partition_ID));
            }
            if ((Original_Power_Job_Name == null)) {
                throw new global::System.ArgumentNullException("Original_Power_Job_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_Power_Job_Name));
            }
            if ((Original_VSE_Job_Name == null)) {
                throw new global::System.ArgumentNullException("Original_VSE_Job_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_VSE_Job_Name));
            }
            if ((Original_VSE_Step_Name == null)) {
                throw new global::System.ArgumentNullException("Original_VSE_Step_Name");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(Original_VSE_Step_Name));
            }
            this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(Original_Job_Start_Time));
            this.Adapter.UpdateCommand.Parameters[16].Value = ((System.DateTime)(Original_Step_Start_Time));
            if ((Original_CPU_Time_sec.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((double)(Original_CPU_Time_sec.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_SIO_Count.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((double)(Original_SIO_Count.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_Priority.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((double)(Original_Priority.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<double> CPU_Time_sec, global::System.Nullable<double> SIO_Count, global::System.Nullable<double> Priority, System.DateTime Original_Poll_Time, string Original_Partition_ID, string Original_Power_Job_Name, string Original_VSE_Job_Name, string Original_VSE_Step_Name, System.DateTime Original_Job_Start_Time, System.DateTime Original_Step_Start_Time, global::System.Nullable<double> Original_CPU_Time_sec, global::System.Nullable<double> Original_SIO_Count, global::System.Nullable<double> Original_Priority) {
            return this.Update(Original_Poll_Time, Original_Partition_ID, Original_Power_Job_Name, Original_VSE_Job_Name, Original_VSE_Step_Name, Original_Job_Start_Time, Original_Step_Start_Time, CPU_Time_sec, SIO_Count, Priority, Original_Poll_Time, Original_Partition_ID, Original_Power_Job_Name, Original_VSE_Job_Name, Original_VSE_Step_Name, Original_Job_Start_Time, Original_Step_Start_Time, Original_CPU_Time_sec, Original_SIO_Count, Original_Priority);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SeeServer_SummaryTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SeeServer_SummaryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "SeeServer_Summary";
            tableMapping.ColumnMappings.Add("Poll_Time", "Poll_Time");
            tableMapping.ColumnMappings.Add("SeeServer_Start_Time", "SeeServer_Start_Time");
            tableMapping.ColumnMappings.Add("PID", "PID");
            tableMapping.ColumnMappings.Add("Job_Name", "Job_Name");
            tableMapping.ColumnMappings.Add("Release", "Release");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[SeeServer_Summary] WHERE (([Poll_Time] = @Original_Poll_Time) AND ((@IsNull_SeeServer_Start_Time = 1 AND [SeeServer_Start_Time] IS NULL) OR ([SeeServer_Start_Time] = @Original_SeeServer_Start_Time)) AND ((@IsNull_PID = 1 AND [PID] IS NULL) OR ([PID] = @Original_PID)) AND ((@IsNull_Job_Name = 1 AND [Job_Name] IS NULL) OR ([Job_Name] = @Original_Job_Name)) AND ((@IsNull_Release = 1 AND [Release] IS NULL) OR ([Release] = @Original_Release)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SeeServer_Start_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SeeServer_Start_Time", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SeeServer_Start_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SeeServer_Start_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Job_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Job_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Job_Name", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Job_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Release", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Release", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Release", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Release", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[SeeServer_Summary] ([Poll_Time], [SeeServer_Start_Time], [PID], [Job_Name], [Release]) VALUES (@Poll_Time, @SeeServer_Start_Time, @PID, @Job_Name, @Release);
SELECT Poll_Time, SeeServer_Start_Time, PID, Job_Name, Release FROM SeeServer_Summary WHERE (Poll_Time = @Poll_Time)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SeeServer_Start_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SeeServer_Start_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Job_Name", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Job_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Release", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Release", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[SeeServer_Summary] SET [Poll_Time] = @Poll_Time, [SeeServer_Start_Time] = @SeeServer_Start_Time, [PID] = @PID, [Job_Name] = @Job_Name, [Release] = @Release WHERE (([Poll_Time] = @Original_Poll_Time) AND ((@IsNull_SeeServer_Start_Time = 1 AND [SeeServer_Start_Time] IS NULL) OR ([SeeServer_Start_Time] = @Original_SeeServer_Start_Time)) AND ((@IsNull_PID = 1 AND [PID] IS NULL) OR ([PID] = @Original_PID)) AND ((@IsNull_Job_Name = 1 AND [Job_Name] IS NULL) OR ([Job_Name] = @Original_Job_Name)) AND ((@IsNull_Release = 1 AND [Release] IS NULL) OR ([Release] = @Original_Release)));
SELECT Poll_Time, SeeServer_Start_Time, PID, Job_Name, Release FROM SeeServer_Summary WHERE (Poll_Time = @Poll_Time)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SeeServer_Start_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SeeServer_Start_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Job_Name", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Job_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Release", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Release", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SeeServer_Start_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SeeServer_Start_Time", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SeeServer_Start_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SeeServer_Start_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Job_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Job_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Job_Name", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Job_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Release", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Release", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Release", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Release", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=DANSDELL\\SQLEXPRESS;Initial Catalog=VseDb;Integrated Security=True";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Poll_Time, SeeServer_Start_Time, PID, Job_Name, Release FROM dbo.SeeServer" +
                "_Summary";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     Poll_Time, SeeServer_Start_Time, PID, Job_Name, Release\r\nFROM         " +
                "SeeServer_Summary\r\nWHERE     (Poll_Time = @pollTime)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pollTime", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(VseDbDataSet.SeeServer_SummaryDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual VseDbDataSet.SeeServer_SummaryDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            VseDbDataSet.SeeServer_SummaryDataTable dataTable = new VseDbDataSet.SeeServer_SummaryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(VseDbDataSet.SeeServer_SummaryDataTable dataTable, System.DateTime pollTime) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(pollTime));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual VseDbDataSet.SeeServer_SummaryDataTable GetDataBy(System.DateTime pollTime) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(pollTime));
            VseDbDataSet.SeeServer_SummaryDataTable dataTable = new VseDbDataSet.SeeServer_SummaryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet.SeeServer_SummaryDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet dataSet) {
            return this.Adapter.Update(dataSet, "SeeServer_Summary");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(System.DateTime Original_Poll_Time, global::System.Nullable<global::System.DateTime> Original_SeeServer_Start_Time, string Original_PID, string Original_Job_Name, string Original_Release) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.DateTime)(Original_Poll_Time));
            if ((Original_SeeServer_Start_Time.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_SeeServer_Start_Time.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_PID == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_PID));
            }
            if ((Original_Job_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Job_Name));
            }
            if ((Original_Release == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Release));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.DateTime Poll_Time, global::System.Nullable<global::System.DateTime> SeeServer_Start_Time, string PID, string Job_Name, string Release) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(Poll_Time));
            if ((SeeServer_Start_Time.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(SeeServer_Start_Time.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PID == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(PID));
            }
            if ((Job_Name == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Job_Name));
            }
            if ((Release == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Release));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.DateTime Poll_Time, global::System.Nullable<global::System.DateTime> SeeServer_Start_Time, string PID, string Job_Name, string Release, System.DateTime Original_Poll_Time, global::System.Nullable<global::System.DateTime> Original_SeeServer_Start_Time, string Original_PID, string Original_Job_Name, string Original_Release) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(Poll_Time));
            if ((SeeServer_Start_Time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(SeeServer_Start_Time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PID == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(PID));
            }
            if ((Job_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Job_Name));
            }
            if ((Release == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Release));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Original_Poll_Time));
            if ((Original_SeeServer_Start_Time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(Original_SeeServer_Start_Time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_PID == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_PID));
            }
            if ((Original_Job_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Job_Name));
            }
            if ((Original_Release == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_Release));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<global::System.DateTime> SeeServer_Start_Time, string PID, string Job_Name, string Release, System.DateTime Original_Poll_Time, global::System.Nullable<global::System.DateTime> Original_SeeServer_Start_Time, string Original_PID, string Original_Job_Name, string Original_Release) {
            return this.Update(Original_Poll_Time, SeeServer_Start_Time, PID, Job_Name, Release, Original_Poll_Time, Original_SeeServer_Start_Time, Original_PID, Original_Job_Name, Original_Release);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Startup_RecordsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Startup_RecordsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Startup_Records";
            tableMapping.ColumnMappings.Add("Record_ID", "Record_ID");
            tableMapping.ColumnMappings.Add("Start_Time", "Start_Time");
            tableMapping.ColumnMappings.Add("Cpu_ID", "Cpu_ID");
            tableMapping.ColumnMappings.Add("Program_ID", "Program_ID");
            tableMapping.ColumnMappings.Add("Program_Version", "Program_Version");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Startup_Records] WHERE (([Record_ID] = @Original_Record_ID) AND ([Start_Time] = @Original_Start_Time) AND ((@IsNull_Cpu_ID = 1 AND [Cpu_ID] IS NULL) OR ([Cpu_ID] = @Original_Cpu_ID)) AND ([Program_ID] = @Original_Program_ID) AND ((@IsNull_Program_Version = 1 AND [Program_Version] IS NULL) OR ([Program_Version] = @Original_Program_Version)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Record_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Record_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Start_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Start_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Cpu_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cpu_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cpu_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cpu_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Program_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Program_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Program_Version", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Program_Version", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Program_Version", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Program_Version", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Startup_Records] ([Start_Time], [Cpu_ID], [Program_ID], [Program_Version]) VALUES (@Start_Time, @Cpu_ID, @Program_ID, @Program_Version);
SELECT Record_ID, Start_Time, Cpu_ID, Program_ID, Program_Version FROM Startup_Records WHERE (Program_ID = @Program_ID) AND (Record_ID = SCOPE_IDENTITY()) AND (Start_Time = @Start_Time)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Start_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Start_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cpu_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cpu_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Program_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Program_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Program_Version", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Program_Version", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Startup_Records] SET [Start_Time] = @Start_Time, [Cpu_ID] = @Cpu_ID, [Program_ID] = @Program_ID, [Program_Version] = @Program_Version WHERE (([Record_ID] = @Original_Record_ID) AND ([Start_Time] = @Original_Start_Time) AND ((@IsNull_Cpu_ID = 1 AND [Cpu_ID] IS NULL) OR ([Cpu_ID] = @Original_Cpu_ID)) AND ([Program_ID] = @Original_Program_ID) AND ((@IsNull_Program_Version = 1 AND [Program_Version] IS NULL) OR ([Program_Version] = @Original_Program_Version)));
SELECT Record_ID, Start_Time, Cpu_ID, Program_ID, Program_Version FROM Startup_Records WHERE (Program_ID = @Program_ID) AND (Record_ID = @Record_ID) AND (Start_Time = @Start_Time)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Start_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Start_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cpu_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cpu_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Program_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Program_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Program_Version", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Program_Version", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Record_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Record_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Start_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Start_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Cpu_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cpu_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cpu_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cpu_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Program_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Program_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Program_Version", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Program_Version", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Program_Version", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Program_Version", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Record_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Record_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=DANSDELL\\SQLEXPRESS;Initial Catalog=VseDb;Integrated Security=True";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Record_ID, Start_Time, Cpu_ID, Program_ID, Program_Version FROM dbo.Startu" +
                "p_Records";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(VseDbDataSet.Startup_RecordsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual VseDbDataSet.Startup_RecordsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            VseDbDataSet.Startup_RecordsDataTable dataTable = new VseDbDataSet.Startup_RecordsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet.Startup_RecordsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Startup_Records");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Record_ID, System.DateTime Original_Start_Time, string Original_Cpu_ID, string Original_Program_ID, string Original_Program_Version) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Record_ID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((System.DateTime)(Original_Start_Time));
            if ((Original_Cpu_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Cpu_ID));
            }
            if ((Original_Program_ID == null)) {
                throw new global::System.ArgumentNullException("Original_Program_ID");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Program_ID));
            }
            if ((Original_Program_Version == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Program_Version));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.DateTime Start_Time, string Cpu_ID, string Program_ID, string Program_Version) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(Start_Time));
            if ((Cpu_ID == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Cpu_ID));
            }
            if ((Program_ID == null)) {
                throw new global::System.ArgumentNullException("Program_ID");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Program_ID));
            }
            if ((Program_Version == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Program_Version));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.DateTime Start_Time, string Cpu_ID, string Program_ID, string Program_Version, int Original_Record_ID, System.DateTime Original_Start_Time, string Original_Cpu_ID, string Original_Program_ID, string Original_Program_Version, int Record_ID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(Start_Time));
            if ((Cpu_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Cpu_ID));
            }
            if ((Program_ID == null)) {
                throw new global::System.ArgumentNullException("Program_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Program_ID));
            }
            if ((Program_Version == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Program_Version));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_Record_ID));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Original_Start_Time));
            if ((Original_Cpu_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_Cpu_ID));
            }
            if ((Original_Program_ID == null)) {
                throw new global::System.ArgumentNullException("Original_Program_ID");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Program_ID));
            }
            if ((Original_Program_Version == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_Program_Version));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Record_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Cpu_ID, string Program_Version, int Original_Record_ID, System.DateTime Original_Start_Time, string Original_Cpu_ID, string Original_Program_ID, string Original_Program_Version) {
            return this.Update(Original_Start_Time, Cpu_ID, Original_Program_ID, Program_Version, Original_Record_ID, Original_Start_Time, Original_Cpu_ID, Original_Program_ID, Original_Program_Version, Original_Record_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TCPIP_ClientsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TCPIP_ClientsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TCPIP_Clients";
            tableMapping.ColumnMappings.Add("Poll_Time", "Poll_Time");
            tableMapping.ColumnMappings.Add("FTP_Clients", "FTP_Clients");
            tableMapping.ColumnMappings.Add("Telnet_Clients", "Telnet_Clients");
            tableMapping.ColumnMappings.Add("LPR_Clients", "LPR_Clients");
            tableMapping.ColumnMappings.Add("HTTP_Clients", "HTTP_Clients");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TCPIP_Clients] WHERE (([Poll_Time] = @Original_Poll_Time) AND ((@IsNull_FTP_Clients = 1 AND [FTP_Clients] IS NULL) OR ([FTP_Clients] = @Original_FTP_Clients)) AND ((@IsNull_Telnet_Clients = 1 AND [Telnet_Clients] IS NULL) OR ([Telnet_Clients] = @Original_Telnet_Clients)) AND ((@IsNull_LPR_Clients = 1 AND [LPR_Clients] IS NULL) OR ([LPR_Clients] = @Original_LPR_Clients)) AND ((@IsNull_HTTP_Clients = 1 AND [HTTP_Clients] IS NULL) OR ([HTTP_Clients] = @Original_HTTP_Clients)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FTP_Clients", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FTP_Clients", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FTP_Clients", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FTP_Clients", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Telnet_Clients", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Telnet_Clients", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Telnet_Clients", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Telnet_Clients", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LPR_Clients", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LPR_Clients", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LPR_Clients", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LPR_Clients", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HTTP_Clients", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HTTP_Clients", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HTTP_Clients", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HTTP_Clients", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TCPIP_Clients] ([Poll_Time], [FTP_Clients], [Telnet_Clients], [LPR_Clients], [HTTP_Clients]) VALUES (@Poll_Time, @FTP_Clients, @Telnet_Clients, @LPR_Clients, @HTTP_Clients);
SELECT Poll_Time, FTP_Clients, Telnet_Clients, LPR_Clients, HTTP_Clients FROM TCPIP_Clients WHERE (Poll_Time = @Poll_Time)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FTP_Clients", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FTP_Clients", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Telnet_Clients", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Telnet_Clients", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LPR_Clients", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LPR_Clients", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HTTP_Clients", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HTTP_Clients", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TCPIP_Clients] SET [Poll_Time] = @Poll_Time, [FTP_Clients] = @FTP_Clients, [Telnet_Clients] = @Telnet_Clients, [LPR_Clients] = @LPR_Clients, [HTTP_Clients] = @HTTP_Clients WHERE (([Poll_Time] = @Original_Poll_Time) AND ((@IsNull_FTP_Clients = 1 AND [FTP_Clients] IS NULL) OR ([FTP_Clients] = @Original_FTP_Clients)) AND ((@IsNull_Telnet_Clients = 1 AND [Telnet_Clients] IS NULL) OR ([Telnet_Clients] = @Original_Telnet_Clients)) AND ((@IsNull_LPR_Clients = 1 AND [LPR_Clients] IS NULL) OR ([LPR_Clients] = @Original_LPR_Clients)) AND ((@IsNull_HTTP_Clients = 1 AND [HTTP_Clients] IS NULL) OR ([HTTP_Clients] = @Original_HTTP_Clients)));
SELECT Poll_Time, FTP_Clients, Telnet_Clients, LPR_Clients, HTTP_Clients FROM TCPIP_Clients WHERE (Poll_Time = @Poll_Time)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FTP_Clients", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FTP_Clients", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Telnet_Clients", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Telnet_Clients", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LPR_Clients", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LPR_Clients", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HTTP_Clients", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HTTP_Clients", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FTP_Clients", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FTP_Clients", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FTP_Clients", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FTP_Clients", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Telnet_Clients", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Telnet_Clients", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Telnet_Clients", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Telnet_Clients", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LPR_Clients", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LPR_Clients", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LPR_Clients", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LPR_Clients", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HTTP_Clients", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HTTP_Clients", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HTTP_Clients", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HTTP_Clients", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=DANSDELL\\SQLEXPRESS;Initial Catalog=VseDb;Integrated Security=True";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Poll_Time, FTP_Clients, Telnet_Clients, LPR_Clients, HTTP_Clients FROM dbo" +
                ".TCPIP_Clients";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     Poll_Time, FTP_Clients, Telnet_Clients, LPR_Clients, HTTP_Clients\r\nFRO" +
                "M         TCPIP_Clients\r\nWHERE     (Poll_Time = @pollTime)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pollTime", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(VseDbDataSet.TCPIP_ClientsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual VseDbDataSet.TCPIP_ClientsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            VseDbDataSet.TCPIP_ClientsDataTable dataTable = new VseDbDataSet.TCPIP_ClientsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(VseDbDataSet.TCPIP_ClientsDataTable dataTable, System.DateTime pollTime) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(pollTime));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual VseDbDataSet.TCPIP_ClientsDataTable GetDataBy(System.DateTime pollTime) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(pollTime));
            VseDbDataSet.TCPIP_ClientsDataTable dataTable = new VseDbDataSet.TCPIP_ClientsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet.TCPIP_ClientsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TCPIP_Clients");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(System.DateTime Original_Poll_Time, global::System.Nullable<double> Original_FTP_Clients, global::System.Nullable<double> Original_Telnet_Clients, global::System.Nullable<double> Original_LPR_Clients, global::System.Nullable<double> Original_HTTP_Clients) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.DateTime)(Original_Poll_Time));
            if ((Original_FTP_Clients.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((double)(Original_FTP_Clients.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_Telnet_Clients.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((double)(Original_Telnet_Clients.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_LPR_Clients.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_LPR_Clients.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_HTTP_Clients.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((double)(Original_HTTP_Clients.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.DateTime Poll_Time, global::System.Nullable<double> FTP_Clients, global::System.Nullable<double> Telnet_Clients, global::System.Nullable<double> LPR_Clients, global::System.Nullable<double> HTTP_Clients) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(Poll_Time));
            if ((FTP_Clients.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((double)(FTP_Clients.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Telnet_Clients.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((double)(Telnet_Clients.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((LPR_Clients.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(LPR_Clients.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((HTTP_Clients.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(HTTP_Clients.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.DateTime Poll_Time, global::System.Nullable<double> FTP_Clients, global::System.Nullable<double> Telnet_Clients, global::System.Nullable<double> LPR_Clients, global::System.Nullable<double> HTTP_Clients, System.DateTime Original_Poll_Time, global::System.Nullable<double> Original_FTP_Clients, global::System.Nullable<double> Original_Telnet_Clients, global::System.Nullable<double> Original_LPR_Clients, global::System.Nullable<double> Original_HTTP_Clients) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(Poll_Time));
            if ((FTP_Clients.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((double)(FTP_Clients.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Telnet_Clients.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(Telnet_Clients.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((LPR_Clients.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(LPR_Clients.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((HTTP_Clients.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(HTTP_Clients.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Original_Poll_Time));
            if ((Original_FTP_Clients.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(Original_FTP_Clients.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_Telnet_Clients.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(Original_Telnet_Clients.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_LPR_Clients.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((double)(Original_LPR_Clients.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_HTTP_Clients.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((double)(Original_HTTP_Clients.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<double> FTP_Clients, global::System.Nullable<double> Telnet_Clients, global::System.Nullable<double> LPR_Clients, global::System.Nullable<double> HTTP_Clients, System.DateTime Original_Poll_Time, global::System.Nullable<double> Original_FTP_Clients, global::System.Nullable<double> Original_Telnet_Clients, global::System.Nullable<double> Original_LPR_Clients, global::System.Nullable<double> Original_HTTP_Clients) {
            return this.Update(Original_Poll_Time, FTP_Clients, Telnet_Clients, LPR_Clients, HTTP_Clients, Original_Poll_Time, Original_FTP_Clients, Original_Telnet_Clients, Original_LPR_Clients, Original_HTTP_Clients);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TCPIP_DaemonsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TCPIP_DaemonsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TCPIP_Daemons";
            tableMapping.ColumnMappings.Add("Poll_Time", "Poll_Time");
            tableMapping.ColumnMappings.Add("FTP_Daemons", "FTP_Daemons");
            tableMapping.ColumnMappings.Add("Active_FTP_Daemons", "Active_FTP_Daemons");
            tableMapping.ColumnMappings.Add("Max_FTP_Daemons", "Max_FTP_Daemons");
            tableMapping.ColumnMappings.Add("Telnet_Daemons", "Telnet_Daemons");
            tableMapping.ColumnMappings.Add("Active_Telnet_Daemons", "Active_Telnet_Daemons");
            tableMapping.ColumnMappings.Add("Max_Telnet_Daemons", "Max_Telnet_Daemons");
            tableMapping.ColumnMappings.Add("Active_Telnet_Buffers", "Active_Telnet_Buffers");
            tableMapping.ColumnMappings.Add("Max_Telnet_Buffers", "Max_Telnet_Buffers");
            tableMapping.ColumnMappings.Add("LP_Daemons", "LP_Daemons");
            tableMapping.ColumnMappings.Add("HTTP_Daemons", "HTTP_Daemons");
            tableMapping.ColumnMappings.Add("SMTP_Daemons", "SMTP_Daemons");
            tableMapping.ColumnMappings.Add("POP3_Daemons", "POP3_Daemons");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TCPIP_Daemons] WHERE (([Poll_Time] = @Original_Poll_Time) AND ((@IsNull_FTP_Daemons = 1 AND [FTP_Daemons] IS NULL) OR ([FTP_Daemons] = @Original_FTP_Daemons)) AND ((@IsNull_Active_FTP_Daemons = 1 AND [Active_FTP_Daemons] IS NULL) OR ([Active_FTP_Daemons] = @Original_Active_FTP_Daemons)) AND ((@IsNull_Max_FTP_Daemons = 1 AND [Max_FTP_Daemons] IS NULL) OR ([Max_FTP_Daemons] = @Original_Max_FTP_Daemons)) AND ((@IsNull_Telnet_Daemons = 1 AND [Telnet_Daemons] IS NULL) OR ([Telnet_Daemons] = @Original_Telnet_Daemons)) AND ((@IsNull_Active_Telnet_Daemons = 1 AND [Active_Telnet_Daemons] IS NULL) OR ([Active_Telnet_Daemons] = @Original_Active_Telnet_Daemons)) AND ((@IsNull_Max_Telnet_Daemons = 1 AND [Max_Telnet_Daemons] IS NULL) OR ([Max_Telnet_Daemons] = @Original_Max_Telnet_Daemons)) AND ((@IsNull_Active_Telnet_Buffers = 1 AND [Active_Telnet_Buffers] IS NULL) OR ([Active_Telnet_Buffers] = @Original_Active_Telnet_Buffers)) AND ((@IsNull_Max_Telnet_Buffers = 1 AND [Max_Telnet_Buffers] IS NULL) OR ([Max_Telnet_Buffers] = @Original_Max_Telnet_Buffers)) AND ((@IsNull_LP_Daemons = 1 AND [LP_Daemons] IS NULL) OR ([LP_Daemons] = @Original_LP_Daemons)) AND ((@IsNull_HTTP_Daemons = 1 AND [HTTP_Daemons] IS NULL) OR ([HTTP_Daemons] = @Original_HTTP_Daemons)) AND ((@IsNull_SMTP_Daemons = 1 AND [SMTP_Daemons] IS NULL) OR ([SMTP_Daemons] = @Original_SMTP_Daemons)) AND ((@IsNull_POP3_Daemons = 1 AND [POP3_Daemons] IS NULL) OR ([POP3_Daemons] = @Original_POP3_Daemons)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FTP_Daemons", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FTP_Daemons", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FTP_Daemons", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FTP_Daemons", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Active_FTP_Daemons", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active_FTP_Daemons", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Active_FTP_Daemons", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active_FTP_Daemons", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Max_FTP_Daemons", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_FTP_Daemons", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Max_FTP_Daemons", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_FTP_Daemons", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Telnet_Daemons", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Telnet_Daemons", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Telnet_Daemons", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Telnet_Daemons", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Active_Telnet_Daemons", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active_Telnet_Daemons", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Active_Telnet_Daemons", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active_Telnet_Daemons", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Max_Telnet_Daemons", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Telnet_Daemons", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Max_Telnet_Daemons", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Telnet_Daemons", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Active_Telnet_Buffers", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active_Telnet_Buffers", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Active_Telnet_Buffers", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active_Telnet_Buffers", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Max_Telnet_Buffers", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Telnet_Buffers", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Max_Telnet_Buffers", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Telnet_Buffers", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LP_Daemons", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LP_Daemons", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LP_Daemons", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LP_Daemons", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HTTP_Daemons", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HTTP_Daemons", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HTTP_Daemons", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HTTP_Daemons", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SMTP_Daemons", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTP_Daemons", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SMTP_Daemons", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTP_Daemons", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_POP3_Daemons", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POP3_Daemons", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_POP3_Daemons", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POP3_Daemons", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TCPIP_Daemons] ([Poll_Time], [FTP_Daemons], [Active_FTP_Daemons], [Max_FTP_Daemons], [Telnet_Daemons], [Active_Telnet_Daemons], [Max_Telnet_Daemons], [Active_Telnet_Buffers], [Max_Telnet_Buffers], [LP_Daemons], [HTTP_Daemons], [SMTP_Daemons], [POP3_Daemons]) VALUES (@Poll_Time, @FTP_Daemons, @Active_FTP_Daemons, @Max_FTP_Daemons, @Telnet_Daemons, @Active_Telnet_Daemons, @Max_Telnet_Daemons, @Active_Telnet_Buffers, @Max_Telnet_Buffers, @LP_Daemons, @HTTP_Daemons, @SMTP_Daemons, @POP3_Daemons);
SELECT Poll_Time, FTP_Daemons, Active_FTP_Daemons, Max_FTP_Daemons, Telnet_Daemons, Active_Telnet_Daemons, Max_Telnet_Daemons, Active_Telnet_Buffers, Max_Telnet_Buffers, LP_Daemons, HTTP_Daemons, SMTP_Daemons, POP3_Daemons FROM TCPIP_Daemons WHERE (Poll_Time = @Poll_Time)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FTP_Daemons", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FTP_Daemons", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Active_FTP_Daemons", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active_FTP_Daemons", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Max_FTP_Daemons", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_FTP_Daemons", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Telnet_Daemons", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Telnet_Daemons", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Active_Telnet_Daemons", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active_Telnet_Daemons", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Max_Telnet_Daemons", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Telnet_Daemons", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Active_Telnet_Buffers", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active_Telnet_Buffers", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Max_Telnet_Buffers", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Telnet_Buffers", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LP_Daemons", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LP_Daemons", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HTTP_Daemons", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HTTP_Daemons", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SMTP_Daemons", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTP_Daemons", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@POP3_Daemons", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POP3_Daemons", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[TCPIP_Daemons] SET [Poll_Time] = @Poll_Time, [FTP_Daemons] = @FTP_D" +
                "aemons, [Active_FTP_Daemons] = @Active_FTP_Daemons, [Max_FTP_Daemons] = @Max_FTP" +
                "_Daemons, [Telnet_Daemons] = @Telnet_Daemons, [Active_Telnet_Daemons] = @Active_" +
                "Telnet_Daemons, [Max_Telnet_Daemons] = @Max_Telnet_Daemons, [Active_Telnet_Buffe" +
                "rs] = @Active_Telnet_Buffers, [Max_Telnet_Buffers] = @Max_Telnet_Buffers, [LP_Da" +
                "emons] = @LP_Daemons, [HTTP_Daemons] = @HTTP_Daemons, [SMTP_Daemons] = @SMTP_Dae" +
                "mons, [POP3_Daemons] = @POP3_Daemons WHERE (([Poll_Time] = @Original_Poll_Time) " +
                "AND ((@IsNull_FTP_Daemons = 1 AND [FTP_Daemons] IS NULL) OR ([FTP_Daemons] = @Or" +
                "iginal_FTP_Daemons)) AND ((@IsNull_Active_FTP_Daemons = 1 AND [Active_FTP_Daemon" +
                "s] IS NULL) OR ([Active_FTP_Daemons] = @Original_Active_FTP_Daemons)) AND ((@IsN" +
                "ull_Max_FTP_Daemons = 1 AND [Max_FTP_Daemons] IS NULL) OR ([Max_FTP_Daemons] = @" +
                "Original_Max_FTP_Daemons)) AND ((@IsNull_Telnet_Daemons = 1 AND [Telnet_Daemons]" +
                " IS NULL) OR ([Telnet_Daemons] = @Original_Telnet_Daemons)) AND ((@IsNull_Active" +
                "_Telnet_Daemons = 1 AND [Active_Telnet_Daemons] IS NULL) OR ([Active_Telnet_Daem" +
                "ons] = @Original_Active_Telnet_Daemons)) AND ((@IsNull_Max_Telnet_Daemons = 1 AN" +
                "D [Max_Telnet_Daemons] IS NULL) OR ([Max_Telnet_Daemons] = @Original_Max_Telnet_" +
                "Daemons)) AND ((@IsNull_Active_Telnet_Buffers = 1 AND [Active_Telnet_Buffers] IS" +
                " NULL) OR ([Active_Telnet_Buffers] = @Original_Active_Telnet_Buffers)) AND ((@Is" +
                "Null_Max_Telnet_Buffers = 1 AND [Max_Telnet_Buffers] IS NULL) OR ([Max_Telnet_Bu" +
                "ffers] = @Original_Max_Telnet_Buffers)) AND ((@IsNull_LP_Daemons = 1 AND [LP_Dae" +
                "mons] IS NULL) OR ([LP_Daemons] = @Original_LP_Daemons)) AND ((@IsNull_HTTP_Daem" +
                "ons = 1 AND [HTTP_Daemons] IS NULL) OR ([HTTP_Daemons] = @Original_HTTP_Daemons)" +
                ") AND ((@IsNull_SMTP_Daemons = 1 AND [SMTP_Daemons] IS NULL) OR ([SMTP_Daemons] " +
                "= @Original_SMTP_Daemons)) AND ((@IsNull_POP3_Daemons = 1 AND [POP3_Daemons] IS " +
                "NULL) OR ([POP3_Daemons] = @Original_POP3_Daemons)));\r\nSELECT Poll_Time, FTP_Dae" +
                "mons, Active_FTP_Daemons, Max_FTP_Daemons, Telnet_Daemons, Active_Telnet_Daemons" +
                ", Max_Telnet_Daemons, Active_Telnet_Buffers, Max_Telnet_Buffers, LP_Daemons, HTT" +
                "P_Daemons, SMTP_Daemons, POP3_Daemons FROM TCPIP_Daemons WHERE (Poll_Time = @Pol" +
                "l_Time)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@FTP_Daemons", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FTP_Daemons", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Active_FTP_Daemons", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active_FTP_Daemons", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Max_FTP_Daemons", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_FTP_Daemons", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Telnet_Daemons", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Telnet_Daemons", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Active_Telnet_Daemons", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active_Telnet_Daemons", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Max_Telnet_Daemons", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Telnet_Daemons", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Active_Telnet_Buffers", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active_Telnet_Buffers", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Max_Telnet_Buffers", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Telnet_Buffers", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@LP_Daemons", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LP_Daemons", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HTTP_Daemons", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HTTP_Daemons", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SMTP_Daemons", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTP_Daemons", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@POP3_Daemons", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POP3_Daemons", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_FTP_Daemons", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FTP_Daemons", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_FTP_Daemons", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "FTP_Daemons", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Active_FTP_Daemons", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active_FTP_Daemons", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Active_FTP_Daemons", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active_FTP_Daemons", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Max_FTP_Daemons", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_FTP_Daemons", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Max_FTP_Daemons", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_FTP_Daemons", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Telnet_Daemons", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Telnet_Daemons", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Telnet_Daemons", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Telnet_Daemons", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Active_Telnet_Daemons", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active_Telnet_Daemons", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Active_Telnet_Daemons", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active_Telnet_Daemons", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Max_Telnet_Daemons", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Telnet_Daemons", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Max_Telnet_Daemons", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Telnet_Daemons", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Active_Telnet_Buffers", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active_Telnet_Buffers", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Active_Telnet_Buffers", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active_Telnet_Buffers", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Max_Telnet_Buffers", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Telnet_Buffers", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Max_Telnet_Buffers", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Max_Telnet_Buffers", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_LP_Daemons", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LP_Daemons", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_LP_Daemons", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "LP_Daemons", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_HTTP_Daemons", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HTTP_Daemons", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_HTTP_Daemons", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "HTTP_Daemons", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_SMTP_Daemons", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTP_Daemons", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_SMTP_Daemons", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "SMTP_Daemons", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_POP3_Daemons", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POP3_Daemons", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_POP3_Daemons", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "POP3_Daemons", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=DANSDELL\\SQLEXPRESS;Initial Catalog=VseDb;Integrated Security=True";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Poll_Time, FTP_Daemons, Active_FTP_Daemons, Max_FTP_Daemons, Telnet_Daemon" +
                "s, Active_Telnet_Daemons, Max_Telnet_Daemons, Active_Telnet_Buffers, Max_Telnet_" +
                "Buffers, LP_Daemons, HTTP_Daemons, SMTP_Daemons, POP3_Daemons FROM dbo.TCPIP_Dae" +
                "mons";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT     Poll_Time, FTP_Daemons, Active_FTP_Daemons, Max_FTP_Daemons, Telnet_Daemons, Active_Telnet_Daemons, Max_Telnet_Daemons, 
                      Active_Telnet_Buffers, Max_Telnet_Buffers, LP_Daemons, HTTP_Daemons, SMTP_Daemons, POP3_Daemons
FROM         TCPIP_Daemons
WHERE     (Poll_Time = @pollTime)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pollTime", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(VseDbDataSet.TCPIP_DaemonsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual VseDbDataSet.TCPIP_DaemonsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            VseDbDataSet.TCPIP_DaemonsDataTable dataTable = new VseDbDataSet.TCPIP_DaemonsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(VseDbDataSet.TCPIP_DaemonsDataTable dataTable, System.DateTime pollTime) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(pollTime));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual VseDbDataSet.TCPIP_DaemonsDataTable GetDataBy(System.DateTime pollTime) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(pollTime));
            VseDbDataSet.TCPIP_DaemonsDataTable dataTable = new VseDbDataSet.TCPIP_DaemonsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet.TCPIP_DaemonsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TCPIP_Daemons");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(System.DateTime Original_Poll_Time, global::System.Nullable<double> Original_FTP_Daemons, global::System.Nullable<double> Original_Active_FTP_Daemons, global::System.Nullable<double> Original_Max_FTP_Daemons, global::System.Nullable<double> Original_Telnet_Daemons, global::System.Nullable<double> Original_Active_Telnet_Daemons, global::System.Nullable<double> Original_Max_Telnet_Daemons, global::System.Nullable<double> Original_Active_Telnet_Buffers, global::System.Nullable<double> Original_Max_Telnet_Buffers, global::System.Nullable<double> Original_LP_Daemons, global::System.Nullable<double> Original_HTTP_Daemons, global::System.Nullable<double> Original_SMTP_Daemons, global::System.Nullable<double> Original_POP3_Daemons) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.DateTime)(Original_Poll_Time));
            if ((Original_FTP_Daemons.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((double)(Original_FTP_Daemons.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_Active_FTP_Daemons.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((double)(Original_Active_FTP_Daemons.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_Max_FTP_Daemons.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_Max_FTP_Daemons.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_Telnet_Daemons.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((double)(Original_Telnet_Daemons.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_Active_Telnet_Daemons.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((double)(Original_Active_Telnet_Daemons.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_Max_Telnet_Daemons.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((double)(Original_Max_Telnet_Daemons.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_Active_Telnet_Buffers.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((double)(Original_Active_Telnet_Buffers.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_Max_Telnet_Buffers.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((double)(Original_Max_Telnet_Buffers.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_LP_Daemons.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((double)(Original_LP_Daemons.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_HTTP_Daemons.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((double)(Original_HTTP_Daemons.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_SMTP_Daemons.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((double)(Original_SMTP_Daemons.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_POP3_Daemons.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((double)(Original_POP3_Daemons.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.DateTime Poll_Time, global::System.Nullable<double> FTP_Daemons, global::System.Nullable<double> Active_FTP_Daemons, global::System.Nullable<double> Max_FTP_Daemons, global::System.Nullable<double> Telnet_Daemons, global::System.Nullable<double> Active_Telnet_Daemons, global::System.Nullable<double> Max_Telnet_Daemons, global::System.Nullable<double> Active_Telnet_Buffers, global::System.Nullable<double> Max_Telnet_Buffers, global::System.Nullable<double> LP_Daemons, global::System.Nullable<double> HTTP_Daemons, global::System.Nullable<double> SMTP_Daemons, global::System.Nullable<double> POP3_Daemons) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(Poll_Time));
            if ((FTP_Daemons.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((double)(FTP_Daemons.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Active_FTP_Daemons.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((double)(Active_FTP_Daemons.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Max_FTP_Daemons.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(Max_FTP_Daemons.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Telnet_Daemons.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(Telnet_Daemons.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Active_Telnet_Daemons.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(Active_Telnet_Daemons.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Max_Telnet_Daemons.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(Max_Telnet_Daemons.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Active_Telnet_Buffers.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(Active_Telnet_Buffers.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Max_Telnet_Buffers.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(Max_Telnet_Buffers.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((LP_Daemons.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((double)(LP_Daemons.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((HTTP_Daemons.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((double)(HTTP_Daemons.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((SMTP_Daemons.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((double)(SMTP_Daemons.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((POP3_Daemons.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((double)(POP3_Daemons.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime Poll_Time, 
                    global::System.Nullable<double> FTP_Daemons, 
                    global::System.Nullable<double> Active_FTP_Daemons, 
                    global::System.Nullable<double> Max_FTP_Daemons, 
                    global::System.Nullable<double> Telnet_Daemons, 
                    global::System.Nullable<double> Active_Telnet_Daemons, 
                    global::System.Nullable<double> Max_Telnet_Daemons, 
                    global::System.Nullable<double> Active_Telnet_Buffers, 
                    global::System.Nullable<double> Max_Telnet_Buffers, 
                    global::System.Nullable<double> LP_Daemons, 
                    global::System.Nullable<double> HTTP_Daemons, 
                    global::System.Nullable<double> SMTP_Daemons, 
                    global::System.Nullable<double> POP3_Daemons, 
                    System.DateTime Original_Poll_Time, 
                    global::System.Nullable<double> Original_FTP_Daemons, 
                    global::System.Nullable<double> Original_Active_FTP_Daemons, 
                    global::System.Nullable<double> Original_Max_FTP_Daemons, 
                    global::System.Nullable<double> Original_Telnet_Daemons, 
                    global::System.Nullable<double> Original_Active_Telnet_Daemons, 
                    global::System.Nullable<double> Original_Max_Telnet_Daemons, 
                    global::System.Nullable<double> Original_Active_Telnet_Buffers, 
                    global::System.Nullable<double> Original_Max_Telnet_Buffers, 
                    global::System.Nullable<double> Original_LP_Daemons, 
                    global::System.Nullable<double> Original_HTTP_Daemons, 
                    global::System.Nullable<double> Original_SMTP_Daemons, 
                    global::System.Nullable<double> Original_POP3_Daemons) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(Poll_Time));
            if ((FTP_Daemons.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((double)(FTP_Daemons.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Active_FTP_Daemons.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(Active_FTP_Daemons.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Max_FTP_Daemons.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(Max_FTP_Daemons.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Telnet_Daemons.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(Telnet_Daemons.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Active_Telnet_Daemons.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(Active_Telnet_Daemons.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Max_Telnet_Daemons.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(Max_Telnet_Daemons.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Active_Telnet_Buffers.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(Active_Telnet_Buffers.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Max_Telnet_Buffers.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(Max_Telnet_Buffers.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((LP_Daemons.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(LP_Daemons.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((HTTP_Daemons.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(HTTP_Daemons.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((SMTP_Daemons.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((double)(SMTP_Daemons.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((POP3_Daemons.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((double)(POP3_Daemons.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_Poll_Time));
            if ((Original_FTP_Daemons.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((double)(Original_FTP_Daemons.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_Active_FTP_Daemons.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((double)(Original_Active_FTP_Daemons.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_Max_FTP_Daemons.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((double)(Original_Max_FTP_Daemons.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_Telnet_Daemons.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((double)(Original_Telnet_Daemons.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_Active_Telnet_Daemons.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((double)(Original_Active_Telnet_Daemons.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_Max_Telnet_Daemons.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((double)(Original_Max_Telnet_Daemons.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_Active_Telnet_Buffers.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((double)(Original_Active_Telnet_Buffers.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_Max_Telnet_Buffers.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((double)(Original_Max_Telnet_Buffers.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_LP_Daemons.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((double)(Original_LP_Daemons.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_HTTP_Daemons.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((double)(Original_HTTP_Daemons.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Original_SMTP_Daemons.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((double)(Original_SMTP_Daemons.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_POP3_Daemons.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((double)(Original_POP3_Daemons.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<double> FTP_Daemons, 
                    global::System.Nullable<double> Active_FTP_Daemons, 
                    global::System.Nullable<double> Max_FTP_Daemons, 
                    global::System.Nullable<double> Telnet_Daemons, 
                    global::System.Nullable<double> Active_Telnet_Daemons, 
                    global::System.Nullable<double> Max_Telnet_Daemons, 
                    global::System.Nullable<double> Active_Telnet_Buffers, 
                    global::System.Nullable<double> Max_Telnet_Buffers, 
                    global::System.Nullable<double> LP_Daemons, 
                    global::System.Nullable<double> HTTP_Daemons, 
                    global::System.Nullable<double> SMTP_Daemons, 
                    global::System.Nullable<double> POP3_Daemons, 
                    System.DateTime Original_Poll_Time, 
                    global::System.Nullable<double> Original_FTP_Daemons, 
                    global::System.Nullable<double> Original_Active_FTP_Daemons, 
                    global::System.Nullable<double> Original_Max_FTP_Daemons, 
                    global::System.Nullable<double> Original_Telnet_Daemons, 
                    global::System.Nullable<double> Original_Active_Telnet_Daemons, 
                    global::System.Nullable<double> Original_Max_Telnet_Daemons, 
                    global::System.Nullable<double> Original_Active_Telnet_Buffers, 
                    global::System.Nullable<double> Original_Max_Telnet_Buffers, 
                    global::System.Nullable<double> Original_LP_Daemons, 
                    global::System.Nullable<double> Original_HTTP_Daemons, 
                    global::System.Nullable<double> Original_SMTP_Daemons, 
                    global::System.Nullable<double> Original_POP3_Daemons) {
            return this.Update(Original_Poll_Time, FTP_Daemons, Active_FTP_Daemons, Max_FTP_Daemons, Telnet_Daemons, Active_Telnet_Daemons, Max_Telnet_Daemons, Active_Telnet_Buffers, Max_Telnet_Buffers, LP_Daemons, HTTP_Daemons, SMTP_Daemons, POP3_Daemons, Original_Poll_Time, Original_FTP_Daemons, Original_Active_FTP_Daemons, Original_Max_FTP_Daemons, Original_Telnet_Daemons, Original_Active_Telnet_Daemons, Original_Max_Telnet_Daemons, Original_Active_Telnet_Buffers, Original_Max_Telnet_Buffers, Original_LP_Daemons, Original_HTTP_Daemons, Original_SMTP_Daemons, Original_POP3_Daemons);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TCPIP_DispatcherTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TCPIP_DispatcherTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TCPIP_Dispatcher";
            tableMapping.ColumnMappings.Add("Poll_Time", "Poll_Time");
            tableMapping.ColumnMappings.Add("Total_Dispatches", "Total_Dispatches");
            tableMapping.ColumnMappings.Add("Active_Dispatches", "Active_Dispatches");
            tableMapping.ColumnMappings.Add("Fixed_Dispatches", "Fixed_Dispatches");
            tableMapping.ColumnMappings.Add("Quick_Dispatches", "Quick_Dispatches");
            tableMapping.ColumnMappings.Add("Persistent_Dispatches", "Persistent_Dispatches");
            tableMapping.ColumnMappings.Add("Complete_Dispatches", "Complete_Dispatches");
            tableMapping.ColumnMappings.Add("Passed_Dispatches", "Passed_Dispatches");
            tableMapping.ColumnMappings.Add("Total_Dispatcher_Time", "Total_Dispatcher_Time");
            tableMapping.ColumnMappings.Add("Dispatcher_Waits", "Dispatcher_Waits");
            tableMapping.ColumnMappings.Add("Storage_Releases", "Storage_Releases");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TCPIP_Dispatcher] WHERE (([Poll_Time] = @Original_Poll_Time) AND ((@IsNull_Total_Dispatches = 1 AND [Total_Dispatches] IS NULL) OR ([Total_Dispatches] = @Original_Total_Dispatches)) AND ((@IsNull_Active_Dispatches = 1 AND [Active_Dispatches] IS NULL) OR ([Active_Dispatches] = @Original_Active_Dispatches)) AND ((@IsNull_Fixed_Dispatches = 1 AND [Fixed_Dispatches] IS NULL) OR ([Fixed_Dispatches] = @Original_Fixed_Dispatches)) AND ((@IsNull_Quick_Dispatches = 1 AND [Quick_Dispatches] IS NULL) OR ([Quick_Dispatches] = @Original_Quick_Dispatches)) AND ((@IsNull_Persistent_Dispatches = 1 AND [Persistent_Dispatches] IS NULL) OR ([Persistent_Dispatches] = @Original_Persistent_Dispatches)) AND ((@IsNull_Complete_Dispatches = 1 AND [Complete_Dispatches] IS NULL) OR ([Complete_Dispatches] = @Original_Complete_Dispatches)) AND ((@IsNull_Passed_Dispatches = 1 AND [Passed_Dispatches] IS NULL) OR ([Passed_Dispatches] = @Original_Passed_Dispatches)) AND ((@IsNull_Total_Dispatcher_Time = 1 AND [Total_Dispatcher_Time] IS NULL) OR ([Total_Dispatcher_Time] = @Original_Total_Dispatcher_Time)) AND ((@IsNull_Dispatcher_Waits = 1 AND [Dispatcher_Waits] IS NULL) OR ([Dispatcher_Waits] = @Original_Dispatcher_Waits)) AND ((@IsNull_Storage_Releases = 1 AND [Storage_Releases] IS NULL) OR ([Storage_Releases] = @Original_Storage_Releases)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Total_Dispatches", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Dispatches", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Total_Dispatches", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Dispatches", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Active_Dispatches", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active_Dispatches", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Active_Dispatches", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active_Dispatches", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fixed_Dispatches", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fixed_Dispatches", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fixed_Dispatches", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fixed_Dispatches", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Quick_Dispatches", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quick_Dispatches", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Quick_Dispatches", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quick_Dispatches", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Persistent_Dispatches", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Persistent_Dispatches", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Persistent_Dispatches", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Persistent_Dispatches", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Complete_Dispatches", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Complete_Dispatches", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Complete_Dispatches", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Complete_Dispatches", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Passed_Dispatches", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Passed_Dispatches", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Passed_Dispatches", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Passed_Dispatches", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Total_Dispatcher_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Dispatcher_Time", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Total_Dispatcher_Time", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Dispatcher_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Dispatcher_Waits", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dispatcher_Waits", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dispatcher_Waits", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dispatcher_Waits", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Storage_Releases", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Storage_Releases", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Storage_Releases", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Storage_Releases", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TCPIP_Dispatcher] ([Poll_Time], [Total_Dispatches], [Active_Dispatches], [Fixed_Dispatches], [Quick_Dispatches], [Persistent_Dispatches], [Complete_Dispatches], [Passed_Dispatches], [Total_Dispatcher_Time], [Dispatcher_Waits], [Storage_Releases]) VALUES (@Poll_Time, @Total_Dispatches, @Active_Dispatches, @Fixed_Dispatches, @Quick_Dispatches, @Persistent_Dispatches, @Complete_Dispatches, @Passed_Dispatches, @Total_Dispatcher_Time, @Dispatcher_Waits, @Storage_Releases);
SELECT Poll_Time, Total_Dispatches, Active_Dispatches, Fixed_Dispatches, Quick_Dispatches, Persistent_Dispatches, Complete_Dispatches, Passed_Dispatches, Total_Dispatcher_Time, Dispatcher_Waits, Storage_Releases FROM TCPIP_Dispatcher WHERE (Poll_Time = @Poll_Time)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Total_Dispatches", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Dispatches", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Active_Dispatches", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active_Dispatches", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fixed_Dispatches", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fixed_Dispatches", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quick_Dispatches", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quick_Dispatches", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Persistent_Dispatches", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Persistent_Dispatches", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Complete_Dispatches", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Complete_Dispatches", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Passed_Dispatches", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Passed_Dispatches", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Total_Dispatcher_Time", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Dispatcher_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dispatcher_Waits", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dispatcher_Waits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Storage_Releases", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Storage_Releases", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[TCPIP_Dispatcher] SET [Poll_Time] = @Poll_Time, [Total_Dispatches] " +
                "= @Total_Dispatches, [Active_Dispatches] = @Active_Dispatches, [Fixed_Dispatches" +
                "] = @Fixed_Dispatches, [Quick_Dispatches] = @Quick_Dispatches, [Persistent_Dispa" +
                "tches] = @Persistent_Dispatches, [Complete_Dispatches] = @Complete_Dispatches, [" +
                "Passed_Dispatches] = @Passed_Dispatches, [Total_Dispatcher_Time] = @Total_Dispat" +
                "cher_Time, [Dispatcher_Waits] = @Dispatcher_Waits, [Storage_Releases] = @Storage" +
                "_Releases WHERE (([Poll_Time] = @Original_Poll_Time) AND ((@IsNull_Total_Dispatc" +
                "hes = 1 AND [Total_Dispatches] IS NULL) OR ([Total_Dispatches] = @Original_Total" +
                "_Dispatches)) AND ((@IsNull_Active_Dispatches = 1 AND [Active_Dispatches] IS NUL" +
                "L) OR ([Active_Dispatches] = @Original_Active_Dispatches)) AND ((@IsNull_Fixed_D" +
                "ispatches = 1 AND [Fixed_Dispatches] IS NULL) OR ([Fixed_Dispatches] = @Original" +
                "_Fixed_Dispatches)) AND ((@IsNull_Quick_Dispatches = 1 AND [Quick_Dispatches] IS" +
                " NULL) OR ([Quick_Dispatches] = @Original_Quick_Dispatches)) AND ((@IsNull_Persi" +
                "stent_Dispatches = 1 AND [Persistent_Dispatches] IS NULL) OR ([Persistent_Dispat" +
                "ches] = @Original_Persistent_Dispatches)) AND ((@IsNull_Complete_Dispatches = 1 " +
                "AND [Complete_Dispatches] IS NULL) OR ([Complete_Dispatches] = @Original_Complet" +
                "e_Dispatches)) AND ((@IsNull_Passed_Dispatches = 1 AND [Passed_Dispatches] IS NU" +
                "LL) OR ([Passed_Dispatches] = @Original_Passed_Dispatches)) AND ((@IsNull_Total_" +
                "Dispatcher_Time = 1 AND [Total_Dispatcher_Time] IS NULL) OR ([Total_Dispatcher_T" +
                "ime] = @Original_Total_Dispatcher_Time)) AND ((@IsNull_Dispatcher_Waits = 1 AND " +
                "[Dispatcher_Waits] IS NULL) OR ([Dispatcher_Waits] = @Original_Dispatcher_Waits)" +
                ") AND ((@IsNull_Storage_Releases = 1 AND [Storage_Releases] IS NULL) OR ([Storag" +
                "e_Releases] = @Original_Storage_Releases)));\r\nSELECT Poll_Time, Total_Dispatches" +
                ", Active_Dispatches, Fixed_Dispatches, Quick_Dispatches, Persistent_Dispatches, " +
                "Complete_Dispatches, Passed_Dispatches, Total_Dispatcher_Time, Dispatcher_Waits," +
                " Storage_Releases FROM TCPIP_Dispatcher WHERE (Poll_Time = @Poll_Time)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Total_Dispatches", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Dispatches", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Active_Dispatches", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active_Dispatches", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fixed_Dispatches", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fixed_Dispatches", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Quick_Dispatches", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quick_Dispatches", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Persistent_Dispatches", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Persistent_Dispatches", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Complete_Dispatches", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Complete_Dispatches", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Passed_Dispatches", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Passed_Dispatches", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Total_Dispatcher_Time", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Dispatcher_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Dispatcher_Waits", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dispatcher_Waits", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Storage_Releases", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Storage_Releases", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Total_Dispatches", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Dispatches", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Total_Dispatches", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Dispatches", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Active_Dispatches", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active_Dispatches", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Active_Dispatches", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Active_Dispatches", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fixed_Dispatches", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fixed_Dispatches", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fixed_Dispatches", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fixed_Dispatches", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Quick_Dispatches", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quick_Dispatches", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Quick_Dispatches", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Quick_Dispatches", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Persistent_Dispatches", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Persistent_Dispatches", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Persistent_Dispatches", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Persistent_Dispatches", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Complete_Dispatches", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Complete_Dispatches", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Complete_Dispatches", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Complete_Dispatches", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Passed_Dispatches", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Passed_Dispatches", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Passed_Dispatches", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Passed_Dispatches", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Total_Dispatcher_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Dispatcher_Time", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Total_Dispatcher_Time", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Total_Dispatcher_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Dispatcher_Waits", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dispatcher_Waits", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Dispatcher_Waits", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Dispatcher_Waits", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Storage_Releases", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Storage_Releases", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Storage_Releases", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Storage_Releases", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=DANSDELL\\SQLEXPRESS;Initial Catalog=VseDb;Integrated Security=True";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Poll_Time, Total_Dispatches, Active_Dispatches, Fixed_Dispatches, Quick_Di" +
                "spatches, Persistent_Dispatches, Complete_Dispatches, Passed_Dispatches, Total_D" +
                "ispatcher_Time, Dispatcher_Waits, Storage_Releases FROM dbo.TCPIP_Dispatcher";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT     Poll_Time, Total_Dispatches, Active_Dispatches, Fixed_Dispatches, Quick_Dispatches, Persistent_Dispatches, Complete_Dispatches, 
                      Passed_Dispatches, Total_Dispatcher_Time, Dispatcher_Waits, Storage_Releases
FROM         TCPIP_Dispatcher
WHERE     (Poll_Time = @pollTime)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pollTime", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(VseDbDataSet.TCPIP_DispatcherDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual VseDbDataSet.TCPIP_DispatcherDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            VseDbDataSet.TCPIP_DispatcherDataTable dataTable = new VseDbDataSet.TCPIP_DispatcherDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(VseDbDataSet.TCPIP_DispatcherDataTable dataTable, System.DateTime pollTime) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(pollTime));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual VseDbDataSet.TCPIP_DispatcherDataTable GetDataBy(System.DateTime pollTime) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(pollTime));
            VseDbDataSet.TCPIP_DispatcherDataTable dataTable = new VseDbDataSet.TCPIP_DispatcherDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet.TCPIP_DispatcherDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TCPIP_Dispatcher");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(System.DateTime Original_Poll_Time, global::System.Nullable<double> Original_Total_Dispatches, global::System.Nullable<double> Original_Active_Dispatches, global::System.Nullable<double> Original_Fixed_Dispatches, global::System.Nullable<double> Original_Quick_Dispatches, global::System.Nullable<double> Original_Persistent_Dispatches, global::System.Nullable<double> Original_Complete_Dispatches, global::System.Nullable<double> Original_Passed_Dispatches, global::System.Nullable<double> Original_Total_Dispatcher_Time, global::System.Nullable<double> Original_Dispatcher_Waits, global::System.Nullable<double> Original_Storage_Releases) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.DateTime)(Original_Poll_Time));
            if ((Original_Total_Dispatches.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((double)(Original_Total_Dispatches.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_Active_Dispatches.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((double)(Original_Active_Dispatches.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_Fixed_Dispatches.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_Fixed_Dispatches.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_Quick_Dispatches.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((double)(Original_Quick_Dispatches.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_Persistent_Dispatches.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((double)(Original_Persistent_Dispatches.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_Complete_Dispatches.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((double)(Original_Complete_Dispatches.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_Passed_Dispatches.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((double)(Original_Passed_Dispatches.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_Total_Dispatcher_Time.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((double)(Original_Total_Dispatcher_Time.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_Dispatcher_Waits.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((double)(Original_Dispatcher_Waits.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_Storage_Releases.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((double)(Original_Storage_Releases.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.DateTime Poll_Time, global::System.Nullable<double> Total_Dispatches, global::System.Nullable<double> Active_Dispatches, global::System.Nullable<double> Fixed_Dispatches, global::System.Nullable<double> Quick_Dispatches, global::System.Nullable<double> Persistent_Dispatches, global::System.Nullable<double> Complete_Dispatches, global::System.Nullable<double> Passed_Dispatches, global::System.Nullable<double> Total_Dispatcher_Time, global::System.Nullable<double> Dispatcher_Waits, global::System.Nullable<double> Storage_Releases) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(Poll_Time));
            if ((Total_Dispatches.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((double)(Total_Dispatches.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Active_Dispatches.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((double)(Active_Dispatches.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Fixed_Dispatches.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(Fixed_Dispatches.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Quick_Dispatches.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(Quick_Dispatches.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Persistent_Dispatches.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(Persistent_Dispatches.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Complete_Dispatches.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(Complete_Dispatches.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Passed_Dispatches.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(Passed_Dispatches.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Total_Dispatcher_Time.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(Total_Dispatcher_Time.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Dispatcher_Waits.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((double)(Dispatcher_Waits.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Storage_Releases.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((double)(Storage_Releases.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime Poll_Time, 
                    global::System.Nullable<double> Total_Dispatches, 
                    global::System.Nullable<double> Active_Dispatches, 
                    global::System.Nullable<double> Fixed_Dispatches, 
                    global::System.Nullable<double> Quick_Dispatches, 
                    global::System.Nullable<double> Persistent_Dispatches, 
                    global::System.Nullable<double> Complete_Dispatches, 
                    global::System.Nullable<double> Passed_Dispatches, 
                    global::System.Nullable<double> Total_Dispatcher_Time, 
                    global::System.Nullable<double> Dispatcher_Waits, 
                    global::System.Nullable<double> Storage_Releases, 
                    System.DateTime Original_Poll_Time, 
                    global::System.Nullable<double> Original_Total_Dispatches, 
                    global::System.Nullable<double> Original_Active_Dispatches, 
                    global::System.Nullable<double> Original_Fixed_Dispatches, 
                    global::System.Nullable<double> Original_Quick_Dispatches, 
                    global::System.Nullable<double> Original_Persistent_Dispatches, 
                    global::System.Nullable<double> Original_Complete_Dispatches, 
                    global::System.Nullable<double> Original_Passed_Dispatches, 
                    global::System.Nullable<double> Original_Total_Dispatcher_Time, 
                    global::System.Nullable<double> Original_Dispatcher_Waits, 
                    global::System.Nullable<double> Original_Storage_Releases) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(Poll_Time));
            if ((Total_Dispatches.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((double)(Total_Dispatches.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Active_Dispatches.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(Active_Dispatches.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Fixed_Dispatches.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(Fixed_Dispatches.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Quick_Dispatches.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(Quick_Dispatches.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Persistent_Dispatches.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(Persistent_Dispatches.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Complete_Dispatches.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(Complete_Dispatches.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Passed_Dispatches.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(Passed_Dispatches.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Total_Dispatcher_Time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(Total_Dispatcher_Time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Dispatcher_Waits.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(Dispatcher_Waits.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Storage_Releases.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(Storage_Releases.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Original_Poll_Time));
            if ((Original_Total_Dispatches.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((double)(Original_Total_Dispatches.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_Active_Dispatches.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((double)(Original_Active_Dispatches.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_Fixed_Dispatches.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((double)(Original_Fixed_Dispatches.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_Quick_Dispatches.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((double)(Original_Quick_Dispatches.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_Persistent_Dispatches.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((double)(Original_Persistent_Dispatches.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_Complete_Dispatches.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((double)(Original_Complete_Dispatches.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_Passed_Dispatches.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((double)(Original_Passed_Dispatches.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_Total_Dispatcher_Time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((double)(Original_Total_Dispatcher_Time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_Dispatcher_Waits.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((double)(Original_Dispatcher_Waits.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_Storage_Releases.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((double)(Original_Storage_Releases.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<double> Total_Dispatches, 
                    global::System.Nullable<double> Active_Dispatches, 
                    global::System.Nullable<double> Fixed_Dispatches, 
                    global::System.Nullable<double> Quick_Dispatches, 
                    global::System.Nullable<double> Persistent_Dispatches, 
                    global::System.Nullable<double> Complete_Dispatches, 
                    global::System.Nullable<double> Passed_Dispatches, 
                    global::System.Nullable<double> Total_Dispatcher_Time, 
                    global::System.Nullable<double> Dispatcher_Waits, 
                    global::System.Nullable<double> Storage_Releases, 
                    System.DateTime Original_Poll_Time, 
                    global::System.Nullable<double> Original_Total_Dispatches, 
                    global::System.Nullable<double> Original_Active_Dispatches, 
                    global::System.Nullable<double> Original_Fixed_Dispatches, 
                    global::System.Nullable<double> Original_Quick_Dispatches, 
                    global::System.Nullable<double> Original_Persistent_Dispatches, 
                    global::System.Nullable<double> Original_Complete_Dispatches, 
                    global::System.Nullable<double> Original_Passed_Dispatches, 
                    global::System.Nullable<double> Original_Total_Dispatcher_Time, 
                    global::System.Nullable<double> Original_Dispatcher_Waits, 
                    global::System.Nullable<double> Original_Storage_Releases) {
            return this.Update(Original_Poll_Time, Total_Dispatches, Active_Dispatches, Fixed_Dispatches, Quick_Dispatches, Persistent_Dispatches, Complete_Dispatches, Passed_Dispatches, Total_Dispatcher_Time, Dispatcher_Waits, Storage_Releases, Original_Poll_Time, Original_Total_Dispatches, Original_Active_Dispatches, Original_Fixed_Dispatches, Original_Quick_Dispatches, Original_Persistent_Dispatches, Original_Complete_Dispatches, Original_Passed_Dispatches, Original_Total_Dispatcher_Time, Original_Dispatcher_Waits, Original_Storage_Releases);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TCPIP_ErrorsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TCPIP_ErrorsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TCPIP_Errors";
            tableMapping.ColumnMappings.Add("Poll_Time", "Poll_Time");
            tableMapping.ColumnMappings.Add("TCP_Checksum_Errors", "TCP_Checksum_Errors");
            tableMapping.ColumnMappings.Add("IP_Checksum_Errors", "IP_Checksum_Errors");
            tableMapping.ColumnMappings.Add("UDP_Checksum_Errors", "UDP_Checksum_Errors");
            tableMapping.ColumnMappings.Add("ICMP_Checksum_Errors", "ICMP_Checksum_Errors");
            tableMapping.ColumnMappings.Add("Datagram_Length_Errors", "Datagram_Length_Errors");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TCPIP_Errors] WHERE (([Poll_Time] = @Original_Poll_Time) AND ((@IsNull_TCP_Checksum_Errors = 1 AND [TCP_Checksum_Errors] IS NULL) OR ([TCP_Checksum_Errors] = @Original_TCP_Checksum_Errors)) AND ((@IsNull_IP_Checksum_Errors = 1 AND [IP_Checksum_Errors] IS NULL) OR ([IP_Checksum_Errors] = @Original_IP_Checksum_Errors)) AND ((@IsNull_UDP_Checksum_Errors = 1 AND [UDP_Checksum_Errors] IS NULL) OR ([UDP_Checksum_Errors] = @Original_UDP_Checksum_Errors)) AND ((@IsNull_ICMP_Checksum_Errors = 1 AND [ICMP_Checksum_Errors] IS NULL) OR ([ICMP_Checksum_Errors] = @Original_ICMP_Checksum_Errors)) AND ((@IsNull_Datagram_Length_Errors = 1 AND [Datagram_Length_Errors] IS NULL) OR ([Datagram_Length_Errors] = @Original_Datagram_Length_Errors)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TCP_Checksum_Errors", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Checksum_Errors", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TCP_Checksum_Errors", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Checksum_Errors", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP_Checksum_Errors", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Checksum_Errors", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP_Checksum_Errors", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Checksum_Errors", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UDP_Checksum_Errors", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Checksum_Errors", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UDP_Checksum_Errors", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Checksum_Errors", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ICMP_Checksum_Errors", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Checksum_Errors", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ICMP_Checksum_Errors", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Checksum_Errors", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Datagram_Length_Errors", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Datagram_Length_Errors", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Datagram_Length_Errors", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Datagram_Length_Errors", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TCPIP_Errors] ([Poll_Time], [TCP_Checksum_Errors], [IP_Checksum_Errors], [UDP_Checksum_Errors], [ICMP_Checksum_Errors], [Datagram_Length_Errors]) VALUES (@Poll_Time, @TCP_Checksum_Errors, @IP_Checksum_Errors, @UDP_Checksum_Errors, @ICMP_Checksum_Errors, @Datagram_Length_Errors);
SELECT Poll_Time, TCP_Checksum_Errors, IP_Checksum_Errors, UDP_Checksum_Errors, ICMP_Checksum_Errors, Datagram_Length_Errors FROM TCPIP_Errors WHERE (Poll_Time = @Poll_Time)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TCP_Checksum_Errors", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Checksum_Errors", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP_Checksum_Errors", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Checksum_Errors", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UDP_Checksum_Errors", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Checksum_Errors", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ICMP_Checksum_Errors", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Checksum_Errors", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Datagram_Length_Errors", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Datagram_Length_Errors", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TCPIP_Errors] SET [Poll_Time] = @Poll_Time, [TCP_Checksum_Errors] = @TCP_Checksum_Errors, [IP_Checksum_Errors] = @IP_Checksum_Errors, [UDP_Checksum_Errors] = @UDP_Checksum_Errors, [ICMP_Checksum_Errors] = @ICMP_Checksum_Errors, [Datagram_Length_Errors] = @Datagram_Length_Errors WHERE (([Poll_Time] = @Original_Poll_Time) AND ((@IsNull_TCP_Checksum_Errors = 1 AND [TCP_Checksum_Errors] IS NULL) OR ([TCP_Checksum_Errors] = @Original_TCP_Checksum_Errors)) AND ((@IsNull_IP_Checksum_Errors = 1 AND [IP_Checksum_Errors] IS NULL) OR ([IP_Checksum_Errors] = @Original_IP_Checksum_Errors)) AND ((@IsNull_UDP_Checksum_Errors = 1 AND [UDP_Checksum_Errors] IS NULL) OR ([UDP_Checksum_Errors] = @Original_UDP_Checksum_Errors)) AND ((@IsNull_ICMP_Checksum_Errors = 1 AND [ICMP_Checksum_Errors] IS NULL) OR ([ICMP_Checksum_Errors] = @Original_ICMP_Checksum_Errors)) AND ((@IsNull_Datagram_Length_Errors = 1 AND [Datagram_Length_Errors] IS NULL) OR ([Datagram_Length_Errors] = @Original_Datagram_Length_Errors)));
SELECT Poll_Time, TCP_Checksum_Errors, IP_Checksum_Errors, UDP_Checksum_Errors, ICMP_Checksum_Errors, Datagram_Length_Errors FROM TCPIP_Errors WHERE (Poll_Time = @Poll_Time)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TCP_Checksum_Errors", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Checksum_Errors", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP_Checksum_Errors", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Checksum_Errors", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UDP_Checksum_Errors", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Checksum_Errors", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ICMP_Checksum_Errors", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Checksum_Errors", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Datagram_Length_Errors", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Datagram_Length_Errors", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TCP_Checksum_Errors", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Checksum_Errors", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TCP_Checksum_Errors", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Checksum_Errors", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP_Checksum_Errors", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Checksum_Errors", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP_Checksum_Errors", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Checksum_Errors", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UDP_Checksum_Errors", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Checksum_Errors", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UDP_Checksum_Errors", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Checksum_Errors", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ICMP_Checksum_Errors", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Checksum_Errors", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ICMP_Checksum_Errors", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Checksum_Errors", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Datagram_Length_Errors", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Datagram_Length_Errors", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Datagram_Length_Errors", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Datagram_Length_Errors", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=DANSDELL\\SQLEXPRESS;Initial Catalog=VseDb;Integrated Security=True";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Poll_Time, TCP_Checksum_Errors, IP_Checksum_Errors, UDP_Checksum_Errors, I" +
                "CMP_Checksum_Errors, Datagram_Length_Errors FROM dbo.TCPIP_Errors";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     Poll_Time, TCP_Checksum_Errors, IP_Checksum_Errors, UDP_Checksum_Error" +
                "s, ICMP_Checksum_Errors, Datagram_Length_Errors\r\nFROM         TCPIP_Errors\r\nWHER" +
                "E     (Poll_Time = @pollTime)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pollTime", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(VseDbDataSet.TCPIP_ErrorsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual VseDbDataSet.TCPIP_ErrorsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            VseDbDataSet.TCPIP_ErrorsDataTable dataTable = new VseDbDataSet.TCPIP_ErrorsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(VseDbDataSet.TCPIP_ErrorsDataTable dataTable, System.DateTime pollTime) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(pollTime));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual VseDbDataSet.TCPIP_ErrorsDataTable GetDataBy(System.DateTime pollTime) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(pollTime));
            VseDbDataSet.TCPIP_ErrorsDataTable dataTable = new VseDbDataSet.TCPIP_ErrorsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet.TCPIP_ErrorsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TCPIP_Errors");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(System.DateTime Original_Poll_Time, global::System.Nullable<double> Original_TCP_Checksum_Errors, global::System.Nullable<double> Original_IP_Checksum_Errors, global::System.Nullable<double> Original_UDP_Checksum_Errors, global::System.Nullable<double> Original_ICMP_Checksum_Errors, global::System.Nullable<double> Original_Datagram_Length_Errors) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.DateTime)(Original_Poll_Time));
            if ((Original_TCP_Checksum_Errors.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((double)(Original_TCP_Checksum_Errors.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_IP_Checksum_Errors.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((double)(Original_IP_Checksum_Errors.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_UDP_Checksum_Errors.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_UDP_Checksum_Errors.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_ICMP_Checksum_Errors.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((double)(Original_ICMP_Checksum_Errors.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_Datagram_Length_Errors.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((double)(Original_Datagram_Length_Errors.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.DateTime Poll_Time, global::System.Nullable<double> TCP_Checksum_Errors, global::System.Nullable<double> IP_Checksum_Errors, global::System.Nullable<double> UDP_Checksum_Errors, global::System.Nullable<double> ICMP_Checksum_Errors, global::System.Nullable<double> Datagram_Length_Errors) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(Poll_Time));
            if ((TCP_Checksum_Errors.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((double)(TCP_Checksum_Errors.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((IP_Checksum_Errors.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((double)(IP_Checksum_Errors.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((UDP_Checksum_Errors.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(UDP_Checksum_Errors.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((ICMP_Checksum_Errors.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(ICMP_Checksum_Errors.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Datagram_Length_Errors.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(Datagram_Length_Errors.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.DateTime Poll_Time, global::System.Nullable<double> TCP_Checksum_Errors, global::System.Nullable<double> IP_Checksum_Errors, global::System.Nullable<double> UDP_Checksum_Errors, global::System.Nullable<double> ICMP_Checksum_Errors, global::System.Nullable<double> Datagram_Length_Errors, System.DateTime Original_Poll_Time, global::System.Nullable<double> Original_TCP_Checksum_Errors, global::System.Nullable<double> Original_IP_Checksum_Errors, global::System.Nullable<double> Original_UDP_Checksum_Errors, global::System.Nullable<double> Original_ICMP_Checksum_Errors, global::System.Nullable<double> Original_Datagram_Length_Errors) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(Poll_Time));
            if ((TCP_Checksum_Errors.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((double)(TCP_Checksum_Errors.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((IP_Checksum_Errors.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(IP_Checksum_Errors.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((UDP_Checksum_Errors.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(UDP_Checksum_Errors.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((ICMP_Checksum_Errors.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(ICMP_Checksum_Errors.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Datagram_Length_Errors.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(Datagram_Length_Errors.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((System.DateTime)(Original_Poll_Time));
            if ((Original_TCP_Checksum_Errors.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(Original_TCP_Checksum_Errors.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_IP_Checksum_Errors.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(Original_IP_Checksum_Errors.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_UDP_Checksum_Errors.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((double)(Original_UDP_Checksum_Errors.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_ICMP_Checksum_Errors.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(Original_ICMP_Checksum_Errors.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_Datagram_Length_Errors.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((double)(Original_Datagram_Length_Errors.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<double> TCP_Checksum_Errors, global::System.Nullable<double> IP_Checksum_Errors, global::System.Nullable<double> UDP_Checksum_Errors, global::System.Nullable<double> ICMP_Checksum_Errors, global::System.Nullable<double> Datagram_Length_Errors, System.DateTime Original_Poll_Time, global::System.Nullable<double> Original_TCP_Checksum_Errors, global::System.Nullable<double> Original_IP_Checksum_Errors, global::System.Nullable<double> Original_UDP_Checksum_Errors, global::System.Nullable<double> Original_ICMP_Checksum_Errors, global::System.Nullable<double> Original_Datagram_Length_Errors) {
            return this.Update(Original_Poll_Time, TCP_Checksum_Errors, IP_Checksum_Errors, UDP_Checksum_Errors, ICMP_Checksum_Errors, Datagram_Length_Errors, Original_Poll_Time, Original_TCP_Checksum_Errors, Original_IP_Checksum_Errors, Original_UDP_Checksum_Errors, Original_ICMP_Checksum_Errors, Original_Datagram_Length_Errors);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TCPIP_MessagesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TCPIP_MessagesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TCPIP_Messages";
            tableMapping.ColumnMappings.Add("Message_ID", "Message_ID");
            tableMapping.ColumnMappings.Add("Time_Stamp", "Time_Stamp");
            tableMapping.ColumnMappings.Add("Message_Text", "Message_Text");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TCPIP_Messages] WHERE (([Message_ID] = @Original_Message_ID) AND ((@IsNull_Time_Stamp = 1 AND [Time_Stamp] IS NULL) OR ([Time_Stamp] = @Original_Time_Stamp)) AND ((@IsNull_Message_Text = 1 AND [Message_Text] IS NULL) OR ([Message_Text] = @Original_Message_Text)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Message_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Message_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Time_Stamp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Time_Stamp", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Time_Stamp", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Time_Stamp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Message_Text", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Message_Text", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Message_Text", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Message_Text", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TCPIP_Messages] ([Time_Stamp], [Message_Text]) VALUES (@Time_S" +
                "tamp, @Message_Text);\r\nSELECT Message_ID, Time_Stamp, Message_Text FROM TCPIP_Me" +
                "ssages WHERE (Message_ID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Time_Stamp", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Time_Stamp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Message_Text", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Message_Text", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TCPIP_Messages] SET [Time_Stamp] = @Time_Stamp, [Message_Text] = @Message_Text WHERE (([Message_ID] = @Original_Message_ID) AND ((@IsNull_Time_Stamp = 1 AND [Time_Stamp] IS NULL) OR ([Time_Stamp] = @Original_Time_Stamp)) AND ((@IsNull_Message_Text = 1 AND [Message_Text] IS NULL) OR ([Message_Text] = @Original_Message_Text)));
SELECT Message_ID, Time_Stamp, Message_Text FROM TCPIP_Messages WHERE (Message_ID = @Message_ID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Time_Stamp", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Time_Stamp", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Message_Text", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Message_Text", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Message_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Message_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Time_Stamp", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Time_Stamp", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Time_Stamp", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Time_Stamp", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Message_Text", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Message_Text", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Message_Text", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Message_Text", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Message_ID", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Message_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=DANSDELL\\SQLEXPRESS;Initial Catalog=VseDb;Integrated Security=True";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Message_ID, Time_Stamp, Message_Text FROM dbo.TCPIP_Messages";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(VseDbDataSet.TCPIP_MessagesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual VseDbDataSet.TCPIP_MessagesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            VseDbDataSet.TCPIP_MessagesDataTable dataTable = new VseDbDataSet.TCPIP_MessagesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet.TCPIP_MessagesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TCPIP_Messages");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Message_ID, global::System.Nullable<global::System.DateTime> Original_Time_Stamp, string Original_Message_Text) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Message_ID));
            if ((Original_Time_Stamp.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_Time_Stamp.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_Message_Text == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Message_Text));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<global::System.DateTime> Time_Stamp, string Message_Text) {
            if ((Time_Stamp.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(Time_Stamp.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Message_Text == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Message_Text));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<global::System.DateTime> Time_Stamp, string Message_Text, int Original_Message_ID, global::System.Nullable<global::System.DateTime> Original_Time_Stamp, string Original_Message_Text, int Message_ID) {
            if ((Time_Stamp.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(Time_Stamp.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Message_Text == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Message_Text));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_Message_ID));
            if ((Original_Time_Stamp.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(Original_Time_Stamp.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_Message_Text == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Message_Text));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Message_ID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<global::System.DateTime> Time_Stamp, string Message_Text, int Original_Message_ID, global::System.Nullable<global::System.DateTime> Original_Time_Stamp, string Original_Message_Text) {
            return this.Update(Time_Stamp, Message_Text, Original_Message_ID, Original_Time_Stamp, Original_Message_Text, Original_Message_ID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TCPIP_OtherTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TCPIP_OtherTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TCPIP_Other";
            tableMapping.ColumnMappings.Add("Poll_Time", "Poll_Time");
            tableMapping.ColumnMappings.Add("Non_IP", "Non_IP");
            tableMapping.ColumnMappings.Add("Miss_Routed_IP", "Miss_Routed_IP");
            tableMapping.ColumnMappings.Add("Discarded_UDP", "Discarded_UDP");
            tableMapping.ColumnMappings.Add("Unsupported_ICMP", "Unsupported_ICMP");
            tableMapping.ColumnMappings.Add("Unsupported_IGMP", "Unsupported_IGMP");
            tableMapping.ColumnMappings.Add("Unsupported_Protocol", "Unsupported_Protocol");
            tableMapping.ColumnMappings.Add("Connect_Rejections", "Connect_Rejections");
            tableMapping.ColumnMappings.Add("Inbound_TCP_Rejections", "Inbound_TCP_Rejections");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TCPIP_Other] WHERE (([Poll_Time] = @Original_Poll_Time) AND ((@IsNull_Non_IP = 1 AND [Non_IP] IS NULL) OR ([Non_IP] = @Original_Non_IP)) AND ((@IsNull_Miss_Routed_IP = 1 AND [Miss_Routed_IP] IS NULL) OR ([Miss_Routed_IP] = @Original_Miss_Routed_IP)) AND ((@IsNull_Discarded_UDP = 1 AND [Discarded_UDP] IS NULL) OR ([Discarded_UDP] = @Original_Discarded_UDP)) AND ((@IsNull_Unsupported_ICMP = 1 AND [Unsupported_ICMP] IS NULL) OR ([Unsupported_ICMP] = @Original_Unsupported_ICMP)) AND ((@IsNull_Unsupported_IGMP = 1 AND [Unsupported_IGMP] IS NULL) OR ([Unsupported_IGMP] = @Original_Unsupported_IGMP)) AND ((@IsNull_Unsupported_Protocol = 1 AND [Unsupported_Protocol] IS NULL) OR ([Unsupported_Protocol] = @Original_Unsupported_Protocol)) AND ((@IsNull_Connect_Rejections = 1 AND [Connect_Rejections] IS NULL) OR ([Connect_Rejections] = @Original_Connect_Rejections)) AND ((@IsNull_Inbound_TCP_Rejections = 1 AND [Inbound_TCP_Rejections] IS NULL) OR ([Inbound_TCP_Rejections] = @Original_Inbound_TCP_Rejections)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Non_IP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Non_IP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Non_IP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Non_IP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Miss_Routed_IP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Miss_Routed_IP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Miss_Routed_IP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Miss_Routed_IP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Discarded_UDP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Discarded_UDP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Discarded_UDP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Discarded_UDP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Unsupported_ICMP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unsupported_ICMP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Unsupported_ICMP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unsupported_ICMP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Unsupported_IGMP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unsupported_IGMP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Unsupported_IGMP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unsupported_IGMP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Unsupported_Protocol", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unsupported_Protocol", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Unsupported_Protocol", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unsupported_Protocol", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Connect_Rejections", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Connect_Rejections", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Connect_Rejections", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Connect_Rejections", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Inbound_TCP_Rejections", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_TCP_Rejections", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Inbound_TCP_Rejections", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_TCP_Rejections", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TCPIP_Other] ([Poll_Time], [Non_IP], [Miss_Routed_IP], [Discarded_UDP], [Unsupported_ICMP], [Unsupported_IGMP], [Unsupported_Protocol], [Connect_Rejections], [Inbound_TCP_Rejections]) VALUES (@Poll_Time, @Non_IP, @Miss_Routed_IP, @Discarded_UDP, @Unsupported_ICMP, @Unsupported_IGMP, @Unsupported_Protocol, @Connect_Rejections, @Inbound_TCP_Rejections);
SELECT Poll_Time, Non_IP, Miss_Routed_IP, Discarded_UDP, Unsupported_ICMP, Unsupported_IGMP, Unsupported_Protocol, Connect_Rejections, Inbound_TCP_Rejections FROM TCPIP_Other WHERE (Poll_Time = @Poll_Time)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Non_IP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Non_IP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Miss_Routed_IP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Miss_Routed_IP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Discarded_UDP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Discarded_UDP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Unsupported_ICMP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unsupported_ICMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Unsupported_IGMP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unsupported_IGMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Unsupported_Protocol", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unsupported_Protocol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Connect_Rejections", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Connect_Rejections", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inbound_TCP_Rejections", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_TCP_Rejections", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[TCPIP_Other] SET [Poll_Time] = @Poll_Time, [Non_IP] = @Non_IP, [Mis" +
                "s_Routed_IP] = @Miss_Routed_IP, [Discarded_UDP] = @Discarded_UDP, [Unsupported_I" +
                "CMP] = @Unsupported_ICMP, [Unsupported_IGMP] = @Unsupported_IGMP, [Unsupported_P" +
                "rotocol] = @Unsupported_Protocol, [Connect_Rejections] = @Connect_Rejections, [I" +
                "nbound_TCP_Rejections] = @Inbound_TCP_Rejections WHERE (([Poll_Time] = @Original" +
                "_Poll_Time) AND ((@IsNull_Non_IP = 1 AND [Non_IP] IS NULL) OR ([Non_IP] = @Origi" +
                "nal_Non_IP)) AND ((@IsNull_Miss_Routed_IP = 1 AND [Miss_Routed_IP] IS NULL) OR (" +
                "[Miss_Routed_IP] = @Original_Miss_Routed_IP)) AND ((@IsNull_Discarded_UDP = 1 AN" +
                "D [Discarded_UDP] IS NULL) OR ([Discarded_UDP] = @Original_Discarded_UDP)) AND (" +
                "(@IsNull_Unsupported_ICMP = 1 AND [Unsupported_ICMP] IS NULL) OR ([Unsupported_I" +
                "CMP] = @Original_Unsupported_ICMP)) AND ((@IsNull_Unsupported_IGMP = 1 AND [Unsu" +
                "pported_IGMP] IS NULL) OR ([Unsupported_IGMP] = @Original_Unsupported_IGMP)) AND" +
                " ((@IsNull_Unsupported_Protocol = 1 AND [Unsupported_Protocol] IS NULL) OR ([Uns" +
                "upported_Protocol] = @Original_Unsupported_Protocol)) AND ((@IsNull_Connect_Reje" +
                "ctions = 1 AND [Connect_Rejections] IS NULL) OR ([Connect_Rejections] = @Origina" +
                "l_Connect_Rejections)) AND ((@IsNull_Inbound_TCP_Rejections = 1 AND [Inbound_TCP" +
                "_Rejections] IS NULL) OR ([Inbound_TCP_Rejections] = @Original_Inbound_TCP_Rejec" +
                "tions)));\r\nSELECT Poll_Time, Non_IP, Miss_Routed_IP, Discarded_UDP, Unsupported_" +
                "ICMP, Unsupported_IGMP, Unsupported_Protocol, Connect_Rejections, Inbound_TCP_Re" +
                "jections FROM TCPIP_Other WHERE (Poll_Time = @Poll_Time)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Non_IP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Non_IP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Miss_Routed_IP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Miss_Routed_IP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Discarded_UDP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Discarded_UDP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Unsupported_ICMP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unsupported_ICMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Unsupported_IGMP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unsupported_IGMP", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Unsupported_Protocol", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unsupported_Protocol", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Connect_Rejections", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Connect_Rejections", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Inbound_TCP_Rejections", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_TCP_Rejections", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Non_IP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Non_IP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Non_IP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Non_IP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Miss_Routed_IP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Miss_Routed_IP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Miss_Routed_IP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Miss_Routed_IP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Discarded_UDP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Discarded_UDP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Discarded_UDP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Discarded_UDP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Unsupported_ICMP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unsupported_ICMP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Unsupported_ICMP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unsupported_ICMP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Unsupported_IGMP", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unsupported_IGMP", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Unsupported_IGMP", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unsupported_IGMP", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Unsupported_Protocol", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unsupported_Protocol", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Unsupported_Protocol", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Unsupported_Protocol", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Connect_Rejections", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Connect_Rejections", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Connect_Rejections", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Connect_Rejections", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Inbound_TCP_Rejections", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_TCP_Rejections", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Inbound_TCP_Rejections", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Inbound_TCP_Rejections", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=DANSDELL\\SQLEXPRESS;Initial Catalog=VseDb;Integrated Security=True";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Poll_Time, Non_IP, Miss_Routed_IP, Discarded_UDP, Unsupported_ICMP, Unsupp" +
                "orted_IGMP, Unsupported_Protocol, Connect_Rejections, Inbound_TCP_Rejections FRO" +
                "M dbo.TCPIP_Other";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     Poll_Time, Non_IP, Miss_Routed_IP, Discarded_UDP, Unsupported_ICMP, Un" +
                "supported_IGMP, Unsupported_Protocol, Connect_Rejections, \r\n                    " +
                "  Inbound_TCP_Rejections\r\nFROM         TCPIP_Other\r\nWHERE     (Poll_Time = @poll" +
                "Time)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pollTime", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(VseDbDataSet.TCPIP_OtherDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual VseDbDataSet.TCPIP_OtherDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            VseDbDataSet.TCPIP_OtherDataTable dataTable = new VseDbDataSet.TCPIP_OtherDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(VseDbDataSet.TCPIP_OtherDataTable dataTable, System.DateTime pollTime) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(pollTime));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual VseDbDataSet.TCPIP_OtherDataTable GetDataBy(System.DateTime pollTime) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(pollTime));
            VseDbDataSet.TCPIP_OtherDataTable dataTable = new VseDbDataSet.TCPIP_OtherDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet.TCPIP_OtherDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TCPIP_Other");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(System.DateTime Original_Poll_Time, global::System.Nullable<double> Original_Non_IP, global::System.Nullable<double> Original_Miss_Routed_IP, global::System.Nullable<double> Original_Discarded_UDP, global::System.Nullable<double> Original_Unsupported_ICMP, global::System.Nullable<double> Original_Unsupported_IGMP, global::System.Nullable<double> Original_Unsupported_Protocol, global::System.Nullable<double> Original_Connect_Rejections, global::System.Nullable<double> Original_Inbound_TCP_Rejections) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.DateTime)(Original_Poll_Time));
            if ((Original_Non_IP.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((double)(Original_Non_IP.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_Miss_Routed_IP.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((double)(Original_Miss_Routed_IP.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_Discarded_UDP.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_Discarded_UDP.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_Unsupported_ICMP.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((double)(Original_Unsupported_ICMP.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_Unsupported_IGMP.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((double)(Original_Unsupported_IGMP.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_Unsupported_Protocol.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((double)(Original_Unsupported_Protocol.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_Connect_Rejections.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((double)(Original_Connect_Rejections.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_Inbound_TCP_Rejections.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((double)(Original_Inbound_TCP_Rejections.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.DateTime Poll_Time, global::System.Nullable<double> Non_IP, global::System.Nullable<double> Miss_Routed_IP, global::System.Nullable<double> Discarded_UDP, global::System.Nullable<double> Unsupported_ICMP, global::System.Nullable<double> Unsupported_IGMP, global::System.Nullable<double> Unsupported_Protocol, global::System.Nullable<double> Connect_Rejections, global::System.Nullable<double> Inbound_TCP_Rejections) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(Poll_Time));
            if ((Non_IP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((double)(Non_IP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Miss_Routed_IP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((double)(Miss_Routed_IP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Discarded_UDP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(Discarded_UDP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Unsupported_ICMP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(Unsupported_ICMP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Unsupported_IGMP.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(Unsupported_IGMP.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Unsupported_Protocol.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(Unsupported_Protocol.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Connect_Rejections.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(Connect_Rejections.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Inbound_TCP_Rejections.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(Inbound_TCP_Rejections.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime Poll_Time, 
                    global::System.Nullable<double> Non_IP, 
                    global::System.Nullable<double> Miss_Routed_IP, 
                    global::System.Nullable<double> Discarded_UDP, 
                    global::System.Nullable<double> Unsupported_ICMP, 
                    global::System.Nullable<double> Unsupported_IGMP, 
                    global::System.Nullable<double> Unsupported_Protocol, 
                    global::System.Nullable<double> Connect_Rejections, 
                    global::System.Nullable<double> Inbound_TCP_Rejections, 
                    System.DateTime Original_Poll_Time, 
                    global::System.Nullable<double> Original_Non_IP, 
                    global::System.Nullable<double> Original_Miss_Routed_IP, 
                    global::System.Nullable<double> Original_Discarded_UDP, 
                    global::System.Nullable<double> Original_Unsupported_ICMP, 
                    global::System.Nullable<double> Original_Unsupported_IGMP, 
                    global::System.Nullable<double> Original_Unsupported_Protocol, 
                    global::System.Nullable<double> Original_Connect_Rejections, 
                    global::System.Nullable<double> Original_Inbound_TCP_Rejections) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(Poll_Time));
            if ((Non_IP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((double)(Non_IP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Miss_Routed_IP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(Miss_Routed_IP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Discarded_UDP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(Discarded_UDP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Unsupported_ICMP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(Unsupported_ICMP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Unsupported_IGMP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(Unsupported_IGMP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Unsupported_Protocol.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(Unsupported_Protocol.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Connect_Rejections.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(Connect_Rejections.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Inbound_TCP_Rejections.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(Inbound_TCP_Rejections.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Original_Poll_Time));
            if ((Original_Non_IP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((double)(Original_Non_IP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_Miss_Routed_IP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((double)(Original_Miss_Routed_IP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_Discarded_UDP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((double)(Original_Discarded_UDP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_Unsupported_ICMP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((double)(Original_Unsupported_ICMP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_Unsupported_IGMP.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((double)(Original_Unsupported_IGMP.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_Unsupported_Protocol.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((double)(Original_Unsupported_Protocol.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_Connect_Rejections.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((double)(Original_Connect_Rejections.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_Inbound_TCP_Rejections.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((double)(Original_Inbound_TCP_Rejections.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<double> Non_IP, 
                    global::System.Nullable<double> Miss_Routed_IP, 
                    global::System.Nullable<double> Discarded_UDP, 
                    global::System.Nullable<double> Unsupported_ICMP, 
                    global::System.Nullable<double> Unsupported_IGMP, 
                    global::System.Nullable<double> Unsupported_Protocol, 
                    global::System.Nullable<double> Connect_Rejections, 
                    global::System.Nullable<double> Inbound_TCP_Rejections, 
                    System.DateTime Original_Poll_Time, 
                    global::System.Nullable<double> Original_Non_IP, 
                    global::System.Nullable<double> Original_Miss_Routed_IP, 
                    global::System.Nullable<double> Original_Discarded_UDP, 
                    global::System.Nullable<double> Original_Unsupported_ICMP, 
                    global::System.Nullable<double> Original_Unsupported_IGMP, 
                    global::System.Nullable<double> Original_Unsupported_Protocol, 
                    global::System.Nullable<double> Original_Connect_Rejections, 
                    global::System.Nullable<double> Original_Inbound_TCP_Rejections) {
            return this.Update(Original_Poll_Time, Non_IP, Miss_Routed_IP, Discarded_UDP, Unsupported_ICMP, Unsupported_IGMP, Unsupported_Protocol, Connect_Rejections, Inbound_TCP_Rejections, Original_Poll_Time, Original_Non_IP, Original_Miss_Routed_IP, Original_Discarded_UDP, Original_Unsupported_ICMP, Original_Unsupported_IGMP, Original_Unsupported_Protocol, Original_Connect_Rejections, Original_Inbound_TCP_Rejections);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TCPIP_SummaryTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TCPIP_SummaryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TCPIP_Summary";
            tableMapping.ColumnMappings.Add("Poll_Time", "Poll_Time");
            tableMapping.ColumnMappings.Add("TCPIP_Start_Time", "TCPIP_Start_Time");
            tableMapping.ColumnMappings.Add("Sys_ID", "Sys_ID");
            tableMapping.ColumnMappings.Add("PID", "PID");
            tableMapping.ColumnMappings.Add("Job_Name", "Job_Name");
            tableMapping.ColumnMappings.Add("Release", "Release");
            tableMapping.ColumnMappings.Add("License", "License");
            tableMapping.ColumnMappings.Add("IP_Address", "IP_Address");
            tableMapping.ColumnMappings.Add("Console_Port", "Console_Port");
            tableMapping.ColumnMappings.Add("Nof_TCPIP_Connections", "Nof_TCPIP_Connections");
            tableMapping.ColumnMappings.Add("Nof_TCPIP_PseudoTasks", "Nof_TCPIP_PseudoTasks");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TCPIP_Summary] WHERE (([Poll_Time] = @Original_Poll_Time) AND ((@IsNull_TCPIP_Start_Time = 1 AND [TCPIP_Start_Time] IS NULL) OR ([TCPIP_Start_Time] = @Original_TCPIP_Start_Time)) AND ((@IsNull_Sys_ID = 1 AND [Sys_ID] IS NULL) OR ([Sys_ID] = @Original_Sys_ID)) AND ((@IsNull_PID = 1 AND [PID] IS NULL) OR ([PID] = @Original_PID)) AND ((@IsNull_Job_Name = 1 AND [Job_Name] IS NULL) OR ([Job_Name] = @Original_Job_Name)) AND ((@IsNull_Release = 1 AND [Release] IS NULL) OR ([Release] = @Original_Release)) AND ((@IsNull_License = 1 AND [License] IS NULL) OR ([License] = @Original_License)) AND ((@IsNull_IP_Address = 1 AND [IP_Address] IS NULL) OR ([IP_Address] = @Original_IP_Address)) AND ((@IsNull_Console_Port = 1 AND [Console_Port] IS NULL) OR ([Console_Port] = @Original_Console_Port)) AND ((@IsNull_Nof_TCPIP_Connections = 1 AND [Nof_TCPIP_Connections] IS NULL) OR ([Nof_TCPIP_Connections] = @Original_Nof_TCPIP_Connections)) AND ((@IsNull_Nof_TCPIP_PseudoTasks = 1 AND [Nof_TCPIP_PseudoTasks] IS NULL) OR ([Nof_TCPIP_PseudoTasks] = @Original_Nof_TCPIP_PseudoTasks)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TCPIP_Start_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCPIP_Start_Time", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TCPIP_Start_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCPIP_Start_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Sys_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sys_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sys_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sys_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Job_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Job_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Job_Name", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Job_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Release", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Release", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Release", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Release", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_License", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "License", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_License", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "License", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP_Address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Address", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Console_Port", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Console_Port", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Console_Port", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Console_Port", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Nof_TCPIP_Connections", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_TCPIP_Connections", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nof_TCPIP_Connections", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_TCPIP_Connections", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Nof_TCPIP_PseudoTasks", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_TCPIP_PseudoTasks", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nof_TCPIP_PseudoTasks", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_TCPIP_PseudoTasks", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TCPIP_Summary] ([Poll_Time], [TCPIP_Start_Time], [Sys_ID], [PID], [Job_Name], [Release], [License], [IP_Address], [Console_Port], [Nof_TCPIP_Connections], [Nof_TCPIP_PseudoTasks]) VALUES (@Poll_Time, @TCPIP_Start_Time, @Sys_ID, @PID, @Job_Name, @Release, @License, @IP_Address, @Console_Port, @Nof_TCPIP_Connections, @Nof_TCPIP_PseudoTasks);
SELECT Poll_Time, TCPIP_Start_Time, Sys_ID, PID, Job_Name, Release, License, IP_Address, Console_Port, Nof_TCPIP_Connections, Nof_TCPIP_PseudoTasks FROM TCPIP_Summary WHERE (Poll_Time = @Poll_Time)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TCPIP_Start_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCPIP_Start_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sys_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sys_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Job_Name", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Job_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Release", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Release", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@License", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "License", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Console_Port", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Console_Port", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nof_TCPIP_Connections", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_TCPIP_Connections", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nof_TCPIP_PseudoTasks", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_TCPIP_PseudoTasks", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[TCPIP_Summary] SET [Poll_Time] = @Poll_Time, [TCPIP_Start_Time] = @" +
                "TCPIP_Start_Time, [Sys_ID] = @Sys_ID, [PID] = @PID, [Job_Name] = @Job_Name, [Rel" +
                "ease] = @Release, [License] = @License, [IP_Address] = @IP_Address, [Console_Por" +
                "t] = @Console_Port, [Nof_TCPIP_Connections] = @Nof_TCPIP_Connections, [Nof_TCPIP" +
                "_PseudoTasks] = @Nof_TCPIP_PseudoTasks WHERE (([Poll_Time] = @Original_Poll_Time" +
                ") AND ((@IsNull_TCPIP_Start_Time = 1 AND [TCPIP_Start_Time] IS NULL) OR ([TCPIP_" +
                "Start_Time] = @Original_TCPIP_Start_Time)) AND ((@IsNull_Sys_ID = 1 AND [Sys_ID]" +
                " IS NULL) OR ([Sys_ID] = @Original_Sys_ID)) AND ((@IsNull_PID = 1 AND [PID] IS N" +
                "ULL) OR ([PID] = @Original_PID)) AND ((@IsNull_Job_Name = 1 AND [Job_Name] IS NU" +
                "LL) OR ([Job_Name] = @Original_Job_Name)) AND ((@IsNull_Release = 1 AND [Release" +
                "] IS NULL) OR ([Release] = @Original_Release)) AND ((@IsNull_License = 1 AND [Li" +
                "cense] IS NULL) OR ([License] = @Original_License)) AND ((@IsNull_IP_Address = 1" +
                " AND [IP_Address] IS NULL) OR ([IP_Address] = @Original_IP_Address)) AND ((@IsNu" +
                "ll_Console_Port = 1 AND [Console_Port] IS NULL) OR ([Console_Port] = @Original_C" +
                "onsole_Port)) AND ((@IsNull_Nof_TCPIP_Connections = 1 AND [Nof_TCPIP_Connections" +
                "] IS NULL) OR ([Nof_TCPIP_Connections] = @Original_Nof_TCPIP_Connections)) AND (" +
                "(@IsNull_Nof_TCPIP_PseudoTasks = 1 AND [Nof_TCPIP_PseudoTasks] IS NULL) OR ([Nof" +
                "_TCPIP_PseudoTasks] = @Original_Nof_TCPIP_PseudoTasks)));\r\nSELECT Poll_Time, TCP" +
                "IP_Start_Time, Sys_ID, PID, Job_Name, Release, License, IP_Address, Console_Port" +
                ", Nof_TCPIP_Connections, Nof_TCPIP_PseudoTasks FROM TCPIP_Summary WHERE (Poll_Ti" +
                "me = @Poll_Time)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TCPIP_Start_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCPIP_Start_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sys_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sys_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Job_Name", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Job_Name", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Release", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Release", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@License", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "License", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Console_Port", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Console_Port", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nof_TCPIP_Connections", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_TCPIP_Connections", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nof_TCPIP_PseudoTasks", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_TCPIP_PseudoTasks", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TCPIP_Start_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCPIP_Start_Time", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TCPIP_Start_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCPIP_Start_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Sys_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sys_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sys_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sys_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Job_Name", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Job_Name", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Job_Name", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Job_Name", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Release", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Release", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Release", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Release", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_License", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "License", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_License", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "License", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP_Address", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Address", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Console_Port", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Console_Port", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Console_Port", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Console_Port", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Nof_TCPIP_Connections", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_TCPIP_Connections", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nof_TCPIP_Connections", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_TCPIP_Connections", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Nof_TCPIP_PseudoTasks", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_TCPIP_PseudoTasks", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nof_TCPIP_PseudoTasks", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_TCPIP_PseudoTasks", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=DANSDELL\\SQLEXPRESS;Initial Catalog=VseDb;Integrated Security=True";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Poll_Time, TCPIP_Start_Time, Sys_ID, PID, Job_Name, Release, License, IP_A" +
                "ddress, Console_Port, Nof_TCPIP_Connections, Nof_TCPIP_PseudoTasks FROM dbo.TCPI" +
                "P_Summary";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     Poll_Time, TCPIP_Start_Time, Sys_ID, PID, Job_Name, Release, License, " +
                "IP_Address, Console_Port, Nof_TCPIP_Connections, \r\n                      Nof_TCP" +
                "IP_PseudoTasks\r\nFROM         TCPIP_Summary\r\nWHERE     (Poll_Time = @pollTime)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pollTime", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(VseDbDataSet.TCPIP_SummaryDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual VseDbDataSet.TCPIP_SummaryDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            VseDbDataSet.TCPIP_SummaryDataTable dataTable = new VseDbDataSet.TCPIP_SummaryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(VseDbDataSet.TCPIP_SummaryDataTable dataTable, System.DateTime pollTime) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(pollTime));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual VseDbDataSet.TCPIP_SummaryDataTable GetDataBy(System.DateTime pollTime) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(pollTime));
            VseDbDataSet.TCPIP_SummaryDataTable dataTable = new VseDbDataSet.TCPIP_SummaryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet.TCPIP_SummaryDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TCPIP_Summary");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(System.DateTime Original_Poll_Time, global::System.Nullable<global::System.DateTime> Original_TCPIP_Start_Time, string Original_Sys_ID, string Original_PID, string Original_Job_Name, string Original_Release, string Original_License, string Original_IP_Address, global::System.Nullable<double> Original_Console_Port, global::System.Nullable<double> Original_Nof_TCPIP_Connections, global::System.Nullable<double> Original_Nof_TCPIP_PseudoTasks) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.DateTime)(Original_Poll_Time));
            if ((Original_TCPIP_Start_Time.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_TCPIP_Start_Time.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_Sys_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_Sys_ID));
            }
            if ((Original_PID == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_PID));
            }
            if ((Original_Job_Name == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_Job_Name));
            }
            if ((Original_Release == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Release));
            }
            if ((Original_License == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_License));
            }
            if ((Original_IP_Address == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_IP_Address));
            }
            if ((Original_Console_Port.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((double)(Original_Console_Port.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_Nof_TCPIP_Connections.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((double)(Original_Nof_TCPIP_Connections.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_Nof_TCPIP_PseudoTasks.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((double)(Original_Nof_TCPIP_PseudoTasks.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.DateTime Poll_Time, global::System.Nullable<global::System.DateTime> TCPIP_Start_Time, string Sys_ID, string PID, string Job_Name, string Release, string License, string IP_Address, global::System.Nullable<double> Console_Port, global::System.Nullable<double> Nof_TCPIP_Connections, global::System.Nullable<double> Nof_TCPIP_PseudoTasks) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(Poll_Time));
            if ((TCPIP_Start_Time.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(TCPIP_Start_Time.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Sys_ID == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Sys_ID));
            }
            if ((PID == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(PID));
            }
            if ((Job_Name == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Job_Name));
            }
            if ((Release == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Release));
            }
            if ((License == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(License));
            }
            if ((IP_Address == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(IP_Address));
            }
            if ((Console_Port.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(Console_Port.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Nof_TCPIP_Connections.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((double)(Nof_TCPIP_Connections.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Nof_TCPIP_PseudoTasks.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((double)(Nof_TCPIP_PseudoTasks.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime Poll_Time, 
                    global::System.Nullable<global::System.DateTime> TCPIP_Start_Time, 
                    string Sys_ID, 
                    string PID, 
                    string Job_Name, 
                    string Release, 
                    string License, 
                    string IP_Address, 
                    global::System.Nullable<double> Console_Port, 
                    global::System.Nullable<double> Nof_TCPIP_Connections, 
                    global::System.Nullable<double> Nof_TCPIP_PseudoTasks, 
                    System.DateTime Original_Poll_Time, 
                    global::System.Nullable<global::System.DateTime> Original_TCPIP_Start_Time, 
                    string Original_Sys_ID, 
                    string Original_PID, 
                    string Original_Job_Name, 
                    string Original_Release, 
                    string Original_License, 
                    string Original_IP_Address, 
                    global::System.Nullable<double> Original_Console_Port, 
                    global::System.Nullable<double> Original_Nof_TCPIP_Connections, 
                    global::System.Nullable<double> Original_Nof_TCPIP_PseudoTasks) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(Poll_Time));
            if ((TCPIP_Start_Time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(TCPIP_Start_Time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Sys_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Sys_ID));
            }
            if ((PID == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(PID));
            }
            if ((Job_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Job_Name));
            }
            if ((Release == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Release));
            }
            if ((License == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(License));
            }
            if ((IP_Address == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(IP_Address));
            }
            if ((Console_Port.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(Console_Port.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Nof_TCPIP_Connections.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(Nof_TCPIP_Connections.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Nof_TCPIP_PseudoTasks.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(Nof_TCPIP_PseudoTasks.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((System.DateTime)(Original_Poll_Time));
            if ((Original_TCPIP_Start_Time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_TCPIP_Start_Time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_Sys_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_Sys_ID));
            }
            if ((Original_PID == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_PID));
            }
            if ((Original_Job_Name == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_Job_Name));
            }
            if ((Original_Release == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_Release));
            }
            if ((Original_License == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_License));
            }
            if ((Original_IP_Address == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_IP_Address));
            }
            if ((Original_Console_Port.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((double)(Original_Console_Port.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_Nof_TCPIP_Connections.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((double)(Original_Nof_TCPIP_Connections.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_Nof_TCPIP_PseudoTasks.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((double)(Original_Nof_TCPIP_PseudoTasks.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<global::System.DateTime> TCPIP_Start_Time, 
                    string Sys_ID, 
                    string PID, 
                    string Job_Name, 
                    string Release, 
                    string License, 
                    string IP_Address, 
                    global::System.Nullable<double> Console_Port, 
                    global::System.Nullable<double> Nof_TCPIP_Connections, 
                    global::System.Nullable<double> Nof_TCPIP_PseudoTasks, 
                    System.DateTime Original_Poll_Time, 
                    global::System.Nullable<global::System.DateTime> Original_TCPIP_Start_Time, 
                    string Original_Sys_ID, 
                    string Original_PID, 
                    string Original_Job_Name, 
                    string Original_Release, 
                    string Original_License, 
                    string Original_IP_Address, 
                    global::System.Nullable<double> Original_Console_Port, 
                    global::System.Nullable<double> Original_Nof_TCPIP_Connections, 
                    global::System.Nullable<double> Original_Nof_TCPIP_PseudoTasks) {
            return this.Update(Original_Poll_Time, TCPIP_Start_Time, Sys_ID, PID, Job_Name, Release, License, IP_Address, Console_Port, Nof_TCPIP_Connections, Nof_TCPIP_PseudoTasks, Original_Poll_Time, Original_TCPIP_Start_Time, Original_Sys_ID, Original_PID, Original_Job_Name, Original_Release, Original_License, Original_IP_Address, Original_Console_Port, Original_Nof_TCPIP_Connections, Original_Nof_TCPIP_PseudoTasks);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TCPIP_TrafficTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TCPIP_TrafficTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TCPIP_Traffic";
            tableMapping.ColumnMappings.Add("Poll_Time", "Poll_Time");
            tableMapping.ColumnMappings.Add("Int_FTP_Files_Sent", "Int_FTP_Files_Sent");
            tableMapping.ColumnMappings.Add("Int_FTP_Files_Received", "Int_FTP_Files_Received");
            tableMapping.ColumnMappings.Add("Int_FTP_Bytes_Sent", "Int_FTP_Bytes_Sent");
            tableMapping.ColumnMappings.Add("Int_FTP_Bytes_Received", "Int_FTP_Bytes_Received");
            tableMapping.ColumnMappings.Add("Telnet_Bytes_Sent", "Telnet_Bytes_Sent");
            tableMapping.ColumnMappings.Add("Telnet_Bytes_Received", "Telnet_Bytes_Received");
            tableMapping.ColumnMappings.Add("TCP_Bytes_Sent", "TCP_Bytes_Sent");
            tableMapping.ColumnMappings.Add("TCP_Bytes_Received", "TCP_Bytes_Received");
            tableMapping.ColumnMappings.Add("UDP_Bytes_Sent", "UDP_Bytes_Sent");
            tableMapping.ColumnMappings.Add("UDP_Bytes_Received", "UDP_Bytes_Received");
            tableMapping.ColumnMappings.Add("IP_Bytes_Sent", "IP_Bytes_Sent");
            tableMapping.ColumnMappings.Add("IP_Bytes_Received", "IP_Bytes_Received");
            tableMapping.ColumnMappings.Add("Arps_In", "Arps_In");
            tableMapping.ColumnMappings.Add("Arp_Requests_Inbound", "Arp_Requests_Inbound");
            tableMapping.ColumnMappings.Add("Arp_Requests_Outbound", "Arp_Requests_Outbound");
            tableMapping.ColumnMappings.Add("Arp_Replies_Outbound", "Arp_Replies_Outbound");
            tableMapping.ColumnMappings.Add("IPNL3172_Blocks_Received", "IPNL3172_Blocks_Received");
            tableMapping.ColumnMappings.Add("IPNL3172_Blocks_Transmitted", "IPNL3172_Blocks_Transmitted");
            tableMapping.ColumnMappings.Add("IPNL3172_Datagrams_Inbound", "IPNL3172_Datagrams_Inbound");
            tableMapping.ColumnMappings.Add("IPNL3172_Datagrams_Outbound", "IPNL3172_Datagrams_Outbound");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[TCPIP_Traffic] WHERE (([Poll_Time] = @Original_Poll_Time) AND " +
                "((@IsNull_Int_FTP_Files_Sent = 1 AND [Int_FTP_Files_Sent] IS NULL) OR ([Int_FTP_" +
                "Files_Sent] = @Original_Int_FTP_Files_Sent)) AND ((@IsNull_Int_FTP_Files_Receive" +
                "d = 1 AND [Int_FTP_Files_Received] IS NULL) OR ([Int_FTP_Files_Received] = @Orig" +
                "inal_Int_FTP_Files_Received)) AND ((@IsNull_Int_FTP_Bytes_Sent = 1 AND [Int_FTP_" +
                "Bytes_Sent] IS NULL) OR ([Int_FTP_Bytes_Sent] = @Original_Int_FTP_Bytes_Sent)) A" +
                "ND ((@IsNull_Int_FTP_Bytes_Received = 1 AND [Int_FTP_Bytes_Received] IS NULL) OR" +
                " ([Int_FTP_Bytes_Received] = @Original_Int_FTP_Bytes_Received)) AND ((@IsNull_Te" +
                "lnet_Bytes_Sent = 1 AND [Telnet_Bytes_Sent] IS NULL) OR ([Telnet_Bytes_Sent] = @" +
                "Original_Telnet_Bytes_Sent)) AND ((@IsNull_Telnet_Bytes_Received = 1 AND [Telnet" +
                "_Bytes_Received] IS NULL) OR ([Telnet_Bytes_Received] = @Original_Telnet_Bytes_R" +
                "eceived)) AND ((@IsNull_TCP_Bytes_Sent = 1 AND [TCP_Bytes_Sent] IS NULL) OR ([TC" +
                "P_Bytes_Sent] = @Original_TCP_Bytes_Sent)) AND ((@IsNull_TCP_Bytes_Received = 1 " +
                "AND [TCP_Bytes_Received] IS NULL) OR ([TCP_Bytes_Received] = @Original_TCP_Bytes" +
                "_Received)) AND ((@IsNull_UDP_Bytes_Sent = 1 AND [UDP_Bytes_Sent] IS NULL) OR ([" +
                "UDP_Bytes_Sent] = @Original_UDP_Bytes_Sent)) AND ((@IsNull_UDP_Bytes_Received = " +
                "1 AND [UDP_Bytes_Received] IS NULL) OR ([UDP_Bytes_Received] = @Original_UDP_Byt" +
                "es_Received)) AND ((@IsNull_IP_Bytes_Sent = 1 AND [IP_Bytes_Sent] IS NULL) OR ([" +
                "IP_Bytes_Sent] = @Original_IP_Bytes_Sent)) AND ((@IsNull_IP_Bytes_Received = 1 A" +
                "ND [IP_Bytes_Received] IS NULL) OR ([IP_Bytes_Received] = @Original_IP_Bytes_Rec" +
                "eived)) AND ((@IsNull_Arps_In = 1 AND [Arps_In] IS NULL) OR ([Arps_In] = @Origin" +
                "al_Arps_In)) AND ((@IsNull_Arp_Requests_Inbound = 1 AND [Arp_Requests_Inbound] I" +
                "S NULL) OR ([Arp_Requests_Inbound] = @Original_Arp_Requests_Inbound)) AND ((@IsN" +
                "ull_Arp_Requests_Outbound = 1 AND [Arp_Requests_Outbound] IS NULL) OR ([Arp_Requ" +
                "ests_Outbound] = @Original_Arp_Requests_Outbound)) AND ((@IsNull_Arp_Replies_Out" +
                "bound = 1 AND [Arp_Replies_Outbound] IS NULL) OR ([Arp_Replies_Outbound] = @Orig" +
                "inal_Arp_Replies_Outbound)) AND ((@IsNull_IPNL3172_Blocks_Received = 1 AND [IPNL" +
                "3172_Blocks_Received] IS NULL) OR ([IPNL3172_Blocks_Received] = @Original_IPNL31" +
                "72_Blocks_Received)) AND ((@IsNull_IPNL3172_Blocks_Transmitted = 1 AND [IPNL3172" +
                "_Blocks_Transmitted] IS NULL) OR ([IPNL3172_Blocks_Transmitted] = @Original_IPNL" +
                "3172_Blocks_Transmitted)) AND ((@IsNull_IPNL3172_Datagrams_Inbound = 1 AND [IPNL" +
                "3172_Datagrams_Inbound] IS NULL) OR ([IPNL3172_Datagrams_Inbound] = @Original_IP" +
                "NL3172_Datagrams_Inbound)) AND ((@IsNull_IPNL3172_Datagrams_Outbound = 1 AND [IP" +
                "NL3172_Datagrams_Outbound] IS NULL) OR ([IPNL3172_Datagrams_Outbound] = @Origina" +
                "l_IPNL3172_Datagrams_Outbound)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Int_FTP_Files_Sent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Int_FTP_Files_Sent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Int_FTP_Files_Sent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Int_FTP_Files_Sent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Int_FTP_Files_Received", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Int_FTP_Files_Received", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Int_FTP_Files_Received", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Int_FTP_Files_Received", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Int_FTP_Bytes_Sent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Int_FTP_Bytes_Sent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Int_FTP_Bytes_Sent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Int_FTP_Bytes_Sent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Int_FTP_Bytes_Received", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Int_FTP_Bytes_Received", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Int_FTP_Bytes_Received", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Int_FTP_Bytes_Received", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Telnet_Bytes_Sent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Telnet_Bytes_Sent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Telnet_Bytes_Sent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Telnet_Bytes_Sent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Telnet_Bytes_Received", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Telnet_Bytes_Received", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Telnet_Bytes_Received", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Telnet_Bytes_Received", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TCP_Bytes_Sent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Bytes_Sent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TCP_Bytes_Sent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Bytes_Sent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TCP_Bytes_Received", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Bytes_Received", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TCP_Bytes_Received", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Bytes_Received", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UDP_Bytes_Sent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Bytes_Sent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UDP_Bytes_Sent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Bytes_Sent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UDP_Bytes_Received", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Bytes_Received", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UDP_Bytes_Received", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Bytes_Received", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP_Bytes_Sent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Bytes_Sent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP_Bytes_Sent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Bytes_Sent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP_Bytes_Received", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Bytes_Received", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP_Bytes_Received", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Bytes_Received", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Arps_In", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Arps_In", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Arps_In", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Arps_In", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Arp_Requests_Inbound", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Arp_Requests_Inbound", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Arp_Requests_Inbound", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Arp_Requests_Inbound", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Arp_Requests_Outbound", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Arp_Requests_Outbound", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Arp_Requests_Outbound", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Arp_Requests_Outbound", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Arp_Replies_Outbound", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Arp_Replies_Outbound", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Arp_Replies_Outbound", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Arp_Replies_Outbound", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IPNL3172_Blocks_Received", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPNL3172_Blocks_Received", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IPNL3172_Blocks_Received", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPNL3172_Blocks_Received", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IPNL3172_Blocks_Transmitted", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPNL3172_Blocks_Transmitted", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IPNL3172_Blocks_Transmitted", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPNL3172_Blocks_Transmitted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IPNL3172_Datagrams_Inbound", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPNL3172_Datagrams_Inbound", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IPNL3172_Datagrams_Inbound", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPNL3172_Datagrams_Inbound", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IPNL3172_Datagrams_Outbound", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPNL3172_Datagrams_Outbound", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IPNL3172_Datagrams_Outbound", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPNL3172_Datagrams_Outbound", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TCPIP_Traffic] ([Poll_Time], [Int_FTP_Files_Sent], [Int_FTP_Files_Received], [Int_FTP_Bytes_Sent], [Int_FTP_Bytes_Received], [Telnet_Bytes_Sent], [Telnet_Bytes_Received], [TCP_Bytes_Sent], [TCP_Bytes_Received], [UDP_Bytes_Sent], [UDP_Bytes_Received], [IP_Bytes_Sent], [IP_Bytes_Received], [Arps_In], [Arp_Requests_Inbound], [Arp_Requests_Outbound], [Arp_Replies_Outbound], [IPNL3172_Blocks_Received], [IPNL3172_Blocks_Transmitted], [IPNL3172_Datagrams_Inbound], [IPNL3172_Datagrams_Outbound]) VALUES (@Poll_Time, @Int_FTP_Files_Sent, @Int_FTP_Files_Received, @Int_FTP_Bytes_Sent, @Int_FTP_Bytes_Received, @Telnet_Bytes_Sent, @Telnet_Bytes_Received, @TCP_Bytes_Sent, @TCP_Bytes_Received, @UDP_Bytes_Sent, @UDP_Bytes_Received, @IP_Bytes_Sent, @IP_Bytes_Received, @Arps_In, @Arp_Requests_Inbound, @Arp_Requests_Outbound, @Arp_Replies_Outbound, @IPNL3172_Blocks_Received, @IPNL3172_Blocks_Transmitted, @IPNL3172_Datagrams_Inbound, @IPNL3172_Datagrams_Outbound);
SELECT Poll_Time, Int_FTP_Files_Sent, Int_FTP_Files_Received, Int_FTP_Bytes_Sent, Int_FTP_Bytes_Received, Telnet_Bytes_Sent, Telnet_Bytes_Received, TCP_Bytes_Sent, TCP_Bytes_Received, UDP_Bytes_Sent, UDP_Bytes_Received, IP_Bytes_Sent, IP_Bytes_Received, Arps_In, Arp_Requests_Inbound, Arp_Requests_Outbound, Arp_Replies_Outbound, IPNL3172_Blocks_Received, IPNL3172_Blocks_Transmitted, IPNL3172_Datagrams_Inbound, IPNL3172_Datagrams_Outbound FROM TCPIP_Traffic WHERE (Poll_Time = @Poll_Time)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Int_FTP_Files_Sent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Int_FTP_Files_Sent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Int_FTP_Files_Received", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Int_FTP_Files_Received", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Int_FTP_Bytes_Sent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Int_FTP_Bytes_Sent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Int_FTP_Bytes_Received", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Int_FTP_Bytes_Received", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Telnet_Bytes_Sent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Telnet_Bytes_Sent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Telnet_Bytes_Received", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Telnet_Bytes_Received", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TCP_Bytes_Sent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Bytes_Sent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TCP_Bytes_Received", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Bytes_Received", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UDP_Bytes_Sent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Bytes_Sent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UDP_Bytes_Received", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Bytes_Received", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP_Bytes_Sent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Bytes_Sent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP_Bytes_Received", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Bytes_Received", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Arps_In", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Arps_In", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Arp_Requests_Inbound", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Arp_Requests_Inbound", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Arp_Requests_Outbound", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Arp_Requests_Outbound", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Arp_Replies_Outbound", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Arp_Replies_Outbound", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IPNL3172_Blocks_Received", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPNL3172_Blocks_Received", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IPNL3172_Blocks_Transmitted", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPNL3172_Blocks_Transmitted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IPNL3172_Datagrams_Inbound", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPNL3172_Datagrams_Inbound", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IPNL3172_Datagrams_Outbound", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPNL3172_Datagrams_Outbound", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[TCPIP_Traffic] SET [Poll_Time] = @Poll_Time, [Int_FTP_Files_Sent] =" +
                " @Int_FTP_Files_Sent, [Int_FTP_Files_Received] = @Int_FTP_Files_Received, [Int_F" +
                "TP_Bytes_Sent] = @Int_FTP_Bytes_Sent, [Int_FTP_Bytes_Received] = @Int_FTP_Bytes_" +
                "Received, [Telnet_Bytes_Sent] = @Telnet_Bytes_Sent, [Telnet_Bytes_Received] = @T" +
                "elnet_Bytes_Received, [TCP_Bytes_Sent] = @TCP_Bytes_Sent, [TCP_Bytes_Received] =" +
                " @TCP_Bytes_Received, [UDP_Bytes_Sent] = @UDP_Bytes_Sent, [UDP_Bytes_Received] =" +
                " @UDP_Bytes_Received, [IP_Bytes_Sent] = @IP_Bytes_Sent, [IP_Bytes_Received] = @I" +
                "P_Bytes_Received, [Arps_In] = @Arps_In, [Arp_Requests_Inbound] = @Arp_Requests_I" +
                "nbound, [Arp_Requests_Outbound] = @Arp_Requests_Outbound, [Arp_Replies_Outbound]" +
                " = @Arp_Replies_Outbound, [IPNL3172_Blocks_Received] = @IPNL3172_Blocks_Received" +
                ", [IPNL3172_Blocks_Transmitted] = @IPNL3172_Blocks_Transmitted, [IPNL3172_Datagr" +
                "ams_Inbound] = @IPNL3172_Datagrams_Inbound, [IPNL3172_Datagrams_Outbound] = @IPN" +
                "L3172_Datagrams_Outbound WHERE (([Poll_Time] = @Original_Poll_Time) AND ((@IsNul" +
                "l_Int_FTP_Files_Sent = 1 AND [Int_FTP_Files_Sent] IS NULL) OR ([Int_FTP_Files_Se" +
                "nt] = @Original_Int_FTP_Files_Sent)) AND ((@IsNull_Int_FTP_Files_Received = 1 AN" +
                "D [Int_FTP_Files_Received] IS NULL) OR ([Int_FTP_Files_Received] = @Original_Int" +
                "_FTP_Files_Received)) AND ((@IsNull_Int_FTP_Bytes_Sent = 1 AND [Int_FTP_Bytes_Se" +
                "nt] IS NULL) OR ([Int_FTP_Bytes_Sent] = @Original_Int_FTP_Bytes_Sent)) AND ((@Is" +
                "Null_Int_FTP_Bytes_Received = 1 AND [Int_FTP_Bytes_Received] IS NULL) OR ([Int_F" +
                "TP_Bytes_Received] = @Original_Int_FTP_Bytes_Received)) AND ((@IsNull_Telnet_Byt" +
                "es_Sent = 1 AND [Telnet_Bytes_Sent] IS NULL) OR ([Telnet_Bytes_Sent] = @Original" +
                "_Telnet_Bytes_Sent)) AND ((@IsNull_Telnet_Bytes_Received = 1 AND [Telnet_Bytes_R" +
                "eceived] IS NULL) OR ([Telnet_Bytes_Received] = @Original_Telnet_Bytes_Received)" +
                ") AND ((@IsNull_TCP_Bytes_Sent = 1 AND [TCP_Bytes_Sent] IS NULL) OR ([TCP_Bytes_" +
                "Sent] = @Original_TCP_Bytes_Sent)) AND ((@IsNull_TCP_Bytes_Received = 1 AND [TCP" +
                "_Bytes_Received] IS NULL) OR ([TCP_Bytes_Received] = @Original_TCP_Bytes_Receive" +
                "d)) AND ((@IsNull_UDP_Bytes_Sent = 1 AND [UDP_Bytes_Sent] IS NULL) OR ([UDP_Byte" +
                "s_Sent] = @Original_UDP_Bytes_Sent)) AND ((@IsNull_UDP_Bytes_Received = 1 AND [U" +
                "DP_Bytes_Received] IS NULL) OR ([UDP_Bytes_Received] = @Original_UDP_Bytes_Recei" +
                "ved)) AND ((@IsNull_IP_Bytes_Sent = 1 AND [IP_Bytes_Sent] IS NULL) OR ([IP_Bytes" +
                "_Sent] = @Original_IP_Bytes_Sent)) AND ((@IsNull_IP_Bytes_Received = 1 AND [IP_B" +
                "ytes_Received] IS NULL) OR ([IP_Bytes_Received] = @Original_IP_Bytes_Received)) " +
                "AND ((@IsNull_Arps_In = 1 AND [Arps_In] IS NULL) OR ([Arps_In] = @Original_Arps_" +
                "In)) AND ((@IsNull_Arp_Requests_Inbound = 1 AND [Arp_Requests_Inbound] IS NULL) " +
                "OR ([Arp_Requests_Inbound] = @Original_Arp_Requests_Inbound)) AND ((@IsNull_Arp_" +
                "Requests_Outbound = 1 AND [Arp_Requests_Outbound] IS NULL) OR ([Arp_Requests_Out" +
                "bound] = @Original_Arp_Requests_Outbound)) AND ((@IsNull_Arp_Replies_Outbound = " +
                "1 AND [Arp_Replies_Outbound] IS NULL) OR ([Arp_Replies_Outbound] = @Original_Arp" +
                "_Replies_Outbound)) AND ((@IsNull_IPNL3172_Blocks_Received = 1 AND [IPNL3172_Blo" +
                "cks_Received] IS NULL) OR ([IPNL3172_Blocks_Received] = @Original_IPNL3172_Block" +
                "s_Received)) AND ((@IsNull_IPNL3172_Blocks_Transmitted = 1 AND [IPNL3172_Blocks_" +
                "Transmitted] IS NULL) OR ([IPNL3172_Blocks_Transmitted] = @Original_IPNL3172_Blo" +
                "cks_Transmitted)) AND ((@IsNull_IPNL3172_Datagrams_Inbound = 1 AND [IPNL3172_Dat" +
                "agrams_Inbound] IS NULL) OR ([IPNL3172_Datagrams_Inbound] = @Original_IPNL3172_D" +
                "atagrams_Inbound)) AND ((@IsNull_IPNL3172_Datagrams_Outbound = 1 AND [IPNL3172_D" +
                "atagrams_Outbound] IS NULL) OR ([IPNL3172_Datagrams_Outbound] = @Original_IPNL31" +
                "72_Datagrams_Outbound)));\r\nSELECT Poll_Time, Int_FTP_Files_Sent, Int_FTP_Files_R" +
                "eceived, Int_FTP_Bytes_Sent, Int_FTP_Bytes_Received, Telnet_Bytes_Sent, Telnet_B" +
                "ytes_Received, TCP_Bytes_Sent, TCP_Bytes_Received, UDP_Bytes_Sent, UDP_Bytes_Rec" +
                "eived, IP_Bytes_Sent, IP_Bytes_Received, Arps_In, Arp_Requests_Inbound, Arp_Requ" +
                "ests_Outbound, Arp_Replies_Outbound, IPNL3172_Blocks_Received, IPNL3172_Blocks_T" +
                "ransmitted, IPNL3172_Datagrams_Inbound, IPNL3172_Datagrams_Outbound FROM TCPIP_T" +
                "raffic WHERE (Poll_Time = @Poll_Time)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Int_FTP_Files_Sent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Int_FTP_Files_Sent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Int_FTP_Files_Received", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Int_FTP_Files_Received", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Int_FTP_Bytes_Sent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Int_FTP_Bytes_Sent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Int_FTP_Bytes_Received", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Int_FTP_Bytes_Received", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Telnet_Bytes_Sent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Telnet_Bytes_Sent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Telnet_Bytes_Received", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Telnet_Bytes_Received", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TCP_Bytes_Sent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Bytes_Sent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TCP_Bytes_Received", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Bytes_Received", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UDP_Bytes_Sent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Bytes_Sent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UDP_Bytes_Received", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Bytes_Received", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP_Bytes_Sent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Bytes_Sent", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP_Bytes_Received", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Bytes_Received", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Arps_In", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Arps_In", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Arp_Requests_Inbound", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Arp_Requests_Inbound", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Arp_Requests_Outbound", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Arp_Requests_Outbound", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Arp_Replies_Outbound", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Arp_Replies_Outbound", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IPNL3172_Blocks_Received", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPNL3172_Blocks_Received", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IPNL3172_Blocks_Transmitted", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPNL3172_Blocks_Transmitted", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IPNL3172_Datagrams_Inbound", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPNL3172_Datagrams_Inbound", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IPNL3172_Datagrams_Outbound", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPNL3172_Datagrams_Outbound", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Int_FTP_Files_Sent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Int_FTP_Files_Sent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Int_FTP_Files_Sent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Int_FTP_Files_Sent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Int_FTP_Files_Received", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Int_FTP_Files_Received", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Int_FTP_Files_Received", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Int_FTP_Files_Received", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Int_FTP_Bytes_Sent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Int_FTP_Bytes_Sent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Int_FTP_Bytes_Sent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Int_FTP_Bytes_Sent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Int_FTP_Bytes_Received", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Int_FTP_Bytes_Received", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Int_FTP_Bytes_Received", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Int_FTP_Bytes_Received", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Telnet_Bytes_Sent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Telnet_Bytes_Sent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Telnet_Bytes_Sent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Telnet_Bytes_Sent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Telnet_Bytes_Received", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Telnet_Bytes_Received", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Telnet_Bytes_Received", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Telnet_Bytes_Received", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TCP_Bytes_Sent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Bytes_Sent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TCP_Bytes_Sent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Bytes_Sent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TCP_Bytes_Received", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Bytes_Received", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TCP_Bytes_Received", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Bytes_Received", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UDP_Bytes_Sent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Bytes_Sent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UDP_Bytes_Sent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Bytes_Sent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UDP_Bytes_Received", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Bytes_Received", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UDP_Bytes_Received", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Bytes_Received", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP_Bytes_Sent", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Bytes_Sent", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP_Bytes_Sent", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Bytes_Sent", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP_Bytes_Received", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Bytes_Received", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP_Bytes_Received", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Bytes_Received", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Arps_In", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Arps_In", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Arps_In", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Arps_In", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Arp_Requests_Inbound", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Arp_Requests_Inbound", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Arp_Requests_Inbound", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Arp_Requests_Inbound", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Arp_Requests_Outbound", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Arp_Requests_Outbound", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Arp_Requests_Outbound", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Arp_Requests_Outbound", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Arp_Replies_Outbound", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Arp_Replies_Outbound", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Arp_Replies_Outbound", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Arp_Replies_Outbound", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IPNL3172_Blocks_Received", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPNL3172_Blocks_Received", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IPNL3172_Blocks_Received", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPNL3172_Blocks_Received", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IPNL3172_Blocks_Transmitted", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPNL3172_Blocks_Transmitted", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IPNL3172_Blocks_Transmitted", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPNL3172_Blocks_Transmitted", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IPNL3172_Datagrams_Inbound", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPNL3172_Datagrams_Inbound", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IPNL3172_Datagrams_Inbound", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPNL3172_Datagrams_Inbound", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IPNL3172_Datagrams_Outbound", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPNL3172_Datagrams_Outbound", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IPNL3172_Datagrams_Outbound", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IPNL3172_Datagrams_Outbound", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=DANSDELL\\SQLEXPRESS;Initial Catalog=VseDb;Integrated Security=True";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Poll_Time, Int_FTP_Files_Sent, Int_FTP_Files_Received, Int_FTP_Bytes_Sent, Int_FTP_Bytes_Received, Telnet_Bytes_Sent, Telnet_Bytes_Received, TCP_Bytes_Sent, TCP_Bytes_Received, UDP_Bytes_Sent, UDP_Bytes_Received, IP_Bytes_Sent, IP_Bytes_Received, Arps_In, Arp_Requests_Inbound, Arp_Requests_Outbound, Arp_Replies_Outbound, IPNL3172_Blocks_Received, IPNL3172_Blocks_Transmitted, IPNL3172_Datagrams_Inbound, IPNL3172_Datagrams_Outbound FROM dbo.TCPIP_Traffic";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT     Poll_Time, Int_FTP_Files_Sent, Int_FTP_Files_Received, Int_FTP_Bytes_Sent, Int_FTP_Bytes_Received, Telnet_Bytes_Sent, Telnet_Bytes_Received, 
                      TCP_Bytes_Sent, TCP_Bytes_Received, UDP_Bytes_Sent, UDP_Bytes_Received, IP_Bytes_Sent, IP_Bytes_Received, Arps_In, 
                      Arp_Requests_Inbound, Arp_Requests_Outbound, Arp_Replies_Outbound, IPNL3172_Blocks_Received, IPNL3172_Blocks_Transmitted, 
                      IPNL3172_Datagrams_Inbound, IPNL3172_Datagrams_Outbound
FROM         TCPIP_Traffic
WHERE     (Poll_Time = @pollTime)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pollTime", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(VseDbDataSet.TCPIP_TrafficDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual VseDbDataSet.TCPIP_TrafficDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            VseDbDataSet.TCPIP_TrafficDataTable dataTable = new VseDbDataSet.TCPIP_TrafficDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(VseDbDataSet.TCPIP_TrafficDataTable dataTable, System.DateTime pollTime) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(pollTime));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual VseDbDataSet.TCPIP_TrafficDataTable GetDataBy(System.DateTime pollTime) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(pollTime));
            VseDbDataSet.TCPIP_TrafficDataTable dataTable = new VseDbDataSet.TCPIP_TrafficDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet.TCPIP_TrafficDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TCPIP_Traffic");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    System.DateTime Original_Poll_Time, 
                    global::System.Nullable<double> Original_Int_FTP_Files_Sent, 
                    global::System.Nullable<double> Original_Int_FTP_Files_Received, 
                    global::System.Nullable<double> Original_Int_FTP_Bytes_Sent, 
                    global::System.Nullable<double> Original_Int_FTP_Bytes_Received, 
                    global::System.Nullable<double> Original_Telnet_Bytes_Sent, 
                    global::System.Nullable<double> Original_Telnet_Bytes_Received, 
                    global::System.Nullable<double> Original_TCP_Bytes_Sent, 
                    global::System.Nullable<double> Original_TCP_Bytes_Received, 
                    global::System.Nullable<double> Original_UDP_Bytes_Sent, 
                    global::System.Nullable<double> Original_UDP_Bytes_Received, 
                    global::System.Nullable<double> Original_IP_Bytes_Sent, 
                    global::System.Nullable<double> Original_IP_Bytes_Received, 
                    global::System.Nullable<double> Original_Arps_In, 
                    global::System.Nullable<double> Original_Arp_Requests_Inbound, 
                    global::System.Nullable<double> Original_Arp_Requests_Outbound, 
                    global::System.Nullable<double> Original_Arp_Replies_Outbound, 
                    global::System.Nullable<double> Original_IPNL3172_Blocks_Received, 
                    global::System.Nullable<double> Original_IPNL3172_Blocks_Transmitted, 
                    global::System.Nullable<double> Original_IPNL3172_Datagrams_Inbound, 
                    global::System.Nullable<double> Original_IPNL3172_Datagrams_Outbound) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.DateTime)(Original_Poll_Time));
            if ((Original_Int_FTP_Files_Sent.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((double)(Original_Int_FTP_Files_Sent.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_Int_FTP_Files_Received.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((double)(Original_Int_FTP_Files_Received.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_Int_FTP_Bytes_Sent.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_Int_FTP_Bytes_Sent.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_Int_FTP_Bytes_Received.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((double)(Original_Int_FTP_Bytes_Received.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_Telnet_Bytes_Sent.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((double)(Original_Telnet_Bytes_Sent.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_Telnet_Bytes_Received.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((double)(Original_Telnet_Bytes_Received.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_TCP_Bytes_Sent.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((double)(Original_TCP_Bytes_Sent.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_TCP_Bytes_Received.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((double)(Original_TCP_Bytes_Received.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_UDP_Bytes_Sent.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((double)(Original_UDP_Bytes_Sent.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_UDP_Bytes_Received.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((double)(Original_UDP_Bytes_Received.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_IP_Bytes_Sent.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((double)(Original_IP_Bytes_Sent.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_IP_Bytes_Received.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((double)(Original_IP_Bytes_Received.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_Arps_In.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((double)(Original_Arps_In.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_Arp_Requests_Inbound.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((double)(Original_Arp_Requests_Inbound.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_Arp_Requests_Outbound.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((double)(Original_Arp_Requests_Outbound.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_Arp_Replies_Outbound.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((double)(Original_Arp_Replies_Outbound.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_IPNL3172_Blocks_Received.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((double)(Original_IPNL3172_Blocks_Received.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_IPNL3172_Blocks_Transmitted.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((double)(Original_IPNL3172_Blocks_Transmitted.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_IPNL3172_Datagrams_Inbound.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[38].Value = ((double)(Original_IPNL3172_Datagrams_Inbound.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_IPNL3172_Datagrams_Outbound.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[40].Value = ((double)(Original_IPNL3172_Datagrams_Outbound.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    System.DateTime Poll_Time, 
                    global::System.Nullable<double> Int_FTP_Files_Sent, 
                    global::System.Nullable<double> Int_FTP_Files_Received, 
                    global::System.Nullable<double> Int_FTP_Bytes_Sent, 
                    global::System.Nullable<double> Int_FTP_Bytes_Received, 
                    global::System.Nullable<double> Telnet_Bytes_Sent, 
                    global::System.Nullable<double> Telnet_Bytes_Received, 
                    global::System.Nullable<double> TCP_Bytes_Sent, 
                    global::System.Nullable<double> TCP_Bytes_Received, 
                    global::System.Nullable<double> UDP_Bytes_Sent, 
                    global::System.Nullable<double> UDP_Bytes_Received, 
                    global::System.Nullable<double> IP_Bytes_Sent, 
                    global::System.Nullable<double> IP_Bytes_Received, 
                    global::System.Nullable<double> Arps_In, 
                    global::System.Nullable<double> Arp_Requests_Inbound, 
                    global::System.Nullable<double> Arp_Requests_Outbound, 
                    global::System.Nullable<double> Arp_Replies_Outbound, 
                    global::System.Nullable<double> IPNL3172_Blocks_Received, 
                    global::System.Nullable<double> IPNL3172_Blocks_Transmitted, 
                    global::System.Nullable<double> IPNL3172_Datagrams_Inbound, 
                    global::System.Nullable<double> IPNL3172_Datagrams_Outbound) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(Poll_Time));
            if ((Int_FTP_Files_Sent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((double)(Int_FTP_Files_Sent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Int_FTP_Files_Received.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((double)(Int_FTP_Files_Received.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Int_FTP_Bytes_Sent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(Int_FTP_Bytes_Sent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Int_FTP_Bytes_Received.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(Int_FTP_Bytes_Received.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Telnet_Bytes_Sent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(Telnet_Bytes_Sent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Telnet_Bytes_Received.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(Telnet_Bytes_Received.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((TCP_Bytes_Sent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(TCP_Bytes_Sent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((TCP_Bytes_Received.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(TCP_Bytes_Received.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((UDP_Bytes_Sent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((double)(UDP_Bytes_Sent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((UDP_Bytes_Received.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((double)(UDP_Bytes_Received.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((IP_Bytes_Sent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((double)(IP_Bytes_Sent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((IP_Bytes_Received.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((double)(IP_Bytes_Received.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Arps_In.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((double)(Arps_In.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Arp_Requests_Inbound.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((double)(Arp_Requests_Inbound.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Arp_Requests_Outbound.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((double)(Arp_Requests_Outbound.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Arp_Replies_Outbound.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((double)(Arp_Replies_Outbound.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((IPNL3172_Blocks_Received.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((double)(IPNL3172_Blocks_Received.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((IPNL3172_Blocks_Transmitted.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((double)(IPNL3172_Blocks_Transmitted.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((IPNL3172_Datagrams_Inbound.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((double)(IPNL3172_Datagrams_Inbound.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((IPNL3172_Datagrams_Outbound.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((double)(IPNL3172_Datagrams_Outbound.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime Poll_Time, 
                    global::System.Nullable<double> Int_FTP_Files_Sent, 
                    global::System.Nullable<double> Int_FTP_Files_Received, 
                    global::System.Nullable<double> Int_FTP_Bytes_Sent, 
                    global::System.Nullable<double> Int_FTP_Bytes_Received, 
                    global::System.Nullable<double> Telnet_Bytes_Sent, 
                    global::System.Nullable<double> Telnet_Bytes_Received, 
                    global::System.Nullable<double> TCP_Bytes_Sent, 
                    global::System.Nullable<double> TCP_Bytes_Received, 
                    global::System.Nullable<double> UDP_Bytes_Sent, 
                    global::System.Nullable<double> UDP_Bytes_Received, 
                    global::System.Nullable<double> IP_Bytes_Sent, 
                    global::System.Nullable<double> IP_Bytes_Received, 
                    global::System.Nullable<double> Arps_In, 
                    global::System.Nullable<double> Arp_Requests_Inbound, 
                    global::System.Nullable<double> Arp_Requests_Outbound, 
                    global::System.Nullable<double> Arp_Replies_Outbound, 
                    global::System.Nullable<double> IPNL3172_Blocks_Received, 
                    global::System.Nullable<double> IPNL3172_Blocks_Transmitted, 
                    global::System.Nullable<double> IPNL3172_Datagrams_Inbound, 
                    global::System.Nullable<double> IPNL3172_Datagrams_Outbound, 
                    System.DateTime Original_Poll_Time, 
                    global::System.Nullable<double> Original_Int_FTP_Files_Sent, 
                    global::System.Nullable<double> Original_Int_FTP_Files_Received, 
                    global::System.Nullable<double> Original_Int_FTP_Bytes_Sent, 
                    global::System.Nullable<double> Original_Int_FTP_Bytes_Received, 
                    global::System.Nullable<double> Original_Telnet_Bytes_Sent, 
                    global::System.Nullable<double> Original_Telnet_Bytes_Received, 
                    global::System.Nullable<double> Original_TCP_Bytes_Sent, 
                    global::System.Nullable<double> Original_TCP_Bytes_Received, 
                    global::System.Nullable<double> Original_UDP_Bytes_Sent, 
                    global::System.Nullable<double> Original_UDP_Bytes_Received, 
                    global::System.Nullable<double> Original_IP_Bytes_Sent, 
                    global::System.Nullable<double> Original_IP_Bytes_Received, 
                    global::System.Nullable<double> Original_Arps_In, 
                    global::System.Nullable<double> Original_Arp_Requests_Inbound, 
                    global::System.Nullable<double> Original_Arp_Requests_Outbound, 
                    global::System.Nullable<double> Original_Arp_Replies_Outbound, 
                    global::System.Nullable<double> Original_IPNL3172_Blocks_Received, 
                    global::System.Nullable<double> Original_IPNL3172_Blocks_Transmitted, 
                    global::System.Nullable<double> Original_IPNL3172_Datagrams_Inbound, 
                    global::System.Nullable<double> Original_IPNL3172_Datagrams_Outbound) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(Poll_Time));
            if ((Int_FTP_Files_Sent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((double)(Int_FTP_Files_Sent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Int_FTP_Files_Received.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(Int_FTP_Files_Received.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Int_FTP_Bytes_Sent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(Int_FTP_Bytes_Sent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Int_FTP_Bytes_Received.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(Int_FTP_Bytes_Received.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Telnet_Bytes_Sent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(Telnet_Bytes_Sent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Telnet_Bytes_Received.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(Telnet_Bytes_Received.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((TCP_Bytes_Sent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(TCP_Bytes_Sent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((TCP_Bytes_Received.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(TCP_Bytes_Received.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((UDP_Bytes_Sent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(UDP_Bytes_Sent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((UDP_Bytes_Received.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(UDP_Bytes_Received.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((IP_Bytes_Sent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((double)(IP_Bytes_Sent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((IP_Bytes_Received.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((double)(IP_Bytes_Received.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Arps_In.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((double)(Arps_In.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Arp_Requests_Inbound.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(Arp_Requests_Inbound.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Arp_Requests_Outbound.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((double)(Arp_Requests_Outbound.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Arp_Replies_Outbound.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((double)(Arp_Replies_Outbound.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((IPNL3172_Blocks_Received.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((double)(IPNL3172_Blocks_Received.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((IPNL3172_Blocks_Transmitted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((double)(IPNL3172_Blocks_Transmitted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((IPNL3172_Datagrams_Inbound.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((double)(IPNL3172_Datagrams_Inbound.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((IPNL3172_Datagrams_Outbound.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((double)(IPNL3172_Datagrams_Outbound.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(Original_Poll_Time));
            if ((Original_Int_FTP_Files_Sent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((double)(Original_Int_FTP_Files_Sent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_Int_FTP_Files_Received.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((double)(Original_Int_FTP_Files_Received.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_Int_FTP_Bytes_Sent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((double)(Original_Int_FTP_Bytes_Sent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_Int_FTP_Bytes_Received.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((double)(Original_Int_FTP_Bytes_Received.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_Telnet_Bytes_Sent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((double)(Original_Telnet_Bytes_Sent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_Telnet_Bytes_Received.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((double)(Original_Telnet_Bytes_Received.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Original_TCP_Bytes_Sent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((double)(Original_TCP_Bytes_Sent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_TCP_Bytes_Received.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((double)(Original_TCP_Bytes_Received.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Original_UDP_Bytes_Sent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((double)(Original_UDP_Bytes_Sent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Original_UDP_Bytes_Received.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((double)(Original_UDP_Bytes_Received.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_IP_Bytes_Sent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((double)(Original_IP_Bytes_Sent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_IP_Bytes_Received.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((double)(Original_IP_Bytes_Received.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_Arps_In.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((double)(Original_Arps_In.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Original_Arp_Requests_Inbound.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((double)(Original_Arp_Requests_Inbound.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_Arp_Requests_Outbound.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((double)(Original_Arp_Requests_Outbound.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Original_Arp_Replies_Outbound.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((double)(Original_Arp_Replies_Outbound.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Original_IPNL3172_Blocks_Received.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((double)(Original_IPNL3172_Blocks_Received.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            if ((Original_IPNL3172_Blocks_Transmitted.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[57].Value = ((double)(Original_IPNL3172_Blocks_Transmitted.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[56].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[57].Value = global::System.DBNull.Value;
            }
            if ((Original_IPNL3172_Datagrams_Inbound.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[59].Value = ((double)(Original_IPNL3172_Datagrams_Inbound.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[58].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((Original_IPNL3172_Datagrams_Outbound.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[61].Value = ((double)(Original_IPNL3172_Datagrams_Outbound.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[60].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[61].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<double> Int_FTP_Files_Sent, 
                    global::System.Nullable<double> Int_FTP_Files_Received, 
                    global::System.Nullable<double> Int_FTP_Bytes_Sent, 
                    global::System.Nullable<double> Int_FTP_Bytes_Received, 
                    global::System.Nullable<double> Telnet_Bytes_Sent, 
                    global::System.Nullable<double> Telnet_Bytes_Received, 
                    global::System.Nullable<double> TCP_Bytes_Sent, 
                    global::System.Nullable<double> TCP_Bytes_Received, 
                    global::System.Nullable<double> UDP_Bytes_Sent, 
                    global::System.Nullable<double> UDP_Bytes_Received, 
                    global::System.Nullable<double> IP_Bytes_Sent, 
                    global::System.Nullable<double> IP_Bytes_Received, 
                    global::System.Nullable<double> Arps_In, 
                    global::System.Nullable<double> Arp_Requests_Inbound, 
                    global::System.Nullable<double> Arp_Requests_Outbound, 
                    global::System.Nullable<double> Arp_Replies_Outbound, 
                    global::System.Nullable<double> IPNL3172_Blocks_Received, 
                    global::System.Nullable<double> IPNL3172_Blocks_Transmitted, 
                    global::System.Nullable<double> IPNL3172_Datagrams_Inbound, 
                    global::System.Nullable<double> IPNL3172_Datagrams_Outbound, 
                    System.DateTime Original_Poll_Time, 
                    global::System.Nullable<double> Original_Int_FTP_Files_Sent, 
                    global::System.Nullable<double> Original_Int_FTP_Files_Received, 
                    global::System.Nullable<double> Original_Int_FTP_Bytes_Sent, 
                    global::System.Nullable<double> Original_Int_FTP_Bytes_Received, 
                    global::System.Nullable<double> Original_Telnet_Bytes_Sent, 
                    global::System.Nullable<double> Original_Telnet_Bytes_Received, 
                    global::System.Nullable<double> Original_TCP_Bytes_Sent, 
                    global::System.Nullable<double> Original_TCP_Bytes_Received, 
                    global::System.Nullable<double> Original_UDP_Bytes_Sent, 
                    global::System.Nullable<double> Original_UDP_Bytes_Received, 
                    global::System.Nullable<double> Original_IP_Bytes_Sent, 
                    global::System.Nullable<double> Original_IP_Bytes_Received, 
                    global::System.Nullable<double> Original_Arps_In, 
                    global::System.Nullable<double> Original_Arp_Requests_Inbound, 
                    global::System.Nullable<double> Original_Arp_Requests_Outbound, 
                    global::System.Nullable<double> Original_Arp_Replies_Outbound, 
                    global::System.Nullable<double> Original_IPNL3172_Blocks_Received, 
                    global::System.Nullable<double> Original_IPNL3172_Blocks_Transmitted, 
                    global::System.Nullable<double> Original_IPNL3172_Datagrams_Inbound, 
                    global::System.Nullable<double> Original_IPNL3172_Datagrams_Outbound) {
            return this.Update(Original_Poll_Time, Int_FTP_Files_Sent, Int_FTP_Files_Received, Int_FTP_Bytes_Sent, Int_FTP_Bytes_Received, Telnet_Bytes_Sent, Telnet_Bytes_Received, TCP_Bytes_Sent, TCP_Bytes_Received, UDP_Bytes_Sent, UDP_Bytes_Received, IP_Bytes_Sent, IP_Bytes_Received, Arps_In, Arp_Requests_Inbound, Arp_Requests_Outbound, Arp_Replies_Outbound, IPNL3172_Blocks_Received, IPNL3172_Blocks_Transmitted, IPNL3172_Datagrams_Inbound, IPNL3172_Datagrams_Outbound, Original_Poll_Time, Original_Int_FTP_Files_Sent, Original_Int_FTP_Files_Received, Original_Int_FTP_Bytes_Sent, Original_Int_FTP_Bytes_Received, Original_Telnet_Bytes_Sent, Original_Telnet_Bytes_Received, Original_TCP_Bytes_Sent, Original_TCP_Bytes_Received, Original_UDP_Bytes_Sent, Original_UDP_Bytes_Received, Original_IP_Bytes_Sent, Original_IP_Bytes_Received, Original_Arps_In, Original_Arp_Requests_Inbound, Original_Arp_Requests_Outbound, Original_Arp_Replies_Outbound, Original_IPNL3172_Blocks_Received, Original_IPNL3172_Blocks_Transmitted, Original_IPNL3172_Datagrams_Inbound, Original_IPNL3172_Datagrams_Outbound);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class VSE_StatsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public VSE_StatsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "VSE_Stats";
            tableMapping.ColumnMappings.Add("Poll_Time", "Poll_Time");
            tableMapping.ColumnMappings.Add("Program_Checks", "Program_Checks");
            tableMapping.ColumnMappings.Add("Phase_Loads", "Phase_Loads");
            tableMapping.ColumnMappings.Add("Subchannel_Starts", "Subchannel_Starts");
            tableMapping.ColumnMappings.Add("Supervisor_Interrupts", "Supervisor_Interrupts");
            tableMapping.ColumnMappings.Add("IO_Interrupts", "IO_Interrupts");
            tableMapping.ColumnMappings.Add("External_Interrupts", "External_Interrupts");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[VSE_Stats] WHERE (([Poll_Time] = @Original_Poll_Time) AND ((@IsNull_Program_Checks = 1 AND [Program_Checks] IS NULL) OR ([Program_Checks] = @Original_Program_Checks)) AND ((@IsNull_Phase_Loads = 1 AND [Phase_Loads] IS NULL) OR ([Phase_Loads] = @Original_Phase_Loads)) AND ((@IsNull_Subchannel_Starts = 1 AND [Subchannel_Starts] IS NULL) OR ([Subchannel_Starts] = @Original_Subchannel_Starts)) AND ((@IsNull_Supervisor_Interrupts = 1 AND [Supervisor_Interrupts] IS NULL) OR ([Supervisor_Interrupts] = @Original_Supervisor_Interrupts)) AND ((@IsNull_IO_Interrupts = 1 AND [IO_Interrupts] IS NULL) OR ([IO_Interrupts] = @Original_IO_Interrupts)) AND ((@IsNull_External_Interrupts = 1 AND [External_Interrupts] IS NULL) OR ([External_Interrupts] = @Original_External_Interrupts)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Program_Checks", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Program_Checks", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Program_Checks", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Program_Checks", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Phase_Loads", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phase_Loads", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Phase_Loads", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phase_Loads", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Subchannel_Starts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Subchannel_Starts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Subchannel_Starts", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Subchannel_Starts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Supervisor_Interrupts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supervisor_Interrupts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Supervisor_Interrupts", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supervisor_Interrupts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IO_Interrupts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IO_Interrupts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IO_Interrupts", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IO_Interrupts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_External_Interrupts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "External_Interrupts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_External_Interrupts", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "External_Interrupts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[VSE_Stats] ([Poll_Time], [Program_Checks], [Phase_Loads], [Subchannel_Starts], [Supervisor_Interrupts], [IO_Interrupts], [External_Interrupts]) VALUES (@Poll_Time, @Program_Checks, @Phase_Loads, @Subchannel_Starts, @Supervisor_Interrupts, @IO_Interrupts, @External_Interrupts);
SELECT Poll_Time, Program_Checks, Phase_Loads, Subchannel_Starts, Supervisor_Interrupts, IO_Interrupts, External_Interrupts FROM VSE_Stats WHERE (Poll_Time = @Poll_Time)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Program_Checks", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Program_Checks", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Phase_Loads", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phase_Loads", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Subchannel_Starts", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Subchannel_Starts", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Supervisor_Interrupts", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supervisor_Interrupts", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IO_Interrupts", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IO_Interrupts", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@External_Interrupts", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "External_Interrupts", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[VSE_Stats] SET [Poll_Time] = @Poll_Time, [Program_Checks] = @Program_Checks, [Phase_Loads] = @Phase_Loads, [Subchannel_Starts] = @Subchannel_Starts, [Supervisor_Interrupts] = @Supervisor_Interrupts, [IO_Interrupts] = @IO_Interrupts, [External_Interrupts] = @External_Interrupts WHERE (([Poll_Time] = @Original_Poll_Time) AND ((@IsNull_Program_Checks = 1 AND [Program_Checks] IS NULL) OR ([Program_Checks] = @Original_Program_Checks)) AND ((@IsNull_Phase_Loads = 1 AND [Phase_Loads] IS NULL) OR ([Phase_Loads] = @Original_Phase_Loads)) AND ((@IsNull_Subchannel_Starts = 1 AND [Subchannel_Starts] IS NULL) OR ([Subchannel_Starts] = @Original_Subchannel_Starts)) AND ((@IsNull_Supervisor_Interrupts = 1 AND [Supervisor_Interrupts] IS NULL) OR ([Supervisor_Interrupts] = @Original_Supervisor_Interrupts)) AND ((@IsNull_IO_Interrupts = 1 AND [IO_Interrupts] IS NULL) OR ([IO_Interrupts] = @Original_IO_Interrupts)) AND ((@IsNull_External_Interrupts = 1 AND [External_Interrupts] IS NULL) OR ([External_Interrupts] = @Original_External_Interrupts)));
SELECT Poll_Time, Program_Checks, Phase_Loads, Subchannel_Starts, Supervisor_Interrupts, IO_Interrupts, External_Interrupts FROM VSE_Stats WHERE (Poll_Time = @Poll_Time)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Program_Checks", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Program_Checks", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Phase_Loads", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phase_Loads", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Subchannel_Starts", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Subchannel_Starts", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Supervisor_Interrupts", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supervisor_Interrupts", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IO_Interrupts", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IO_Interrupts", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@External_Interrupts", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "External_Interrupts", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Program_Checks", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Program_Checks", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Program_Checks", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Program_Checks", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Phase_Loads", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phase_Loads", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Phase_Loads", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Phase_Loads", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Subchannel_Starts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Subchannel_Starts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Subchannel_Starts", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Subchannel_Starts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Supervisor_Interrupts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supervisor_Interrupts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Supervisor_Interrupts", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Supervisor_Interrupts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IO_Interrupts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IO_Interrupts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IO_Interrupts", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IO_Interrupts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_External_Interrupts", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "External_Interrupts", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_External_Interrupts", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "External_Interrupts", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=DANSDELL\\SQLEXPRESS;Initial Catalog=VseDb;Integrated Security=True";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Poll_Time, Program_Checks, Phase_Loads, Subchannel_Starts, Supervisor_Inte" +
                "rrupts, IO_Interrupts, External_Interrupts FROM dbo.VSE_Stats";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT     Poll_Time, Program_Checks, Phase_Loads, Subchannel_Starts, Supervisor_" +
                "Interrupts, IO_Interrupts, External_Interrupts\r\nFROM         VSE_Stats\r\nWHERE   " +
                "  (Poll_Time = @pollTime)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pollTime", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(VseDbDataSet.VSE_StatsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual VseDbDataSet.VSE_StatsDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            VseDbDataSet.VSE_StatsDataTable dataTable = new VseDbDataSet.VSE_StatsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(VseDbDataSet.VSE_StatsDataTable dataTable, System.DateTime pollTime) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(pollTime));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual VseDbDataSet.VSE_StatsDataTable GetDataBy(System.DateTime pollTime) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(pollTime));
            VseDbDataSet.VSE_StatsDataTable dataTable = new VseDbDataSet.VSE_StatsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet.VSE_StatsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet dataSet) {
            return this.Adapter.Update(dataSet, "VSE_Stats");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(System.DateTime Original_Poll_Time, global::System.Nullable<double> Original_Program_Checks, global::System.Nullable<double> Original_Phase_Loads, global::System.Nullable<double> Original_Subchannel_Starts, global::System.Nullable<double> Original_Supervisor_Interrupts, global::System.Nullable<double> Original_IO_Interrupts, global::System.Nullable<double> Original_External_Interrupts) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.DateTime)(Original_Poll_Time));
            if ((Original_Program_Checks.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((double)(Original_Program_Checks.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_Phase_Loads.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((double)(Original_Phase_Loads.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_Subchannel_Starts.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_Subchannel_Starts.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_Supervisor_Interrupts.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((double)(Original_Supervisor_Interrupts.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_IO_Interrupts.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((double)(Original_IO_Interrupts.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_External_Interrupts.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((double)(Original_External_Interrupts.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(System.DateTime Poll_Time, global::System.Nullable<double> Program_Checks, global::System.Nullable<double> Phase_Loads, global::System.Nullable<double> Subchannel_Starts, global::System.Nullable<double> Supervisor_Interrupts, global::System.Nullable<double> IO_Interrupts, global::System.Nullable<double> External_Interrupts) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(Poll_Time));
            if ((Program_Checks.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((double)(Program_Checks.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Phase_Loads.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((double)(Phase_Loads.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Subchannel_Starts.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(Subchannel_Starts.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Supervisor_Interrupts.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(Supervisor_Interrupts.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((IO_Interrupts.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(IO_Interrupts.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((External_Interrupts.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(External_Interrupts.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(System.DateTime Poll_Time, global::System.Nullable<double> Program_Checks, global::System.Nullable<double> Phase_Loads, global::System.Nullable<double> Subchannel_Starts, global::System.Nullable<double> Supervisor_Interrupts, global::System.Nullable<double> IO_Interrupts, global::System.Nullable<double> External_Interrupts, System.DateTime Original_Poll_Time, global::System.Nullable<double> Original_Program_Checks, global::System.Nullable<double> Original_Phase_Loads, global::System.Nullable<double> Original_Subchannel_Starts, global::System.Nullable<double> Original_Supervisor_Interrupts, global::System.Nullable<double> Original_IO_Interrupts, global::System.Nullable<double> Original_External_Interrupts) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(Poll_Time));
            if ((Program_Checks.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((double)(Program_Checks.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Phase_Loads.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((double)(Phase_Loads.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Subchannel_Starts.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(Subchannel_Starts.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Supervisor_Interrupts.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(Supervisor_Interrupts.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((IO_Interrupts.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(IO_Interrupts.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((External_Interrupts.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(External_Interrupts.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(Original_Poll_Time));
            if ((Original_Program_Checks.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(Original_Program_Checks.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_Phase_Loads.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((double)(Original_Phase_Loads.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_Subchannel_Starts.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((double)(Original_Subchannel_Starts.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_Supervisor_Interrupts.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((double)(Original_Supervisor_Interrupts.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_IO_Interrupts.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((double)(Original_IO_Interrupts.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_External_Interrupts.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((double)(Original_External_Interrupts.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<double> Program_Checks, global::System.Nullable<double> Phase_Loads, global::System.Nullable<double> Subchannel_Starts, global::System.Nullable<double> Supervisor_Interrupts, global::System.Nullable<double> IO_Interrupts, global::System.Nullable<double> External_Interrupts, System.DateTime Original_Poll_Time, global::System.Nullable<double> Original_Program_Checks, global::System.Nullable<double> Original_Phase_Loads, global::System.Nullable<double> Original_Subchannel_Starts, global::System.Nullable<double> Original_Supervisor_Interrupts, global::System.Nullable<double> Original_IO_Interrupts, global::System.Nullable<double> Original_External_Interrupts) {
            return this.Update(Original_Poll_Time, Program_Checks, Phase_Loads, Subchannel_Starts, Supervisor_Interrupts, IO_Interrupts, External_Interrupts, Original_Poll_Time, Original_Program_Checks, Original_Phase_Loads, Original_Subchannel_Starts, Original_Supervisor_Interrupts, Original_IO_Interrupts, Original_External_Interrupts);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class VSE_SummaryTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public VSE_SummaryTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "VSE_Summary";
            tableMapping.ColumnMappings.Add("Poll_Time", "Poll_Time");
            tableMapping.ColumnMappings.Add("Last_IPL_Time", "Last_IPL_Time");
            tableMapping.ColumnMappings.Add("Last_CpuReset_Time", "Last_CpuReset_Time");
            tableMapping.ColumnMappings.Add("Sec_since_IPL", "Sec_since_IPL");
            tableMapping.ColumnMappings.Add("Sec_since_CpuReset", "Sec_since_CpuReset");
            tableMapping.ColumnMappings.Add("Cpu_ID", "Cpu_ID");
            tableMapping.ColumnMappings.Add("Release", "Release");
            tableMapping.ColumnMappings.Add("Power_Sys_ID", "Power_Sys_ID");
            tableMapping.ColumnMappings.Add("Power_Node", "Power_Node");
            tableMapping.ColumnMappings.Add("European_Dates", "European_Dates");
            tableMapping.ColumnMappings.Add("Time_Zone_Offset", "Time_Zone_Offset");
            tableMapping.ColumnMappings.Add("Nof_Cpus", "Nof_Cpus");
            tableMapping.ColumnMappings.Add("Nof_Active_Cpus", "Nof_Active_Cpus");
            tableMapping.ColumnMappings.Add("Nof_Quiesced_Cpus", "Nof_Quiesced_Cpus");
            tableMapping.ColumnMappings.Add("MaxNof_Tasks", "MaxNof_Tasks");
            tableMapping.ColumnMappings.Add("Nof_Active_Tasks", "Nof_Active_Tasks");
            tableMapping.ColumnMappings.Add("MaxNof_Partitions", "MaxNof_Partitions");
            tableMapping.ColumnMappings.Add("Nof_Allocated_Partitions", "Nof_Allocated_Partitions");
            tableMapping.ColumnMappings.Add("Nof_TCPIP_Stacks", "Nof_TCPIP_Stacks");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[VSE_Summary] WHERE (([Poll_Time] = @Original_Poll_Time) AND ((" +
                "@IsNull_Last_IPL_Time = 1 AND [Last_IPL_Time] IS NULL) OR ([Last_IPL_Time] = @Or" +
                "iginal_Last_IPL_Time)) AND ((@IsNull_Last_CpuReset_Time = 1 AND [Last_CpuReset_T" +
                "ime] IS NULL) OR ([Last_CpuReset_Time] = @Original_Last_CpuReset_Time)) AND ((@I" +
                "sNull_Sec_since_IPL = 1 AND [Sec_since_IPL] IS NULL) OR ([Sec_since_IPL] = @Orig" +
                "inal_Sec_since_IPL)) AND ((@IsNull_Sec_since_CpuReset = 1 AND [Sec_since_CpuRese" +
                "t] IS NULL) OR ([Sec_since_CpuReset] = @Original_Sec_since_CpuReset)) AND ((@IsN" +
                "ull_Cpu_ID = 1 AND [Cpu_ID] IS NULL) OR ([Cpu_ID] = @Original_Cpu_ID)) AND ((@Is" +
                "Null_Release = 1 AND [Release] IS NULL) OR ([Release] = @Original_Release)) AND " +
                "((@IsNull_Power_Sys_ID = 1 AND [Power_Sys_ID] IS NULL) OR ([Power_Sys_ID] = @Ori" +
                "ginal_Power_Sys_ID)) AND ((@IsNull_Power_Node = 1 AND [Power_Node] IS NULL) OR (" +
                "[Power_Node] = @Original_Power_Node)) AND ((@IsNull_European_Dates = 1 AND [Euro" +
                "pean_Dates] IS NULL) OR ([European_Dates] = @Original_European_Dates)) AND ((@Is" +
                "Null_Time_Zone_Offset = 1 AND [Time_Zone_Offset] IS NULL) OR ([Time_Zone_Offset]" +
                " = @Original_Time_Zone_Offset)) AND ((@IsNull_Nof_Cpus = 1 AND [Nof_Cpus] IS NUL" +
                "L) OR ([Nof_Cpus] = @Original_Nof_Cpus)) AND ((@IsNull_Nof_Active_Cpus = 1 AND [" +
                "Nof_Active_Cpus] IS NULL) OR ([Nof_Active_Cpus] = @Original_Nof_Active_Cpus)) AN" +
                "D ((@IsNull_Nof_Quiesced_Cpus = 1 AND [Nof_Quiesced_Cpus] IS NULL) OR ([Nof_Quie" +
                "sced_Cpus] = @Original_Nof_Quiesced_Cpus)) AND ((@IsNull_MaxNof_Tasks = 1 AND [M" +
                "axNof_Tasks] IS NULL) OR ([MaxNof_Tasks] = @Original_MaxNof_Tasks)) AND ((@IsNul" +
                "l_Nof_Active_Tasks = 1 AND [Nof_Active_Tasks] IS NULL) OR ([Nof_Active_Tasks] = " +
                "@Original_Nof_Active_Tasks)) AND ((@IsNull_MaxNof_Partitions = 1 AND [MaxNof_Par" +
                "titions] IS NULL) OR ([MaxNof_Partitions] = @Original_MaxNof_Partitions)) AND ((" +
                "@IsNull_Nof_Allocated_Partitions = 1 AND [Nof_Allocated_Partitions] IS NULL) OR " +
                "([Nof_Allocated_Partitions] = @Original_Nof_Allocated_Partitions)) AND ((@IsNull" +
                "_Nof_TCPIP_Stacks = 1 AND [Nof_TCPIP_Stacks] IS NULL) OR ([Nof_TCPIP_Stacks] = @" +
                "Original_Nof_TCPIP_Stacks)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Last_IPL_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Last_IPL_Time", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Last_IPL_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Last_IPL_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Last_CpuReset_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Last_CpuReset_Time", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Last_CpuReset_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Last_CpuReset_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Sec_since_IPL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sec_since_IPL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sec_since_IPL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sec_since_IPL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Sec_since_CpuReset", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sec_since_CpuReset", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sec_since_CpuReset", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sec_since_CpuReset", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Cpu_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cpu_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cpu_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cpu_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Release", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Release", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Release", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Release", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Power_Sys_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Power_Sys_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Power_Sys_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Power_Sys_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Power_Node", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Power_Node", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Power_Node", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Power_Node", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_European_Dates", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "European_Dates", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_European_Dates", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "European_Dates", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Time_Zone_Offset", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Time_Zone_Offset", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Time_Zone_Offset", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Time_Zone_Offset", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Nof_Cpus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_Cpus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nof_Cpus", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_Cpus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Nof_Active_Cpus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_Active_Cpus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nof_Active_Cpus", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_Active_Cpus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Nof_Quiesced_Cpus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_Quiesced_Cpus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nof_Quiesced_Cpus", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_Quiesced_Cpus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MaxNof_Tasks", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxNof_Tasks", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MaxNof_Tasks", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxNof_Tasks", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Nof_Active_Tasks", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_Active_Tasks", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nof_Active_Tasks", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_Active_Tasks", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MaxNof_Partitions", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxNof_Partitions", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MaxNof_Partitions", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxNof_Partitions", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Nof_Allocated_Partitions", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_Allocated_Partitions", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nof_Allocated_Partitions", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_Allocated_Partitions", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Nof_TCPIP_Stacks", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_TCPIP_Stacks", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nof_TCPIP_Stacks", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_TCPIP_Stacks", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[VSE_Summary] ([Poll_Time], [Last_IPL_Time], [Last_CpuReset_Time], [Sec_since_IPL], [Sec_since_CpuReset], [Cpu_ID], [Release], [Power_Sys_ID], [Power_Node], [European_Dates], [Time_Zone_Offset], [Nof_Cpus], [Nof_Active_Cpus], [Nof_Quiesced_Cpus], [MaxNof_Tasks], [Nof_Active_Tasks], [MaxNof_Partitions], [Nof_Allocated_Partitions], [Nof_TCPIP_Stacks]) VALUES (@Poll_Time, @Last_IPL_Time, @Last_CpuReset_Time, @Sec_since_IPL, @Sec_since_CpuReset, @Cpu_ID, @Release, @Power_Sys_ID, @Power_Node, @European_Dates, @Time_Zone_Offset, @Nof_Cpus, @Nof_Active_Cpus, @Nof_Quiesced_Cpus, @MaxNof_Tasks, @Nof_Active_Tasks, @MaxNof_Partitions, @Nof_Allocated_Partitions, @Nof_TCPIP_Stacks);
SELECT Poll_Time, Last_IPL_Time, Last_CpuReset_Time, Sec_since_IPL, Sec_since_CpuReset, Cpu_ID, Release, Power_Sys_ID, Power_Node, European_Dates, Time_Zone_Offset, Nof_Cpus, Nof_Active_Cpus, Nof_Quiesced_Cpus, MaxNof_Tasks, Nof_Active_Tasks, MaxNof_Partitions, Nof_Allocated_Partitions, Nof_TCPIP_Stacks FROM VSE_Summary WHERE (Poll_Time = @Poll_Time)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Last_IPL_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Last_IPL_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Last_CpuReset_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Last_CpuReset_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sec_since_IPL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sec_since_IPL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sec_since_CpuReset", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sec_since_CpuReset", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cpu_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cpu_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Release", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Release", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Power_Sys_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Power_Sys_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Power_Node", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Power_Node", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@European_Dates", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "European_Dates", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Time_Zone_Offset", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Time_Zone_Offset", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nof_Cpus", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_Cpus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nof_Active_Cpus", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_Active_Cpus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nof_Quiesced_Cpus", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_Quiesced_Cpus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxNof_Tasks", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxNof_Tasks", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nof_Active_Tasks", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_Active_Tasks", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxNof_Partitions", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxNof_Partitions", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nof_Allocated_Partitions", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_Allocated_Partitions", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nof_TCPIP_Stacks", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_TCPIP_Stacks", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[VSE_Summary] SET [Poll_Time] = @Poll_Time, [Last_IPL_Time] = @Last_" +
                "IPL_Time, [Last_CpuReset_Time] = @Last_CpuReset_Time, [Sec_since_IPL] = @Sec_sin" +
                "ce_IPL, [Sec_since_CpuReset] = @Sec_since_CpuReset, [Cpu_ID] = @Cpu_ID, [Release" +
                "] = @Release, [Power_Sys_ID] = @Power_Sys_ID, [Power_Node] = @Power_Node, [Europ" +
                "ean_Dates] = @European_Dates, [Time_Zone_Offset] = @Time_Zone_Offset, [Nof_Cpus]" +
                " = @Nof_Cpus, [Nof_Active_Cpus] = @Nof_Active_Cpus, [Nof_Quiesced_Cpus] = @Nof_Q" +
                "uiesced_Cpus, [MaxNof_Tasks] = @MaxNof_Tasks, [Nof_Active_Tasks] = @Nof_Active_T" +
                "asks, [MaxNof_Partitions] = @MaxNof_Partitions, [Nof_Allocated_Partitions] = @No" +
                "f_Allocated_Partitions, [Nof_TCPIP_Stacks] = @Nof_TCPIP_Stacks WHERE (([Poll_Tim" +
                "e] = @Original_Poll_Time) AND ((@IsNull_Last_IPL_Time = 1 AND [Last_IPL_Time] IS" +
                " NULL) OR ([Last_IPL_Time] = @Original_Last_IPL_Time)) AND ((@IsNull_Last_CpuRes" +
                "et_Time = 1 AND [Last_CpuReset_Time] IS NULL) OR ([Last_CpuReset_Time] = @Origin" +
                "al_Last_CpuReset_Time)) AND ((@IsNull_Sec_since_IPL = 1 AND [Sec_since_IPL] IS N" +
                "ULL) OR ([Sec_since_IPL] = @Original_Sec_since_IPL)) AND ((@IsNull_Sec_since_Cpu" +
                "Reset = 1 AND [Sec_since_CpuReset] IS NULL) OR ([Sec_since_CpuReset] = @Original" +
                "_Sec_since_CpuReset)) AND ((@IsNull_Cpu_ID = 1 AND [Cpu_ID] IS NULL) OR ([Cpu_ID" +
                "] = @Original_Cpu_ID)) AND ((@IsNull_Release = 1 AND [Release] IS NULL) OR ([Rel" +
                "ease] = @Original_Release)) AND ((@IsNull_Power_Sys_ID = 1 AND [Power_Sys_ID] IS" +
                " NULL) OR ([Power_Sys_ID] = @Original_Power_Sys_ID)) AND ((@IsNull_Power_Node = " +
                "1 AND [Power_Node] IS NULL) OR ([Power_Node] = @Original_Power_Node)) AND ((@IsN" +
                "ull_European_Dates = 1 AND [European_Dates] IS NULL) OR ([European_Dates] = @Ori" +
                "ginal_European_Dates)) AND ((@IsNull_Time_Zone_Offset = 1 AND [Time_Zone_Offset]" +
                " IS NULL) OR ([Time_Zone_Offset] = @Original_Time_Zone_Offset)) AND ((@IsNull_No" +
                "f_Cpus = 1 AND [Nof_Cpus] IS NULL) OR ([Nof_Cpus] = @Original_Nof_Cpus)) AND ((@" +
                "IsNull_Nof_Active_Cpus = 1 AND [Nof_Active_Cpus] IS NULL) OR ([Nof_Active_Cpus] " +
                "= @Original_Nof_Active_Cpus)) AND ((@IsNull_Nof_Quiesced_Cpus = 1 AND [Nof_Quies" +
                "ced_Cpus] IS NULL) OR ([Nof_Quiesced_Cpus] = @Original_Nof_Quiesced_Cpus)) AND (" +
                "(@IsNull_MaxNof_Tasks = 1 AND [MaxNof_Tasks] IS NULL) OR ([MaxNof_Tasks] = @Orig" +
                "inal_MaxNof_Tasks)) AND ((@IsNull_Nof_Active_Tasks = 1 AND [Nof_Active_Tasks] IS" +
                " NULL) OR ([Nof_Active_Tasks] = @Original_Nof_Active_Tasks)) AND ((@IsNull_MaxNo" +
                "f_Partitions = 1 AND [MaxNof_Partitions] IS NULL) OR ([MaxNof_Partitions] = @Ori" +
                "ginal_MaxNof_Partitions)) AND ((@IsNull_Nof_Allocated_Partitions = 1 AND [Nof_Al" +
                "located_Partitions] IS NULL) OR ([Nof_Allocated_Partitions] = @Original_Nof_Allo" +
                "cated_Partitions)) AND ((@IsNull_Nof_TCPIP_Stacks = 1 AND [Nof_TCPIP_Stacks] IS " +
                "NULL) OR ([Nof_TCPIP_Stacks] = @Original_Nof_TCPIP_Stacks)));\r\nSELECT Poll_Time," +
                " Last_IPL_Time, Last_CpuReset_Time, Sec_since_IPL, Sec_since_CpuReset, Cpu_ID, R" +
                "elease, Power_Sys_ID, Power_Node, European_Dates, Time_Zone_Offset, Nof_Cpus, No" +
                "f_Active_Cpus, Nof_Quiesced_Cpus, MaxNof_Tasks, Nof_Active_Tasks, MaxNof_Partiti" +
                "ons, Nof_Allocated_Partitions, Nof_TCPIP_Stacks FROM VSE_Summary WHERE (Poll_Tim" +
                "e = @Poll_Time)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Last_IPL_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Last_IPL_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Last_CpuReset_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Last_CpuReset_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sec_since_IPL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sec_since_IPL", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sec_since_CpuReset", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sec_since_CpuReset", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Cpu_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cpu_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Release", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Release", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Power_Sys_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Power_Sys_ID", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Power_Node", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Power_Node", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@European_Dates", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "European_Dates", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Time_Zone_Offset", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Time_Zone_Offset", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nof_Cpus", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_Cpus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nof_Active_Cpus", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_Active_Cpus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nof_Quiesced_Cpus", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_Quiesced_Cpus", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxNof_Tasks", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxNof_Tasks", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nof_Active_Tasks", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_Active_Tasks", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@MaxNof_Partitions", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxNof_Partitions", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nof_Allocated_Partitions", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_Allocated_Partitions", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nof_TCPIP_Stacks", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_TCPIP_Stacks", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Last_IPL_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Last_IPL_Time", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Last_IPL_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Last_IPL_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Last_CpuReset_Time", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Last_CpuReset_Time", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Last_CpuReset_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Last_CpuReset_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Sec_since_IPL", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sec_since_IPL", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sec_since_IPL", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sec_since_IPL", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Sec_since_CpuReset", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sec_since_CpuReset", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sec_since_CpuReset", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sec_since_CpuReset", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Cpu_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cpu_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Cpu_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Cpu_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Release", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Release", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Release", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Release", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Power_Sys_ID", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Power_Sys_ID", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Power_Sys_ID", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Power_Sys_ID", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Power_Node", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Power_Node", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Power_Node", global::System.Data.SqlDbType.Char, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Power_Node", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_European_Dates", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "European_Dates", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_European_Dates", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "European_Dates", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Time_Zone_Offset", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Time_Zone_Offset", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Time_Zone_Offset", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Time_Zone_Offset", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Nof_Cpus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_Cpus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nof_Cpus", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_Cpus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Nof_Active_Cpus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_Active_Cpus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nof_Active_Cpus", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_Active_Cpus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Nof_Quiesced_Cpus", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_Quiesced_Cpus", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nof_Quiesced_Cpus", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_Quiesced_Cpus", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MaxNof_Tasks", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxNof_Tasks", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MaxNof_Tasks", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxNof_Tasks", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Nof_Active_Tasks", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_Active_Tasks", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nof_Active_Tasks", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_Active_Tasks", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_MaxNof_Partitions", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxNof_Partitions", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_MaxNof_Partitions", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "MaxNof_Partitions", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Nof_Allocated_Partitions", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_Allocated_Partitions", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nof_Allocated_Partitions", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_Allocated_Partitions", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Nof_TCPIP_Stacks", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_TCPIP_Stacks", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nof_TCPIP_Stacks", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nof_TCPIP_Stacks", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=DANSDELL\\SQLEXPRESS;Initial Catalog=VseDb;Integrated Security=True";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[4];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Poll_Time, Last_IPL_Time, Last_CpuReset_Time, Sec_since_IPL, Sec_since_CpuReset, Cpu_ID, Release, Power_Sys_ID, Power_Node, European_Dates, Time_Zone_Offset, Nof_Cpus, Nof_Active_Cpus, Nof_Quiesced_Cpus, MaxNof_Tasks, Nof_Active_Tasks, MaxNof_Partitions, Nof_Allocated_Partitions, Nof_TCPIP_Stacks FROM dbo.VSE_Summary";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT     Poll_Time, Last_IPL_Time, Last_CpuReset_Time, Sec_since_IPL, Sec_since_CpuReset, Cpu_ID, Release, Power_Sys_ID, Power_Node, 
                      European_Dates, Time_Zone_Offset, Nof_Cpus, Nof_Active_Cpus, Nof_Quiesced_Cpus, MaxNof_Tasks, Nof_Active_Tasks, MaxNof_Partitions, 
                      Nof_Allocated_Partitions, Nof_TCPIP_Stacks
FROM         VSE_Summary
WHERE     (Poll_Time = @pollTime)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pollTime", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT     TOP (10) Poll_Time\r\nFROM         VSE_Summary\r\nWHERE     (Poll_Time > @" +
                "sessionStart)\r\nORDER BY Poll_Time DESC";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@sessionStart", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT     Poll_Time\r\nFROM         VSE_Summary\r\nWHERE     (Poll_Time >= @startTim" +
                "e) AND (Poll_Time <= @endTime)\r\nORDER BY Poll_Time";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@startTime", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[3].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@endTime", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(VseDbDataSet.VSE_SummaryDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual VseDbDataSet.VSE_SummaryDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            VseDbDataSet.VSE_SummaryDataTable dataTable = new VseDbDataSet.VSE_SummaryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(VseDbDataSet.VSE_SummaryDataTable dataTable, System.DateTime pollTime) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(pollTime));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual VseDbDataSet.VSE_SummaryDataTable GetDataBy(System.DateTime pollTime) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(pollTime));
            VseDbDataSet.VSE_SummaryDataTable dataTable = new VseDbDataSet.VSE_SummaryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByLast10(VseDbDataSet.VSE_SummaryDataTable dataTable, System.DateTime sessionStart) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(sessionStart));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual VseDbDataSet.VSE_SummaryDataTable GetDataByLast10(System.DateTime sessionStart) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(sessionStart));
            VseDbDataSet.VSE_SummaryDataTable dataTable = new VseDbDataSet.VSE_SummaryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillPollTimeBy(VseDbDataSet.VSE_SummaryDataTable dataTable, System.DateTime startTime, System.DateTime endTime) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(startTime));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(endTime));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual VseDbDataSet.VSE_SummaryDataTable GetPollTimeDataBy(System.DateTime startTime, System.DateTime endTime) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(startTime));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(endTime));
            VseDbDataSet.VSE_SummaryDataTable dataTable = new VseDbDataSet.VSE_SummaryDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet.VSE_SummaryDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet dataSet) {
            return this.Adapter.Update(dataSet, "VSE_Summary");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    System.DateTime Original_Poll_Time, 
                    global::System.Nullable<global::System.DateTime> Original_Last_IPL_Time, 
                    global::System.Nullable<global::System.DateTime> Original_Last_CpuReset_Time, 
                    global::System.Nullable<double> Original_Sec_since_IPL, 
                    global::System.Nullable<double> Original_Sec_since_CpuReset, 
                    string Original_Cpu_ID, 
                    string Original_Release, 
                    string Original_Power_Sys_ID, 
                    string Original_Power_Node, 
                    global::System.Nullable<bool> Original_European_Dates, 
                    global::System.Nullable<double> Original_Time_Zone_Offset, 
                    global::System.Nullable<double> Original_Nof_Cpus, 
                    global::System.Nullable<double> Original_Nof_Active_Cpus, 
                    global::System.Nullable<double> Original_Nof_Quiesced_Cpus, 
                    global::System.Nullable<double> Original_MaxNof_Tasks, 
                    global::System.Nullable<double> Original_Nof_Active_Tasks, 
                    global::System.Nullable<double> Original_MaxNof_Partitions, 
                    global::System.Nullable<double> Original_Nof_Allocated_Partitions, 
                    global::System.Nullable<double> Original_Nof_TCPIP_Stacks) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.DateTime)(Original_Poll_Time));
            if ((Original_Last_IPL_Time.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_Last_IPL_Time.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_Last_CpuReset_Time.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_Last_CpuReset_Time.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_Sec_since_IPL.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((double)(Original_Sec_since_IPL.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_Sec_since_CpuReset.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((double)(Original_Sec_since_CpuReset.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_Cpu_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_Cpu_ID));
            }
            if ((Original_Release == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_Release));
            }
            if ((Original_Power_Sys_ID == null)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((string)(Original_Power_Sys_ID));
            }
            if ((Original_Power_Node == null)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((string)(Original_Power_Node));
            }
            if ((Original_European_Dates.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((bool)(Original_European_Dates.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_Time_Zone_Offset.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((double)(Original_Time_Zone_Offset.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_Nof_Cpus.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((double)(Original_Nof_Cpus.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_Nof_Active_Cpus.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((double)(Original_Nof_Active_Cpus.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Original_Nof_Quiesced_Cpus.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[26].Value = ((double)(Original_Nof_Quiesced_Cpus.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Original_MaxNof_Tasks.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[28].Value = ((double)(Original_MaxNof_Tasks.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Original_Nof_Active_Tasks.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[30].Value = ((double)(Original_Nof_Active_Tasks.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Original_MaxNof_Partitions.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[32].Value = ((double)(Original_MaxNof_Partitions.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_Nof_Allocated_Partitions.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[34].Value = ((double)(Original_Nof_Allocated_Partitions.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_Nof_TCPIP_Stacks.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[36].Value = ((double)(Original_Nof_TCPIP_Stacks.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    System.DateTime Poll_Time, 
                    global::System.Nullable<global::System.DateTime> Last_IPL_Time, 
                    global::System.Nullable<global::System.DateTime> Last_CpuReset_Time, 
                    global::System.Nullable<double> Sec_since_IPL, 
                    global::System.Nullable<double> Sec_since_CpuReset, 
                    string Cpu_ID, 
                    string Release, 
                    string Power_Sys_ID, 
                    string Power_Node, 
                    global::System.Nullable<bool> European_Dates, 
                    global::System.Nullable<double> Time_Zone_Offset, 
                    global::System.Nullable<double> Nof_Cpus, 
                    global::System.Nullable<double> Nof_Active_Cpus, 
                    global::System.Nullable<double> Nof_Quiesced_Cpus, 
                    global::System.Nullable<double> MaxNof_Tasks, 
                    global::System.Nullable<double> Nof_Active_Tasks, 
                    global::System.Nullable<double> MaxNof_Partitions, 
                    global::System.Nullable<double> Nof_Allocated_Partitions, 
                    global::System.Nullable<double> Nof_TCPIP_Stacks) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(Poll_Time));
            if ((Last_IPL_Time.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(Last_IPL_Time.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Last_CpuReset_Time.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(Last_CpuReset_Time.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Sec_since_IPL.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(Sec_since_IPL.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Sec_since_CpuReset.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(Sec_since_CpuReset.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Cpu_ID == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(Cpu_ID));
            }
            if ((Release == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(Release));
            }
            if ((Power_Sys_ID == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Power_Sys_ID));
            }
            if ((Power_Node == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(Power_Node));
            }
            if ((European_Dates.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((bool)(European_Dates.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Time_Zone_Offset.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((double)(Time_Zone_Offset.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Nof_Cpus.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((double)(Nof_Cpus.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Nof_Active_Cpus.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((double)(Nof_Active_Cpus.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Nof_Quiesced_Cpus.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((double)(Nof_Quiesced_Cpus.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((MaxNof_Tasks.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((double)(MaxNof_Tasks.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Nof_Active_Tasks.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((double)(Nof_Active_Tasks.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((MaxNof_Partitions.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((double)(MaxNof_Partitions.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Nof_Allocated_Partitions.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((double)(Nof_Allocated_Partitions.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Nof_TCPIP_Stacks.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((double)(Nof_TCPIP_Stacks.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime Poll_Time, 
                    global::System.Nullable<global::System.DateTime> Last_IPL_Time, 
                    global::System.Nullable<global::System.DateTime> Last_CpuReset_Time, 
                    global::System.Nullable<double> Sec_since_IPL, 
                    global::System.Nullable<double> Sec_since_CpuReset, 
                    string Cpu_ID, 
                    string Release, 
                    string Power_Sys_ID, 
                    string Power_Node, 
                    global::System.Nullable<bool> European_Dates, 
                    global::System.Nullable<double> Time_Zone_Offset, 
                    global::System.Nullable<double> Nof_Cpus, 
                    global::System.Nullable<double> Nof_Active_Cpus, 
                    global::System.Nullable<double> Nof_Quiesced_Cpus, 
                    global::System.Nullable<double> MaxNof_Tasks, 
                    global::System.Nullable<double> Nof_Active_Tasks, 
                    global::System.Nullable<double> MaxNof_Partitions, 
                    global::System.Nullable<double> Nof_Allocated_Partitions, 
                    global::System.Nullable<double> Nof_TCPIP_Stacks, 
                    System.DateTime Original_Poll_Time, 
                    global::System.Nullable<global::System.DateTime> Original_Last_IPL_Time, 
                    global::System.Nullable<global::System.DateTime> Original_Last_CpuReset_Time, 
                    global::System.Nullable<double> Original_Sec_since_IPL, 
                    global::System.Nullable<double> Original_Sec_since_CpuReset, 
                    string Original_Cpu_ID, 
                    string Original_Release, 
                    string Original_Power_Sys_ID, 
                    string Original_Power_Node, 
                    global::System.Nullable<bool> Original_European_Dates, 
                    global::System.Nullable<double> Original_Time_Zone_Offset, 
                    global::System.Nullable<double> Original_Nof_Cpus, 
                    global::System.Nullable<double> Original_Nof_Active_Cpus, 
                    global::System.Nullable<double> Original_Nof_Quiesced_Cpus, 
                    global::System.Nullable<double> Original_MaxNof_Tasks, 
                    global::System.Nullable<double> Original_Nof_Active_Tasks, 
                    global::System.Nullable<double> Original_MaxNof_Partitions, 
                    global::System.Nullable<double> Original_Nof_Allocated_Partitions, 
                    global::System.Nullable<double> Original_Nof_TCPIP_Stacks) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(Poll_Time));
            if ((Last_IPL_Time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(Last_IPL_Time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Last_CpuReset_Time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(Last_CpuReset_Time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Sec_since_IPL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(Sec_since_IPL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Sec_since_CpuReset.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(Sec_since_CpuReset.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Cpu_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Cpu_ID));
            }
            if ((Release == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Release));
            }
            if ((Power_Sys_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Power_Sys_ID));
            }
            if ((Power_Node == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Power_Node));
            }
            if ((European_Dates.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((bool)(European_Dates.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Time_Zone_Offset.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(Time_Zone_Offset.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Nof_Cpus.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((double)(Nof_Cpus.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Nof_Active_Cpus.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((double)(Nof_Active_Cpus.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Nof_Quiesced_Cpus.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((double)(Nof_Quiesced_Cpus.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((MaxNof_Tasks.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(MaxNof_Tasks.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Nof_Active_Tasks.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((double)(Nof_Active_Tasks.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((MaxNof_Partitions.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((double)(MaxNof_Partitions.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Nof_Allocated_Partitions.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((double)(Nof_Allocated_Partitions.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Nof_TCPIP_Stacks.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((double)(Nof_TCPIP_Stacks.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(Original_Poll_Time));
            if ((Original_Last_IPL_Time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((System.DateTime)(Original_Last_IPL_Time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_Last_CpuReset_Time.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((System.DateTime)(Original_Last_CpuReset_Time.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_Sec_since_IPL.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((double)(Original_Sec_since_IPL.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_Sec_since_CpuReset.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((double)(Original_Sec_since_CpuReset.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_Cpu_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((string)(Original_Cpu_ID));
            }
            if ((Original_Release == null)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((string)(Original_Release));
            }
            if ((Original_Power_Sys_ID == null)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((string)(Original_Power_Sys_ID));
            }
            if ((Original_Power_Node == null)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((string)(Original_Power_Node));
            }
            if ((Original_European_Dates.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((bool)(Original_European_Dates.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Original_Time_Zone_Offset.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[39].Value = ((double)(Original_Time_Zone_Offset.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Original_Nof_Cpus.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[41].Value = ((double)(Original_Nof_Cpus.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_Nof_Active_Cpus.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[43].Value = ((double)(Original_Nof_Active_Cpus.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_Nof_Quiesced_Cpus.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[45].Value = ((double)(Original_Nof_Quiesced_Cpus.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_MaxNof_Tasks.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[47].Value = ((double)(Original_MaxNof_Tasks.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Original_Nof_Active_Tasks.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[49].Value = ((double)(Original_Nof_Active_Tasks.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_MaxNof_Partitions.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[51].Value = ((double)(Original_MaxNof_Partitions.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Original_Nof_Allocated_Partitions.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[53].Value = ((double)(Original_Nof_Allocated_Partitions.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Original_Nof_TCPIP_Stacks.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[55].Value = ((double)(Original_Nof_TCPIP_Stacks.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<global::System.DateTime> Last_IPL_Time, 
                    global::System.Nullable<global::System.DateTime> Last_CpuReset_Time, 
                    global::System.Nullable<double> Sec_since_IPL, 
                    global::System.Nullable<double> Sec_since_CpuReset, 
                    string Cpu_ID, 
                    string Release, 
                    string Power_Sys_ID, 
                    string Power_Node, 
                    global::System.Nullable<bool> European_Dates, 
                    global::System.Nullable<double> Time_Zone_Offset, 
                    global::System.Nullable<double> Nof_Cpus, 
                    global::System.Nullable<double> Nof_Active_Cpus, 
                    global::System.Nullable<double> Nof_Quiesced_Cpus, 
                    global::System.Nullable<double> MaxNof_Tasks, 
                    global::System.Nullable<double> Nof_Active_Tasks, 
                    global::System.Nullable<double> MaxNof_Partitions, 
                    global::System.Nullable<double> Nof_Allocated_Partitions, 
                    global::System.Nullable<double> Nof_TCPIP_Stacks, 
                    System.DateTime Original_Poll_Time, 
                    global::System.Nullable<global::System.DateTime> Original_Last_IPL_Time, 
                    global::System.Nullable<global::System.DateTime> Original_Last_CpuReset_Time, 
                    global::System.Nullable<double> Original_Sec_since_IPL, 
                    global::System.Nullable<double> Original_Sec_since_CpuReset, 
                    string Original_Cpu_ID, 
                    string Original_Release, 
                    string Original_Power_Sys_ID, 
                    string Original_Power_Node, 
                    global::System.Nullable<bool> Original_European_Dates, 
                    global::System.Nullable<double> Original_Time_Zone_Offset, 
                    global::System.Nullable<double> Original_Nof_Cpus, 
                    global::System.Nullable<double> Original_Nof_Active_Cpus, 
                    global::System.Nullable<double> Original_Nof_Quiesced_Cpus, 
                    global::System.Nullable<double> Original_MaxNof_Tasks, 
                    global::System.Nullable<double> Original_Nof_Active_Tasks, 
                    global::System.Nullable<double> Original_MaxNof_Partitions, 
                    global::System.Nullable<double> Original_Nof_Allocated_Partitions, 
                    global::System.Nullable<double> Original_Nof_TCPIP_Stacks) {
            return this.Update(Original_Poll_Time, Last_IPL_Time, Last_CpuReset_Time, Sec_since_IPL, Sec_since_CpuReset, Cpu_ID, Release, Power_Sys_ID, Power_Node, European_Dates, Time_Zone_Offset, Nof_Cpus, Nof_Active_Cpus, Nof_Quiesced_Cpus, MaxNof_Tasks, Nof_Active_Tasks, MaxNof_Partitions, Nof_Allocated_Partitions, Nof_TCPIP_Stacks, Original_Poll_Time, Original_Last_IPL_Time, Original_Last_CpuReset_Time, Original_Sec_since_IPL, Original_Sec_since_CpuReset, Original_Cpu_ID, Original_Release, Original_Power_Sys_ID, Original_Power_Node, Original_European_Dates, Original_Time_Zone_Offset, Original_Nof_Cpus, Original_Nof_Active_Cpus, Original_Nof_Quiesced_Cpus, Original_MaxNof_Tasks, Original_Nof_Active_Tasks, Original_MaxNof_Partitions, Original_Nof_Allocated_Partitions, Original_Nof_TCPIP_Stacks);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ForeignIP_AllTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ForeignIP_AllTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ForeignIP_All";
            tableMapping.ColumnMappings.Add("Poll_Time", "Poll_Time");
            tableMapping.ColumnMappings.Add("IP_Address", "IP_Address");
            tableMapping.ColumnMappings.Add("Refuse_Flag", "Refuse_Flag");
            tableMapping.ColumnMappings.Add("Misdirected_IP_Datagrams", "Misdirected_IP_Datagrams");
            tableMapping.ColumnMappings.Add("NonIP_Datagrams", "NonIP_Datagrams");
            tableMapping.ColumnMappings.Add("ARP_Inbound_Datagrams", "ARP_Inbound_Datagrams");
            tableMapping.ColumnMappings.Add("ARP_Outbound_Datagrams", "ARP_Outbound_Datagrams");
            tableMapping.ColumnMappings.Add("ICMP_Inbound_Datagrams", "ICMP_Inbound_Datagrams");
            tableMapping.ColumnMappings.Add("ICMP_Outbound_Datagrams", "ICMP_Outbound_Datagrams");
            tableMapping.ColumnMappings.Add("IP_Inbound_Datagrams", "IP_Inbound_Datagrams");
            tableMapping.ColumnMappings.Add("IP_Outbound_Datagrams", "IP_Outbound_Datagrams");
            tableMapping.ColumnMappings.Add("TCP_Inbound_Datagrams", "TCP_Inbound_Datagrams");
            tableMapping.ColumnMappings.Add("TCP_Outbound_Datagrams", "TCP_Outbound_Datagrams");
            tableMapping.ColumnMappings.Add("UDP_Inbound_Datagrams", "UDP_Inbound_Datagrams");
            tableMapping.ColumnMappings.Add("UDP_Outbound_Datagrams", "UDP_Outbound_Datagrams");
            tableMapping.ColumnMappings.Add("Misdirected_IP_Bytes", "Misdirected_IP_Bytes");
            tableMapping.ColumnMappings.Add("NonIP_Bytes", "NonIP_Bytes");
            tableMapping.ColumnMappings.Add("ARP_Inbound_Bytes", "ARP_Inbound_Bytes");
            tableMapping.ColumnMappings.Add("ARP_Outbound_Bytes", "ARP_Outbound_Bytes");
            tableMapping.ColumnMappings.Add("ICMP_Inbound_Bytes", "ICMP_Inbound_Bytes");
            tableMapping.ColumnMappings.Add("ICMP_Outbound_Bytes", "ICMP_Outbound_Bytes");
            tableMapping.ColumnMappings.Add("IP_Inbound_Bytes", "IP_Inbound_Bytes");
            tableMapping.ColumnMappings.Add("IP_Outbound_Bytes", "IP_Outbound_Bytes");
            tableMapping.ColumnMappings.Add("TCP_Inbound_Bytes", "TCP_Inbound_Bytes");
            tableMapping.ColumnMappings.Add("TCP_Outbound_Bytes", "TCP_Outbound_Bytes");
            tableMapping.ColumnMappings.Add("UDP_Inbound_Bytes", "UDP_Inbound_Bytes");
            tableMapping.ColumnMappings.Add("UDP_Outbound_Bytes", "UDP_Outbound_Bytes");
            tableMapping.ColumnMappings.Add("Refused_Bytes", "Refused_Bytes");
            tableMapping.ColumnMappings.Add("Refused_Datagrams", "Refused_Datagrams");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[ForeignIP_All] WHERE (([Poll_Time] = @Original_Poll_Time) AND " +
                "([IP_Address] = @Original_IP_Address) AND ((@IsNull_Refuse_Flag = 1 AND [Refuse_" +
                "Flag] IS NULL) OR ([Refuse_Flag] = @Original_Refuse_Flag)) AND ((@IsNull_Misdire" +
                "cted_IP_Datagrams = 1 AND [Misdirected_IP_Datagrams] IS NULL) OR ([Misdirected_I" +
                "P_Datagrams] = @Original_Misdirected_IP_Datagrams)) AND ((@IsNull_NonIP_Datagram" +
                "s = 1 AND [NonIP_Datagrams] IS NULL) OR ([NonIP_Datagrams] = @Original_NonIP_Dat" +
                "agrams)) AND ((@IsNull_ARP_Inbound_Datagrams = 1 AND [ARP_Inbound_Datagrams] IS " +
                "NULL) OR ([ARP_Inbound_Datagrams] = @Original_ARP_Inbound_Datagrams)) AND ((@IsN" +
                "ull_ARP_Outbound_Datagrams = 1 AND [ARP_Outbound_Datagrams] IS NULL) OR ([ARP_Ou" +
                "tbound_Datagrams] = @Original_ARP_Outbound_Datagrams)) AND ((@IsNull_ICMP_Inboun" +
                "d_Datagrams = 1 AND [ICMP_Inbound_Datagrams] IS NULL) OR ([ICMP_Inbound_Datagram" +
                "s] = @Original_ICMP_Inbound_Datagrams)) AND ((@IsNull_ICMP_Outbound_Datagrams = " +
                "1 AND [ICMP_Outbound_Datagrams] IS NULL) OR ([ICMP_Outbound_Datagrams] = @Origin" +
                "al_ICMP_Outbound_Datagrams)) AND ((@IsNull_IP_Inbound_Datagrams = 1 AND [IP_Inbo" +
                "und_Datagrams] IS NULL) OR ([IP_Inbound_Datagrams] = @Original_IP_Inbound_Datagr" +
                "ams)) AND ((@IsNull_IP_Outbound_Datagrams = 1 AND [IP_Outbound_Datagrams] IS NUL" +
                "L) OR ([IP_Outbound_Datagrams] = @Original_IP_Outbound_Datagrams)) AND ((@IsNull" +
                "_TCP_Inbound_Datagrams = 1 AND [TCP_Inbound_Datagrams] IS NULL) OR ([TCP_Inbound" +
                "_Datagrams] = @Original_TCP_Inbound_Datagrams)) AND ((@IsNull_TCP_Outbound_Datag" +
                "rams = 1 AND [TCP_Outbound_Datagrams] IS NULL) OR ([TCP_Outbound_Datagrams] = @O" +
                "riginal_TCP_Outbound_Datagrams)) AND ((@IsNull_UDP_Inbound_Datagrams = 1 AND [UD" +
                "P_Inbound_Datagrams] IS NULL) OR ([UDP_Inbound_Datagrams] = @Original_UDP_Inboun" +
                "d_Datagrams)) AND ((@IsNull_UDP_Outbound_Datagrams = 1 AND [UDP_Outbound_Datagra" +
                "ms] IS NULL) OR ([UDP_Outbound_Datagrams] = @Original_UDP_Outbound_Datagrams)) A" +
                "ND ((@IsNull_Misdirected_IP_Bytes = 1 AND [Misdirected_IP_Bytes] IS NULL) OR ([M" +
                "isdirected_IP_Bytes] = @Original_Misdirected_IP_Bytes)) AND ((@IsNull_NonIP_Byte" +
                "s = 1 AND [NonIP_Bytes] IS NULL) OR ([NonIP_Bytes] = @Original_NonIP_Bytes)) AND" +
                " ((@IsNull_ARP_Inbound_Bytes = 1 AND [ARP_Inbound_Bytes] IS NULL) OR ([ARP_Inbou" +
                "nd_Bytes] = @Original_ARP_Inbound_Bytes)) AND ((@IsNull_ARP_Outbound_Bytes = 1 A" +
                "ND [ARP_Outbound_Bytes] IS NULL) OR ([ARP_Outbound_Bytes] = @Original_ARP_Outbou" +
                "nd_Bytes)) AND ((@IsNull_ICMP_Inbound_Bytes = 1 AND [ICMP_Inbound_Bytes] IS NULL" +
                ") OR ([ICMP_Inbound_Bytes] = @Original_ICMP_Inbound_Bytes)) AND ((@IsNull_ICMP_O" +
                "utbound_Bytes = 1 AND [ICMP_Outbound_Bytes] IS NULL) OR ([ICMP_Outbound_Bytes] =" +
                " @Original_ICMP_Outbound_Bytes)) AND ((@IsNull_IP_Inbound_Bytes = 1 AND [IP_Inbo" +
                "und_Bytes] IS NULL) OR ([IP_Inbound_Bytes] = @Original_IP_Inbound_Bytes)) AND ((" +
                "@IsNull_IP_Outbound_Bytes = 1 AND [IP_Outbound_Bytes] IS NULL) OR ([IP_Outbound_" +
                "Bytes] = @Original_IP_Outbound_Bytes)) AND ((@IsNull_TCP_Inbound_Bytes = 1 AND [" +
                "TCP_Inbound_Bytes] IS NULL) OR ([TCP_Inbound_Bytes] = @Original_TCP_Inbound_Byte" +
                "s)) AND ((@IsNull_TCP_Outbound_Bytes = 1 AND [TCP_Outbound_Bytes] IS NULL) OR ([" +
                "TCP_Outbound_Bytes] = @Original_TCP_Outbound_Bytes)) AND ((@IsNull_UDP_Inbound_B" +
                "ytes = 1 AND [UDP_Inbound_Bytes] IS NULL) OR ([UDP_Inbound_Bytes] = @Original_UD" +
                "P_Inbound_Bytes)) AND ((@IsNull_UDP_Outbound_Bytes = 1 AND [UDP_Outbound_Bytes] " +
                "IS NULL) OR ([UDP_Outbound_Bytes] = @Original_UDP_Outbound_Bytes)) AND ((@IsNull" +
                "_Refused_Bytes = 1 AND [Refused_Bytes] IS NULL) OR ([Refused_Bytes] = @Original_" +
                "Refused_Bytes)) AND ((@IsNull_Refused_Datagrams = 1 AND [Refused_Datagrams] IS N" +
                "ULL) OR ([Refused_Datagrams] = @Original_Refused_Datagrams)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Refuse_Flag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Refuse_Flag", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Refuse_Flag", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Refuse_Flag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Misdirected_IP_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Misdirected_IP_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Misdirected_IP_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Misdirected_IP_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NonIP_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NonIP_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NonIP_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NonIP_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ARP_Inbound_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Inbound_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ARP_Inbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Inbound_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ARP_Outbound_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Outbound_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ARP_Outbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Outbound_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ICMP_Inbound_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Inbound_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ICMP_Inbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Inbound_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ICMP_Outbound_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Outbound_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ICMP_Outbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Outbound_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP_Inbound_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Inbound_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP_Inbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Inbound_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP_Outbound_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Outbound_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP_Outbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Outbound_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TCP_Inbound_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Inbound_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TCP_Inbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Inbound_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TCP_Outbound_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Outbound_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TCP_Outbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Outbound_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UDP_Inbound_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Inbound_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UDP_Inbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Inbound_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UDP_Outbound_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Outbound_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UDP_Outbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Outbound_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Misdirected_IP_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Misdirected_IP_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Misdirected_IP_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Misdirected_IP_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NonIP_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NonIP_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NonIP_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NonIP_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ARP_Inbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Inbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ARP_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Inbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ARP_Outbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Outbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ARP_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Outbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ICMP_Inbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Inbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ICMP_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Inbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ICMP_Outbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Outbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ICMP_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Outbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP_Inbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Inbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Inbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP_Outbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Outbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Outbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TCP_Inbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Inbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TCP_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Inbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TCP_Outbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Outbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TCP_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Outbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UDP_Inbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Inbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UDP_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Inbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UDP_Outbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Outbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UDP_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Outbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Refused_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Refused_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Refused_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Refused_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Refused_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Refused_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Refused_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Refused_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[ForeignIP_All] ([Poll_Time], [IP_Address], [Refuse_Flag], [Mis" +
                "directed_IP_Datagrams], [NonIP_Datagrams], [ARP_Inbound_Datagrams], [ARP_Outboun" +
                "d_Datagrams], [ICMP_Inbound_Datagrams], [ICMP_Outbound_Datagrams], [IP_Inbound_D" +
                "atagrams], [IP_Outbound_Datagrams], [TCP_Inbound_Datagrams], [TCP_Outbound_Datag" +
                "rams], [UDP_Inbound_Datagrams], [UDP_Outbound_Datagrams], [Misdirected_IP_Bytes]" +
                ", [NonIP_Bytes], [ARP_Inbound_Bytes], [ARP_Outbound_Bytes], [ICMP_Inbound_Bytes]" +
                ", [ICMP_Outbound_Bytes], [IP_Inbound_Bytes], [IP_Outbound_Bytes], [TCP_Inbound_B" +
                "ytes], [TCP_Outbound_Bytes], [UDP_Inbound_Bytes], [UDP_Outbound_Bytes], [Refused" +
                "_Bytes], [Refused_Datagrams]) VALUES (@Poll_Time, @IP_Address, @Refuse_Flag, @Mi" +
                "sdirected_IP_Datagrams, @NonIP_Datagrams, @ARP_Inbound_Datagrams, @ARP_Outbound_" +
                "Datagrams, @ICMP_Inbound_Datagrams, @ICMP_Outbound_Datagrams, @IP_Inbound_Datagr" +
                "ams, @IP_Outbound_Datagrams, @TCP_Inbound_Datagrams, @TCP_Outbound_Datagrams, @U" +
                "DP_Inbound_Datagrams, @UDP_Outbound_Datagrams, @Misdirected_IP_Bytes, @NonIP_Byt" +
                "es, @ARP_Inbound_Bytes, @ARP_Outbound_Bytes, @ICMP_Inbound_Bytes, @ICMP_Outbound" +
                "_Bytes, @IP_Inbound_Bytes, @IP_Outbound_Bytes, @TCP_Inbound_Bytes, @TCP_Outbound" +
                "_Bytes, @UDP_Inbound_Bytes, @UDP_Outbound_Bytes, @Refused_Bytes, @Refused_Datagr" +
                "ams);\r\nSELECT Poll_Time, IP_Address, Refuse_Flag, Misdirected_IP_Datagrams, NonI" +
                "P_Datagrams, ARP_Inbound_Datagrams, ARP_Outbound_Datagrams, ICMP_Inbound_Datagra" +
                "ms, ICMP_Outbound_Datagrams, IP_Inbound_Datagrams, IP_Outbound_Datagrams, TCP_In" +
                "bound_Datagrams, TCP_Outbound_Datagrams, UDP_Inbound_Datagrams, UDP_Outbound_Dat" +
                "agrams, Misdirected_IP_Bytes, NonIP_Bytes, ARP_Inbound_Bytes, ARP_Outbound_Bytes" +
                ", ICMP_Inbound_Bytes, ICMP_Outbound_Bytes, IP_Inbound_Bytes, IP_Outbound_Bytes, " +
                "TCP_Inbound_Bytes, TCP_Outbound_Bytes, UDP_Inbound_Bytes, UDP_Outbound_Bytes, Re" +
                "fused_Bytes, Refused_Datagrams FROM ForeignIP_All WHERE (IP_Address = @IP_Addres" +
                "s) AND (Poll_Time = @Poll_Time)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Refuse_Flag", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Refuse_Flag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Misdirected_IP_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Misdirected_IP_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NonIP_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NonIP_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ARP_Inbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Inbound_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ARP_Outbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Outbound_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ICMP_Inbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Inbound_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ICMP_Outbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Outbound_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP_Inbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Inbound_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP_Outbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Outbound_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TCP_Inbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Inbound_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TCP_Outbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Outbound_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UDP_Inbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Inbound_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UDP_Outbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Outbound_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Misdirected_IP_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Misdirected_IP_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NonIP_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NonIP_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ARP_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Inbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ARP_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Outbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ICMP_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Inbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ICMP_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Outbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Inbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Outbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TCP_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Inbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TCP_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Outbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UDP_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Inbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UDP_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Outbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Refused_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Refused_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Refused_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Refused_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[ForeignIP_All] SET [Poll_Time] = @Poll_Time, [IP_Address] = @IP_Add" +
                "ress, [Refuse_Flag] = @Refuse_Flag, [Misdirected_IP_Datagrams] = @Misdirected_IP" +
                "_Datagrams, [NonIP_Datagrams] = @NonIP_Datagrams, [ARP_Inbound_Datagrams] = @ARP" +
                "_Inbound_Datagrams, [ARP_Outbound_Datagrams] = @ARP_Outbound_Datagrams, [ICMP_In" +
                "bound_Datagrams] = @ICMP_Inbound_Datagrams, [ICMP_Outbound_Datagrams] = @ICMP_Ou" +
                "tbound_Datagrams, [IP_Inbound_Datagrams] = @IP_Inbound_Datagrams, [IP_Outbound_D" +
                "atagrams] = @IP_Outbound_Datagrams, [TCP_Inbound_Datagrams] = @TCP_Inbound_Datag" +
                "rams, [TCP_Outbound_Datagrams] = @TCP_Outbound_Datagrams, [UDP_Inbound_Datagrams" +
                "] = @UDP_Inbound_Datagrams, [UDP_Outbound_Datagrams] = @UDP_Outbound_Datagrams, " +
                "[Misdirected_IP_Bytes] = @Misdirected_IP_Bytes, [NonIP_Bytes] = @NonIP_Bytes, [A" +
                "RP_Inbound_Bytes] = @ARP_Inbound_Bytes, [ARP_Outbound_Bytes] = @ARP_Outbound_Byt" +
                "es, [ICMP_Inbound_Bytes] = @ICMP_Inbound_Bytes, [ICMP_Outbound_Bytes] = @ICMP_Ou" +
                "tbound_Bytes, [IP_Inbound_Bytes] = @IP_Inbound_Bytes, [IP_Outbound_Bytes] = @IP_" +
                "Outbound_Bytes, [TCP_Inbound_Bytes] = @TCP_Inbound_Bytes, [TCP_Outbound_Bytes] =" +
                " @TCP_Outbound_Bytes, [UDP_Inbound_Bytes] = @UDP_Inbound_Bytes, [UDP_Outbound_By" +
                "tes] = @UDP_Outbound_Bytes, [Refused_Bytes] = @Refused_Bytes, [Refused_Datagrams" +
                "] = @Refused_Datagrams WHERE (([Poll_Time] = @Original_Poll_Time) AND ([IP_Addre" +
                "ss] = @Original_IP_Address) AND ((@IsNull_Refuse_Flag = 1 AND [Refuse_Flag] IS N" +
                "ULL) OR ([Refuse_Flag] = @Original_Refuse_Flag)) AND ((@IsNull_Misdirected_IP_Da" +
                "tagrams = 1 AND [Misdirected_IP_Datagrams] IS NULL) OR ([Misdirected_IP_Datagram" +
                "s] = @Original_Misdirected_IP_Datagrams)) AND ((@IsNull_NonIP_Datagrams = 1 AND " +
                "[NonIP_Datagrams] IS NULL) OR ([NonIP_Datagrams] = @Original_NonIP_Datagrams)) A" +
                "ND ((@IsNull_ARP_Inbound_Datagrams = 1 AND [ARP_Inbound_Datagrams] IS NULL) OR (" +
                "[ARP_Inbound_Datagrams] = @Original_ARP_Inbound_Datagrams)) AND ((@IsNull_ARP_Ou" +
                "tbound_Datagrams = 1 AND [ARP_Outbound_Datagrams] IS NULL) OR ([ARP_Outbound_Dat" +
                "agrams] = @Original_ARP_Outbound_Datagrams)) AND ((@IsNull_ICMP_Inbound_Datagram" +
                "s = 1 AND [ICMP_Inbound_Datagrams] IS NULL) OR ([ICMP_Inbound_Datagrams] = @Orig" +
                "inal_ICMP_Inbound_Datagrams)) AND ((@IsNull_ICMP_Outbound_Datagrams = 1 AND [ICM" +
                "P_Outbound_Datagrams] IS NULL) OR ([ICMP_Outbound_Datagrams] = @Original_ICMP_Ou" +
                "tbound_Datagrams)) AND ((@IsNull_IP_Inbound_Datagrams = 1 AND [IP_Inbound_Datagr" +
                "ams] IS NULL) OR ([IP_Inbound_Datagrams] = @Original_IP_Inbound_Datagrams)) AND " +
                "((@IsNull_IP_Outbound_Datagrams = 1 AND [IP_Outbound_Datagrams] IS NULL) OR ([IP" +
                "_Outbound_Datagrams] = @Original_IP_Outbound_Datagrams)) AND ((@IsNull_TCP_Inbou" +
                "nd_Datagrams = 1 AND [TCP_Inbound_Datagrams] IS NULL) OR ([TCP_Inbound_Datagrams" +
                "] = @Original_TCP_Inbound_Datagrams)) AND ((@IsNull_TCP_Outbound_Datagrams = 1 A" +
                "ND [TCP_Outbound_Datagrams] IS NULL) OR ([TCP_Outbound_Datagrams] = @Original_TC" +
                "P_Outbound_Datagrams)) AND ((@IsNull_UDP_Inbound_Datagrams = 1 AND [UDP_Inbound_" +
                "Datagrams] IS NULL) OR ([UDP_Inbound_Datagrams] = @Original_UDP_Inbound_Datagram" +
                "s)) AND ((@IsNull_UDP_Outbound_Datagrams = 1 AND [UDP_Outbound_Datagrams] IS NUL" +
                "L) OR ([UDP_Outbound_Datagrams] = @Original_UDP_Outbound_Datagrams)) AND ((@IsNu" +
                "ll_Misdirected_IP_Bytes = 1 AND [Misdirected_IP_Bytes] IS NULL) OR ([Misdirected" +
                "_IP_Bytes] = @Original_Misdirected_IP_Bytes)) AND ((@IsNull_NonIP_Bytes = 1 AND " +
                "[NonIP_Bytes] IS NULL) OR ([NonIP_Bytes] = @Original_NonIP_Bytes)) AND ((@IsNull" +
                "_ARP_Inbound_Bytes = 1 AND [ARP_Inbound_Bytes] IS NULL) OR ([ARP_Inbound_Bytes] " +
                "= @Original_ARP_Inbound_Bytes)) AND ((@IsNull_ARP_Outbound_Bytes = 1 AND [ARP_Ou" +
                "tbound_Bytes] IS NULL) OR ([ARP_Outbound_Bytes] = @Original_ARP_Outbound_Bytes))" +
                " AND ((@IsNull_ICMP_Inbound_Bytes = 1 AND [ICMP_Inbound_Bytes] IS NULL) OR ([ICM" +
                "P_Inbound_Bytes] = @Original_ICMP_Inbound_Bytes)) AND ((@IsNull_ICMP_Outbound_By" +
                "tes = 1 AND [ICMP_Outbound_Bytes] IS NULL) OR ([ICMP_Outbound_Bytes] = @Original" +
                "_ICMP_Outbound_Bytes)) AND ((@IsNull_IP_Inbound_Bytes = 1 AND [IP_Inbound_Bytes]" +
                " IS NULL) OR ([IP_Inbound_Bytes] = @Original_IP_Inbound_Bytes)) AND ((@IsNull_IP" +
                "_Outbound_Bytes = 1 AND [IP_Outbound_Bytes] IS NULL) OR ([IP_Outbound_Bytes] = @" +
                "Original_IP_Outbound_Bytes)) AND ((@IsNull_TCP_Inbound_Bytes = 1 AND [TCP_Inboun" +
                "d_Bytes] IS NULL) OR ([TCP_Inbound_Bytes] = @Original_TCP_Inbound_Bytes)) AND ((" +
                "@IsNull_TCP_Outbound_Bytes = 1 AND [TCP_Outbound_Bytes] IS NULL) OR ([TCP_Outbou" +
                "nd_Bytes] = @Original_TCP_Outbound_Bytes)) AND ((@IsNull_UDP_Inbound_Bytes = 1 A" +
                "ND [UDP_Inbound_Bytes] IS NULL) OR ([UDP_Inbound_Bytes] = @Original_UDP_Inbound_" +
                "Bytes)) AND ((@IsNull_UDP_Outbound_Bytes = 1 AND [UDP_Outbound_Bytes] IS NULL) O" +
                "R ([UDP_Outbound_Bytes] = @Original_UDP_Outbound_Bytes)) AND ((@IsNull_Refused_B" +
                "ytes = 1 AND [Refused_Bytes] IS NULL) OR ([Refused_Bytes] = @Original_Refused_By" +
                "tes)) AND ((@IsNull_Refused_Datagrams = 1 AND [Refused_Datagrams] IS NULL) OR ([" +
                "Refused_Datagrams] = @Original_Refused_Datagrams)));\r\nSELECT Poll_Time, IP_Addre" +
                "ss, Refuse_Flag, Misdirected_IP_Datagrams, NonIP_Datagrams, ARP_Inbound_Datagram" +
                "s, ARP_Outbound_Datagrams, ICMP_Inbound_Datagrams, ICMP_Outbound_Datagrams, IP_I" +
                "nbound_Datagrams, IP_Outbound_Datagrams, TCP_Inbound_Datagrams, TCP_Outbound_Dat" +
                "agrams, UDP_Inbound_Datagrams, UDP_Outbound_Datagrams, Misdirected_IP_Bytes, Non" +
                "IP_Bytes, ARP_Inbound_Bytes, ARP_Outbound_Bytes, ICMP_Inbound_Bytes, ICMP_Outbou" +
                "nd_Bytes, IP_Inbound_Bytes, IP_Outbound_Bytes, TCP_Inbound_Bytes, TCP_Outbound_B" +
                "ytes, UDP_Inbound_Bytes, UDP_Outbound_Bytes, Refused_Bytes, Refused_Datagrams FR" +
                "OM ForeignIP_All WHERE (IP_Address = @IP_Address) AND (Poll_Time = @Poll_Time)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Address", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Refuse_Flag", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Refuse_Flag", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Misdirected_IP_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Misdirected_IP_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NonIP_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NonIP_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ARP_Inbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Inbound_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ARP_Outbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Outbound_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ICMP_Inbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Inbound_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ICMP_Outbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Outbound_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP_Inbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Inbound_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP_Outbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Outbound_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TCP_Inbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Inbound_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TCP_Outbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Outbound_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UDP_Inbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Inbound_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UDP_Outbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Outbound_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Misdirected_IP_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Misdirected_IP_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NonIP_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NonIP_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ARP_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Inbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ARP_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Outbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ICMP_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Inbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ICMP_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Outbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Inbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IP_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Outbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TCP_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Inbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TCP_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Outbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UDP_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Inbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@UDP_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Outbound_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Refused_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Refused_Bytes", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Refused_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Refused_Datagrams", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Poll_Time", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP_Address", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Address", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Refuse_Flag", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Refuse_Flag", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Refuse_Flag", global::System.Data.SqlDbType.Bit, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Refuse_Flag", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Misdirected_IP_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Misdirected_IP_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Misdirected_IP_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Misdirected_IP_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NonIP_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NonIP_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NonIP_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NonIP_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ARP_Inbound_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Inbound_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ARP_Inbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Inbound_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ARP_Outbound_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Outbound_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ARP_Outbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Outbound_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ICMP_Inbound_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Inbound_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ICMP_Inbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Inbound_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ICMP_Outbound_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Outbound_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ICMP_Outbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Outbound_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP_Inbound_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Inbound_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP_Inbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Inbound_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP_Outbound_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Outbound_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP_Outbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Outbound_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TCP_Inbound_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Inbound_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TCP_Inbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Inbound_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TCP_Outbound_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Outbound_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TCP_Outbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Outbound_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UDP_Inbound_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Inbound_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UDP_Inbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Inbound_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UDP_Outbound_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Outbound_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UDP_Outbound_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Outbound_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Misdirected_IP_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Misdirected_IP_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Misdirected_IP_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Misdirected_IP_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_NonIP_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NonIP_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NonIP_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NonIP_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ARP_Inbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Inbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ARP_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Inbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ARP_Outbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Outbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ARP_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ARP_Outbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ICMP_Inbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Inbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ICMP_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Inbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ICMP_Outbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Outbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ICMP_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ICMP_Outbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP_Inbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Inbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Inbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_IP_Outbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Outbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_IP_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "IP_Outbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TCP_Inbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Inbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TCP_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Inbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_TCP_Outbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Outbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TCP_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TCP_Outbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UDP_Inbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Inbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UDP_Inbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Inbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_UDP_Outbound_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Outbound_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_UDP_Outbound_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "UDP_Outbound_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Refused_Bytes", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Refused_Bytes", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Refused_Bytes", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Refused_Bytes", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Refused_Datagrams", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Refused_Datagrams", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Refused_Datagrams", global::System.Data.SqlDbType.Float, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Refused_Datagrams", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=DANSDELL\\SQLEXPRESS;Initial Catalog=VseDb;Integrated Security=True";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[2];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT Poll_Time, IP_Address, Refuse_Flag, Misdirected_IP_Datagrams, NonIP_Datagrams, ARP_Inbound_Datagrams, ARP_Outbound_Datagrams, ICMP_Inbound_Datagrams, ICMP_Outbound_Datagrams, IP_Inbound_Datagrams, IP_Outbound_Datagrams, TCP_Inbound_Datagrams, TCP_Outbound_Datagrams, UDP_Inbound_Datagrams, UDP_Outbound_Datagrams, Misdirected_IP_Bytes, NonIP_Bytes, ARP_Inbound_Bytes, ARP_Outbound_Bytes, ICMP_Inbound_Bytes, ICMP_Outbound_Bytes, IP_Inbound_Bytes, IP_Outbound_Bytes, TCP_Inbound_Bytes, TCP_Outbound_Bytes, UDP_Inbound_Bytes, UDP_Outbound_Bytes, Refused_Bytes, Refused_Datagrams FROM dbo.ForeignIP_All";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT     Poll_Time, IP_Address, Refuse_Flag, Misdirected_IP_Datagrams, NonIP_Datagrams, ARP_Inbound_Datagrams, ARP_Outbound_Datagrams, 
                      ICMP_Inbound_Datagrams, ICMP_Outbound_Datagrams, IP_Inbound_Datagrams, IP_Outbound_Datagrams, TCP_Inbound_Datagrams, 
                      TCP_Outbound_Datagrams, UDP_Inbound_Datagrams, UDP_Outbound_Datagrams, Misdirected_IP_Bytes, NonIP_Bytes, ARP_Inbound_Bytes, 
                      ARP_Outbound_Bytes, ICMP_Inbound_Bytes, ICMP_Outbound_Bytes, IP_Inbound_Bytes, IP_Outbound_Bytes, TCP_Inbound_Bytes, 
                      TCP_Outbound_Bytes, UDP_Inbound_Bytes, UDP_Outbound_Bytes, Refused_Bytes, Refused_Datagrams
FROM         ForeignIP_All
WHERE     (Poll_Time = @startTime)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@startTime", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(VseDbDataSet.ForeignIP_AllDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual VseDbDataSet.ForeignIP_AllDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            VseDbDataSet.ForeignIP_AllDataTable dataTable = new VseDbDataSet.ForeignIP_AllDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(VseDbDataSet.ForeignIP_AllDataTable dataTable, System.DateTime startTime) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(startTime));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual VseDbDataSet.ForeignIP_AllDataTable GetDataBy(System.DateTime startTime) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(startTime));
            VseDbDataSet.ForeignIP_AllDataTable dataTable = new VseDbDataSet.ForeignIP_AllDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet.ForeignIP_AllDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(VseDbDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ForeignIP_All");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(
                    System.DateTime Original_Poll_Time, 
                    string Original_IP_Address, 
                    global::System.Nullable<bool> Original_Refuse_Flag, 
                    global::System.Nullable<double> Original_Misdirected_IP_Datagrams, 
                    global::System.Nullable<double> Original_NonIP_Datagrams, 
                    global::System.Nullable<double> Original_ARP_Inbound_Datagrams, 
                    global::System.Nullable<double> Original_ARP_Outbound_Datagrams, 
                    global::System.Nullable<double> Original_ICMP_Inbound_Datagrams, 
                    global::System.Nullable<double> Original_ICMP_Outbound_Datagrams, 
                    global::System.Nullable<double> Original_IP_Inbound_Datagrams, 
                    global::System.Nullable<double> Original_IP_Outbound_Datagrams, 
                    global::System.Nullable<double> Original_TCP_Inbound_Datagrams, 
                    global::System.Nullable<double> Original_TCP_Outbound_Datagrams, 
                    global::System.Nullable<double> Original_UDP_Inbound_Datagrams, 
                    global::System.Nullable<double> Original_UDP_Outbound_Datagrams, 
                    global::System.Nullable<double> Original_Misdirected_IP_Bytes, 
                    global::System.Nullable<double> Original_NonIP_Bytes, 
                    global::System.Nullable<double> Original_ARP_Inbound_Bytes, 
                    global::System.Nullable<double> Original_ARP_Outbound_Bytes, 
                    global::System.Nullable<double> Original_ICMP_Inbound_Bytes, 
                    global::System.Nullable<double> Original_ICMP_Outbound_Bytes, 
                    global::System.Nullable<double> Original_IP_Inbound_Bytes, 
                    global::System.Nullable<double> Original_IP_Outbound_Bytes, 
                    global::System.Nullable<double> Original_TCP_Inbound_Bytes, 
                    global::System.Nullable<double> Original_TCP_Outbound_Bytes, 
                    global::System.Nullable<double> Original_UDP_Inbound_Bytes, 
                    global::System.Nullable<double> Original_UDP_Outbound_Bytes, 
                    global::System.Nullable<double> Original_Refused_Bytes, 
                    global::System.Nullable<double> Original_Refused_Datagrams) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((System.DateTime)(Original_Poll_Time));
            if ((Original_IP_Address == null)) {
                throw new global::System.ArgumentNullException("Original_IP_Address");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_IP_Address));
            }
            if ((Original_Refuse_Flag.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((bool)(Original_Refuse_Flag.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_Misdirected_IP_Datagrams.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((double)(Original_Misdirected_IP_Datagrams.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_NonIP_Datagrams.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((double)(Original_NonIP_Datagrams.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_ARP_Inbound_Datagrams.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((double)(Original_ARP_Inbound_Datagrams.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_ARP_Outbound_Datagrams.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((double)(Original_ARP_Outbound_Datagrams.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_ICMP_Inbound_Datagrams.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((double)(Original_ICMP_Inbound_Datagrams.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_ICMP_Outbound_Datagrams.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((double)(Original_ICMP_Outbound_Datagrams.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_IP_Inbound_Datagrams.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((double)(Original_IP_Inbound_Datagrams.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((Original_IP_Outbound_Datagrams.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((double)(Original_IP_Outbound_Datagrams.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_TCP_Inbound_Datagrams.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((double)(Original_TCP_Inbound_Datagrams.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_TCP_Outbound_Datagrams.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((double)(Original_TCP_Outbound_Datagrams.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_UDP_Inbound_Datagrams.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((double)(Original_UDP_Inbound_Datagrams.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Original_UDP_Outbound_Datagrams.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((double)(Original_UDP_Outbound_Datagrams.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_Misdirected_IP_Bytes.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[29].Value = ((double)(Original_Misdirected_IP_Bytes.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_NonIP_Bytes.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[31].Value = ((double)(Original_NonIP_Bytes.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_ARP_Inbound_Bytes.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[33].Value = ((double)(Original_ARP_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Original_ARP_Outbound_Bytes.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[35].Value = ((double)(Original_ARP_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_ICMP_Inbound_Bytes.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[37].Value = ((double)(Original_ICMP_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((Original_ICMP_Outbound_Bytes.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[39].Value = ((double)(Original_ICMP_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[38].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Original_IP_Inbound_Bytes.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[41].Value = ((double)(Original_IP_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[40].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Original_IP_Outbound_Bytes.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[43].Value = ((double)(Original_IP_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[42].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((Original_TCP_Inbound_Bytes.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[45].Value = ((double)(Original_TCP_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[44].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((Original_TCP_Outbound_Bytes.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[47].Value = ((double)(Original_TCP_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[46].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((Original_UDP_Inbound_Bytes.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[49].Value = ((double)(Original_UDP_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[48].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((Original_UDP_Outbound_Bytes.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[51].Value = ((double)(Original_UDP_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[50].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((Original_Refused_Bytes.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[53].Value = ((double)(Original_Refused_Bytes.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[52].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[53].Value = global::System.DBNull.Value;
            }
            if ((Original_Refused_Datagrams.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[55].Value = ((double)(Original_Refused_Datagrams.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[54].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[55].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    System.DateTime Poll_Time, 
                    string IP_Address, 
                    global::System.Nullable<bool> Refuse_Flag, 
                    global::System.Nullable<double> Misdirected_IP_Datagrams, 
                    global::System.Nullable<double> NonIP_Datagrams, 
                    global::System.Nullable<double> ARP_Inbound_Datagrams, 
                    global::System.Nullable<double> ARP_Outbound_Datagrams, 
                    global::System.Nullable<double> ICMP_Inbound_Datagrams, 
                    global::System.Nullable<double> ICMP_Outbound_Datagrams, 
                    global::System.Nullable<double> IP_Inbound_Datagrams, 
                    global::System.Nullable<double> IP_Outbound_Datagrams, 
                    global::System.Nullable<double> TCP_Inbound_Datagrams, 
                    global::System.Nullable<double> TCP_Outbound_Datagrams, 
                    global::System.Nullable<double> UDP_Inbound_Datagrams, 
                    global::System.Nullable<double> UDP_Outbound_Datagrams, 
                    global::System.Nullable<double> Misdirected_IP_Bytes, 
                    global::System.Nullable<double> NonIP_Bytes, 
                    global::System.Nullable<double> ARP_Inbound_Bytes, 
                    global::System.Nullable<double> ARP_Outbound_Bytes, 
                    global::System.Nullable<double> ICMP_Inbound_Bytes, 
                    global::System.Nullable<double> ICMP_Outbound_Bytes, 
                    global::System.Nullable<double> IP_Inbound_Bytes, 
                    global::System.Nullable<double> IP_Outbound_Bytes, 
                    global::System.Nullable<double> TCP_Inbound_Bytes, 
                    global::System.Nullable<double> TCP_Outbound_Bytes, 
                    global::System.Nullable<double> UDP_Inbound_Bytes, 
                    global::System.Nullable<double> UDP_Outbound_Bytes, 
                    global::System.Nullable<double> Refused_Bytes, 
                    global::System.Nullable<double> Refused_Datagrams) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((System.DateTime)(Poll_Time));
            if ((IP_Address == null)) {
                throw new global::System.ArgumentNullException("IP_Address");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(IP_Address));
            }
            if ((Refuse_Flag.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((bool)(Refuse_Flag.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Misdirected_IP_Datagrams.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((double)(Misdirected_IP_Datagrams.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((NonIP_Datagrams.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((double)(NonIP_Datagrams.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ARP_Inbound_Datagrams.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((double)(ARP_Inbound_Datagrams.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ARP_Outbound_Datagrams.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((double)(ARP_Outbound_Datagrams.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((ICMP_Inbound_Datagrams.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((double)(ICMP_Inbound_Datagrams.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((ICMP_Outbound_Datagrams.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((double)(ICMP_Outbound_Datagrams.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((IP_Inbound_Datagrams.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((double)(IP_Inbound_Datagrams.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((IP_Outbound_Datagrams.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((double)(IP_Outbound_Datagrams.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((TCP_Inbound_Datagrams.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((double)(TCP_Inbound_Datagrams.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((TCP_Outbound_Datagrams.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((double)(TCP_Outbound_Datagrams.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((UDP_Inbound_Datagrams.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[13].Value = ((double)(UDP_Inbound_Datagrams.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((UDP_Outbound_Datagrams.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[14].Value = ((double)(UDP_Outbound_Datagrams.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Misdirected_IP_Bytes.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[15].Value = ((double)(Misdirected_IP_Bytes.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((NonIP_Bytes.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[16].Value = ((double)(NonIP_Bytes.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((ARP_Inbound_Bytes.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[17].Value = ((double)(ARP_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((ARP_Outbound_Bytes.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[18].Value = ((double)(ARP_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((ICMP_Inbound_Bytes.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[19].Value = ((double)(ICMP_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((ICMP_Outbound_Bytes.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[20].Value = ((double)(ICMP_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((IP_Inbound_Bytes.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[21].Value = ((double)(IP_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((IP_Outbound_Bytes.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[22].Value = ((double)(IP_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((TCP_Inbound_Bytes.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[23].Value = ((double)(TCP_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((TCP_Outbound_Bytes.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[24].Value = ((double)(TCP_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((UDP_Inbound_Bytes.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[25].Value = ((double)(UDP_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((UDP_Outbound_Bytes.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[26].Value = ((double)(UDP_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Refused_Bytes.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[27].Value = ((double)(Refused_Bytes.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Refused_Datagrams.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[28].Value = ((double)(Refused_Datagrams.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    System.DateTime Poll_Time, 
                    string IP_Address, 
                    global::System.Nullable<bool> Refuse_Flag, 
                    global::System.Nullable<double> Misdirected_IP_Datagrams, 
                    global::System.Nullable<double> NonIP_Datagrams, 
                    global::System.Nullable<double> ARP_Inbound_Datagrams, 
                    global::System.Nullable<double> ARP_Outbound_Datagrams, 
                    global::System.Nullable<double> ICMP_Inbound_Datagrams, 
                    global::System.Nullable<double> ICMP_Outbound_Datagrams, 
                    global::System.Nullable<double> IP_Inbound_Datagrams, 
                    global::System.Nullable<double> IP_Outbound_Datagrams, 
                    global::System.Nullable<double> TCP_Inbound_Datagrams, 
                    global::System.Nullable<double> TCP_Outbound_Datagrams, 
                    global::System.Nullable<double> UDP_Inbound_Datagrams, 
                    global::System.Nullable<double> UDP_Outbound_Datagrams, 
                    global::System.Nullable<double> Misdirected_IP_Bytes, 
                    global::System.Nullable<double> NonIP_Bytes, 
                    global::System.Nullable<double> ARP_Inbound_Bytes, 
                    global::System.Nullable<double> ARP_Outbound_Bytes, 
                    global::System.Nullable<double> ICMP_Inbound_Bytes, 
                    global::System.Nullable<double> ICMP_Outbound_Bytes, 
                    global::System.Nullable<double> IP_Inbound_Bytes, 
                    global::System.Nullable<double> IP_Outbound_Bytes, 
                    global::System.Nullable<double> TCP_Inbound_Bytes, 
                    global::System.Nullable<double> TCP_Outbound_Bytes, 
                    global::System.Nullable<double> UDP_Inbound_Bytes, 
                    global::System.Nullable<double> UDP_Outbound_Bytes, 
                    global::System.Nullable<double> Refused_Bytes, 
                    global::System.Nullable<double> Refused_Datagrams, 
                    System.DateTime Original_Poll_Time, 
                    string Original_IP_Address, 
                    global::System.Nullable<bool> Original_Refuse_Flag, 
                    global::System.Nullable<double> Original_Misdirected_IP_Datagrams, 
                    global::System.Nullable<double> Original_NonIP_Datagrams, 
                    global::System.Nullable<double> Original_ARP_Inbound_Datagrams, 
                    global::System.Nullable<double> Original_ARP_Outbound_Datagrams, 
                    global::System.Nullable<double> Original_ICMP_Inbound_Datagrams, 
                    global::System.Nullable<double> Original_ICMP_Outbound_Datagrams, 
                    global::System.Nullable<double> Original_IP_Inbound_Datagrams, 
                    global::System.Nullable<double> Original_IP_Outbound_Datagrams, 
                    global::System.Nullable<double> Original_TCP_Inbound_Datagrams, 
                    global::System.Nullable<double> Original_TCP_Outbound_Datagrams, 
                    global::System.Nullable<double> Original_UDP_Inbound_Datagrams, 
                    global::System.Nullable<double> Original_UDP_Outbound_Datagrams, 
                    global::System.Nullable<double> Original_Misdirected_IP_Bytes, 
                    global::System.Nullable<double> Original_NonIP_Bytes, 
                    global::System.Nullable<double> Original_ARP_Inbound_Bytes, 
                    global::System.Nullable<double> Original_ARP_Outbound_Bytes, 
                    global::System.Nullable<double> Original_ICMP_Inbound_Bytes, 
                    global::System.Nullable<double> Original_ICMP_Outbound_Bytes, 
                    global::System.Nullable<double> Original_IP_Inbound_Bytes, 
                    global::System.Nullable<double> Original_IP_Outbound_Bytes, 
                    global::System.Nullable<double> Original_TCP_Inbound_Bytes, 
                    global::System.Nullable<double> Original_TCP_Outbound_Bytes, 
                    global::System.Nullable<double> Original_UDP_Inbound_Bytes, 
                    global::System.Nullable<double> Original_UDP_Outbound_Bytes, 
                    global::System.Nullable<double> Original_Refused_Bytes, 
                    global::System.Nullable<double> Original_Refused_Datagrams) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((System.DateTime)(Poll_Time));
            if ((IP_Address == null)) {
                throw new global::System.ArgumentNullException("IP_Address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(IP_Address));
            }
            if ((Refuse_Flag.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((bool)(Refuse_Flag.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Misdirected_IP_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((double)(Misdirected_IP_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((NonIP_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((double)(NonIP_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ARP_Inbound_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((double)(ARP_Inbound_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ARP_Outbound_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((double)(ARP_Outbound_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((ICMP_Inbound_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((double)(ICMP_Inbound_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((ICMP_Outbound_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((double)(ICMP_Outbound_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((IP_Inbound_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((double)(IP_Inbound_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((IP_Outbound_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((double)(IP_Outbound_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((TCP_Inbound_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((double)(TCP_Inbound_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((TCP_Outbound_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((double)(TCP_Outbound_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((UDP_Inbound_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((double)(UDP_Inbound_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((UDP_Outbound_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((double)(UDP_Outbound_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Misdirected_IP_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((double)(Misdirected_IP_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((NonIP_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((double)(NonIP_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((ARP_Inbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((double)(ARP_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            if ((ARP_Outbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((double)(ARP_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((ICMP_Inbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((double)(ICMP_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((ICMP_Outbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((double)(ICMP_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((IP_Inbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((double)(IP_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((IP_Outbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((double)(IP_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((TCP_Inbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((double)(TCP_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((TCP_Outbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((double)(TCP_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((UDP_Inbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((double)(UDP_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((UDP_Outbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((double)(UDP_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Refused_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((double)(Refused_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Refused_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((double)(Refused_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[29].Value = ((System.DateTime)(Original_Poll_Time));
            if ((Original_IP_Address == null)) {
                throw new global::System.ArgumentNullException("Original_IP_Address");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_IP_Address));
            }
            if ((Original_Refuse_Flag.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((bool)(Original_Refuse_Flag.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((Original_Misdirected_IP_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((double)(Original_Misdirected_IP_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((Original_NonIP_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((double)(Original_NonIP_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((Original_ARP_Inbound_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((double)(Original_ARP_Inbound_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Original_ARP_Outbound_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((double)(Original_ARP_Outbound_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Original_ICMP_Inbound_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((double)(Original_ICMP_Inbound_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((Original_ICMP_Outbound_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((double)(Original_ICMP_Outbound_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((Original_IP_Inbound_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[46].Value = ((double)(Original_IP_Inbound_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[45].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((Original_IP_Outbound_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[48].Value = ((double)(Original_IP_Outbound_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[47].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Original_TCP_Inbound_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[50].Value = ((double)(Original_TCP_Inbound_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[49].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_TCP_Outbound_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[52].Value = ((double)(Original_TCP_Outbound_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[51].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((Original_UDP_Inbound_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[54].Value = ((double)(Original_UDP_Inbound_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[53].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[54].Value = global::System.DBNull.Value;
            }
            if ((Original_UDP_Outbound_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[56].Value = ((double)(Original_UDP_Outbound_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[55].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Original_Misdirected_IP_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[58].Value = ((double)(Original_Misdirected_IP_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[57].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Original_NonIP_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[60].Value = ((double)(Original_NonIP_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[59].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[60].Value = global::System.DBNull.Value;
            }
            if ((Original_ARP_Inbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[62].Value = ((double)(Original_ARP_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[61].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((Original_ARP_Outbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[64].Value = ((double)(Original_ARP_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[63].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((Original_ICMP_Inbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[66].Value = ((double)(Original_ICMP_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[65].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[66].Value = global::System.DBNull.Value;
            }
            if ((Original_ICMP_Outbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[68].Value = ((double)(Original_ICMP_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[67].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[68].Value = global::System.DBNull.Value;
            }
            if ((Original_IP_Inbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[70].Value = ((double)(Original_IP_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[69].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[70].Value = global::System.DBNull.Value;
            }
            if ((Original_IP_Outbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[72].Value = ((double)(Original_IP_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[71].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[72].Value = global::System.DBNull.Value;
            }
            if ((Original_TCP_Inbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[74].Value = ((double)(Original_TCP_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[73].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[74].Value = global::System.DBNull.Value;
            }
            if ((Original_TCP_Outbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[76].Value = ((double)(Original_TCP_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[75].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[76].Value = global::System.DBNull.Value;
            }
            if ((Original_UDP_Inbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[78].Value = ((double)(Original_UDP_Inbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[77].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[78].Value = global::System.DBNull.Value;
            }
            if ((Original_UDP_Outbound_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[80].Value = ((double)(Original_UDP_Outbound_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[79].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[80].Value = global::System.DBNull.Value;
            }
            if ((Original_Refused_Bytes.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[82].Value = ((double)(Original_Refused_Bytes.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[81].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[82].Value = global::System.DBNull.Value;
            }
            if ((Original_Refused_Datagrams.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[84].Value = ((double)(Original_Refused_Datagrams.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[83].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[84].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    global::System.Nullable<bool> Refuse_Flag, 
                    global::System.Nullable<double> Misdirected_IP_Datagrams, 
                    global::System.Nullable<double> NonIP_Datagrams, 
                    global::System.Nullable<double> ARP_Inbound_Datagrams, 
                    global::System.Nullable<double> ARP_Outbound_Datagrams, 
                    global::System.Nullable<double> ICMP_Inbound_Datagrams, 
                    global::System.Nullable<double> ICMP_Outbound_Datagrams, 
                    global::System.Nullable<double> IP_Inbound_Datagrams, 
                    global::System.Nullable<double> IP_Outbound_Datagrams, 
                    global::System.Nullable<double> TCP_Inbound_Datagrams, 
                    global::System.Nullable<double> TCP_Outbound_Datagrams, 
                    global::System.Nullable<double> UDP_Inbound_Datagrams, 
                    global::System.Nullable<double> UDP_Outbound_Datagrams, 
                    global::System.Nullable<double> Misdirected_IP_Bytes, 
                    global::System.Nullable<double> NonIP_Bytes, 
                    global::System.Nullable<double> ARP_Inbound_Bytes, 
                    global::System.Nullable<double> ARP_Outbound_Bytes, 
                    global::System.Nullable<double> ICMP_Inbound_Bytes, 
                    global::System.Nullable<double> ICMP_Outbound_Bytes, 
                    global::System.Nullable<double> IP_Inbound_Bytes, 
                    global::System.Nullable<double> IP_Outbound_Bytes, 
                    global::System.Nullable<double> TCP_Inbound_Bytes, 
                    global::System.Nullable<double> TCP_Outbound_Bytes, 
                    global::System.Nullable<double> UDP_Inbound_Bytes, 
                    global::System.Nullable<double> UDP_Outbound_Bytes, 
                    global::System.Nullable<double> Refused_Bytes, 
                    global::System.Nullable<double> Refused_Datagrams, 
                    System.DateTime Original_Poll_Time, 
                    string Original_IP_Address, 
                    global::System.Nullable<bool> Original_Refuse_Flag, 
                    global::System.Nullable<double> Original_Misdirected_IP_Datagrams, 
                    global::System.Nullable<double> Original_NonIP_Datagrams, 
                    global::System.Nullable<double> Original_ARP_Inbound_Datagrams, 
                    global::System.Nullable<double> Original_ARP_Outbound_Datagrams, 
                    global::System.Nullable<double> Original_ICMP_Inbound_Datagrams, 
                    global::System.Nullable<double> Original_ICMP_Outbound_Datagrams, 
                    global::System.Nullable<double> Original_IP_Inbound_Datagrams, 
                    global::System.Nullable<double> Original_IP_Outbound_Datagrams, 
                    global::System.Nullable<double> Original_TCP_Inbound_Datagrams, 
                    global::System.Nullable<double> Original_TCP_Outbound_Datagrams, 
                    global::System.Nullable<double> Original_UDP_Inbound_Datagrams, 
                    global::System.Nullable<double> Original_UDP_Outbound_Datagrams, 
                    global::System.Nullable<double> Original_Misdirected_IP_Bytes, 
                    global::System.Nullable<double> Original_NonIP_Bytes, 
                    global::System.Nullable<double> Original_ARP_Inbound_Bytes, 
                    global::System.Nullable<double> Original_ARP_Outbound_Bytes, 
                    global::System.Nullable<double> Original_ICMP_Inbound_Bytes, 
                    global::System.Nullable<double> Original_ICMP_Outbound_Bytes, 
                    global::System.Nullable<double> Original_IP_Inbound_Bytes, 
                    global::System.Nullable<double> Original_IP_Outbound_Bytes, 
                    global::System.Nullable<double> Original_TCP_Inbound_Bytes, 
                    global::System.Nullable<double> Original_TCP_Outbound_Bytes, 
                    global::System.Nullable<double> Original_UDP_Inbound_Bytes, 
                    global::System.Nullable<double> Original_UDP_Outbound_Bytes, 
                    global::System.Nullable<double> Original_Refused_Bytes, 
                    global::System.Nullable<double> Original_Refused_Datagrams) {
            return this.Update(Original_Poll_Time, Original_IP_Address, Refuse_Flag, Misdirected_IP_Datagrams, NonIP_Datagrams, ARP_Inbound_Datagrams, ARP_Outbound_Datagrams, ICMP_Inbound_Datagrams, ICMP_Outbound_Datagrams, IP_Inbound_Datagrams, IP_Outbound_Datagrams, TCP_Inbound_Datagrams, TCP_Outbound_Datagrams, UDP_Inbound_Datagrams, UDP_Outbound_Datagrams, Misdirected_IP_Bytes, NonIP_Bytes, ARP_Inbound_Bytes, ARP_Outbound_Bytes, ICMP_Inbound_Bytes, ICMP_Outbound_Bytes, IP_Inbound_Bytes, IP_Outbound_Bytes, TCP_Inbound_Bytes, TCP_Outbound_Bytes, UDP_Inbound_Bytes, UDP_Outbound_Bytes, Refused_Bytes, Refused_Datagrams, Original_Poll_Time, Original_IP_Address, Original_Refuse_Flag, Original_Misdirected_IP_Datagrams, Original_NonIP_Datagrams, Original_ARP_Inbound_Datagrams, Original_ARP_Outbound_Datagrams, Original_ICMP_Inbound_Datagrams, Original_ICMP_Outbound_Datagrams, Original_IP_Inbound_Datagrams, Original_IP_Outbound_Datagrams, Original_TCP_Inbound_Datagrams, Original_TCP_Outbound_Datagrams, Original_UDP_Inbound_Datagrams, Original_UDP_Outbound_Datagrams, Original_Misdirected_IP_Bytes, Original_NonIP_Bytes, Original_ARP_Inbound_Bytes, Original_ARP_Outbound_Bytes, Original_ICMP_Inbound_Bytes, Original_ICMP_Outbound_Bytes, Original_IP_Inbound_Bytes, Original_IP_Outbound_Bytes, Original_TCP_Inbound_Bytes, Original_TCP_Outbound_Bytes, Original_UDP_Inbound_Bytes, Original_UDP_Outbound_Bytes, Original_Refused_Bytes, Original_Refused_Datagrams);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Connection_Stats_by_LocalPortTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Connection_Stats_by_LocalPortTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Connection_Stats_by_LocalPort";
            tableMapping.ColumnMappings.Add("Local_Port", "Local_Port");
            tableMapping.ColumnMappings.Add("Expr1", "Expr1");
            tableMapping.ColumnMappings.Add("Expr2", "Expr2");
            tableMapping.ColumnMappings.Add("Expr3", "Expr3");
            tableMapping.ColumnMappings.Add("Expr4", "Expr4");
            tableMapping.ColumnMappings.Add("Expr5", "Expr5");
            tableMapping.ColumnMappings.Add("Expr6", "Expr6");
            tableMapping.ColumnMappings.Add("Expr7", "Expr7");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=DANSDELL\\SQLEXPRESS;Initial Catalog=VseDb;Integrated Security=True";
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     Local_Port, SUM(Recvs_Issued) AS Expr1, SUM(Inbound_Data) AS Expr2, SUM(Inbound_Bytes) AS Expr3, SUM(Sends_Issued) AS Expr4, 
                      SUM(Outbound_Data) AS Expr5, SUM(Outbound_Bytes) AS Expr6, SUM(Retransmits) AS Expr7
FROM         Connection_Stats
WHERE     (Poll_Time = @pollTime)
GROUP BY Local_Port";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@pollTime", global::System.Data.SqlDbType.DateTime, 8, global::System.Data.ParameterDirection.Input, 0, 0, "Poll_Time", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(VseDbDataSet.Connection_Stats_by_LocalPortDataTable dataTable, System.DateTime pollTime) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(pollTime));
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual VseDbDataSet.Connection_Stats_by_LocalPortDataTable GetData(System.DateTime pollTime) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(pollTime));
            VseDbDataSet.Connection_Stats_by_LocalPortDataTable dataTable = new VseDbDataSet.Connection_Stats_by_LocalPortDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591